#!/bin/bash

# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

set -eu
unset CDPATH
ulimit -c 0

SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${SCRIPT_DIR}/../.."; pwd)

NVHPC_ROOT='/software/all/toolkit/nvidia_hpc_sdk/23.9/Linux_x86_64/23.9'

PGI_ROOT="${NVHPC_ROOT}/compilers"
PGI_LIBS='-lstdc++ -llapack -lblas -lnvf'

CUDA_ROOT="${NVHPC_ROOT}/cuda/12.2"
CUDA_LIBS='-lcudart'

CUDACXX="${PGI_ROOT}/bin/nvcc"
FC="${PGI_ROOT}/bin/nvfortran"
CC="${PGI_ROOT}/bin/nvc"
AR='/usr/bin/ar'


#MPI_ROOT="${NVHPC_ROOT}/comm_libs/openmpi/openmpi-3.1.5/" # OpenMPI 3.1.5
#MPI_ROOT="${NVHPC_ROOT}/comm_libs/12.2/openmpi4/openmpi-4.1.5/" # OpenMPI 4.1.5
MPI_ROOT="${NVHPC_ROOT}/comm_libs/12.2/hpcx/hpcx-2.16/ompi/" # hpcx 2.16
MPI_FORTRAN_MOD_DIR="${MPI_ROOT}/lib"
MPI_LIBS='-lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi'

HDF5_ROOT='/software/all/lib/hdf5/1.12_nvidia_23.9_serial'
HDF5_LIBS='-lhdf5_hl -lhdf5 -lhdf5_hl_fortran -lhdf5_fortran'

NETCDF_ROOT='/software/all/lib/netcdf/4.9_serial_nvidia_23.9'
NETCDF_LIBS='-lnetcdf'

NETCDFF_ROOT='/software/all/lib/netcdf-fortran/4.6_serial_nvidia_23.9'
NETCDFF_LIBS='-lnetcdff'

ECCODES_ROOT='/software/all/lib/eccodes/2.32.0_nvidia_23.9'
ECCODES_LIBS='-leccodes -leccodes_f90'

FYAML_ROOT='/software/all/lib/libfyaml/0.9' # 2024-03-19: coupling not yet supported
FYAML_LIBS='-lfyaml'

SERIALBOX2_ROOT='/hkfs/home/dataset/datasets/icon/sw/serialbox2-ae5b5a7_nvidia_23.9'
SERIALBOX2_LIBS='-lSerialboxFortran -lSerialboxC -lSerialboxCore'
SB2PP="/usr/bin/python2 ${SERIALBOX2_ROOT}/python/pp_ser/pp_ser.py"

# Libraries in /usr/lib{,64}
XML2_INCLUDE_DIR='/usr/include/libxml2'
XML2_LIBS='-lxml2'
ZLIB_LIBS='-lz'

# RTTOV: feature will only be activated if ${RTTOV_ROOT}/lib and ${RTTOV_ROOT}/include
# are readable for the current user! The system installation has restricted permissions
# and only grants read access to users in the 'hk-project-glori-init' group.
RTTOV_ROOT='/hkfs/home/dataset/datasets/icon/sw/rttov/rttov13/nvhpc-23.9_hdf-1.12_netcdff-4.6'
RTTOV_LIBS='-lrttov13'

################################################################################

BUILD_ENV="export LD_LIBRARY_PATH=\"${PGI_ROOT}/lib:${MPI_ROOT}/lib:${CUDA_ROOT}/lib64:${HDF5_ROOT}/lib:${NETCDF_ROOT}/lib:${NETCDFF_ROOT}/lib:${ECCODES_ROOT}/lib64:${FYAML_ROOT}/lib:${SERIALBOX2_ROOT}/lib:/usr/lib64:/usr/lib\";export PATH=\"${HDF5_ROOT}/bin:${NETCDF_ROOT}/bin/:/usr/bin\"; unset CPATH C_INCLUDE_PATH CPLUS_INCLUDE_PATH INCLUDE LIBRARY_PATH;"

LDFLAGS="-L${PGI_ROOT}/lib -L${MPI_ROOT}/lib -L${CUDA_ROOT}/lib64 -L${HDF5_ROOT}/lib -L${NETCDF_ROOT}/lib -L${NETCDFF_ROOT}/lib -L${ECCODES_ROOT}/lib64 -L${FYAML_ROOT}/lib -L${SERIALBOX2_ROOT}/lib"
LIBS="-Wl,--as-needed ${PGI_LIBS} ${MPI_LIBS} ${CUDA_LIBS} ${HDF5_LIBS} ${NETCDF_LIBS} ${NETCDFF_LIBS} ${ECCODES_LIBS} ${FYAML_LIBS} ${SERIALBOX2_LIBS} ${XML2_LIBS} ${ZLIB_LIBS} -lrt"

CUDAFLAGS='--std=c++14 -arch=sm_80 -g -O3'
# 2023-11-06: currently IAU gives inconsistent results with -O2 in FCFLAGS.
FCFLAGS="-I${MPI_ROOT}/include -I${MPI_FORTRAN_MOD_DIR} -I${HDF5_ROOT}/include -I${NETCDFF_ROOT}/include -I${ECCODES_ROOT}/include -I${SERIALBOX2_ROOT}/include -Mpreprocess -g -O -Mrecursive -Mallocatable=03 -Minfo=accel,inline -Mstack_arrays ${HK_GPU_FCFLAGS}"
CFLAGS="-std=c99 -g -O2 -I${FYAML_ROOT}/include"
CPPFLAGS="-I${MPI_ROOT}/include -I${HDF5_ROOT}/include -I${NETCDF_ROOT}/include -I${ECCODES_ROOT}/include -I${XML2_INCLUDE_DIR}"

# The compiler fails to process some of the EMVORADO and DACE source files with
# the default optimization level:
ICON_WORKAROUND1_FCFLAGS="-O1 "
ICON_WORKAROUND1_PATH='externals/dace_icon/src_for_icon/mo_rad.f90:src/data_assimilation/interfaces/radar_interface.f90'

MPI_LAUNCH="${MPI_ROOT}/bin/mpirun ${HK_GPU_MPIRUN_FLAGS}"

EXTRA_CONFIG_ARGS="--disable-loop-exchange --disable-coupling --disable-serialization --enable-grib2 --enable-art --enable-ecrad --enable-emvorado --enable-dace"
#EXTRA_CONFIG_ARGS+=' --enable-emvorado --enable-dace --enable-fcgroup-WORKAROUND1'
EXTRA_CONFIG_ARGS+=" --disable-mpi-checks"

# Enable RTTOV if installation is available
if [[ -r "${RTTOV_ROOT}/lib" ]] && [[ -r "${RTTOV_ROOT}/include" ]]; then
    echo "Enabling RTTOV with RTTOV_ROOT=${RTTOV_ROOT}"
    LDFLAGS="${LDFLAGS} -L${RTTOV_ROOT}/lib"
    LIBS="${LIBS} ${RTTOV_LIBS}"
    FCFLAGS="${FCFLAGS} -I${RTTOV_ROOT}/include"
    EXTRA_CONFIG_ARGS="${EXTRA_CONFIG_ARGS} --enable-rttov"
else
    echo "Disabling RTTOV due to missing read access for ${RTTOV_ROOT}."
    EXTRA_CONFIG_ARGS="${EXTRA_CONFIG_ARGS} --disable-rttov"
fi

################################################################################

"${ICON_DIR}/configure" \
BUILD_ENV="${BUILD_ENV}" \
AR="${AR}" \
CC="${CC}" \
CFLAGS="${CFLAGS}" \
ICON_WORKAROUND1_FCFLAGS="${ICON_WORKAROUND1_FCFLAGS}" \
ICON_WORKAROUND1_PATH="${ICON_WORKAROUND1_PATH}" \
CPPFLAGS="${CPPFLAGS}" \
FC="${FC}" \
FCFLAGS="${FCFLAGS}" \
LDFLAGS="${LDFLAGS}" \
LIBS="${LIBS}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
CUDACXX="$CUDACXX" \
CUDAFLAGS="$CUDAFLAGS" \
SB2PP="${SB2PP}" \
${EXTRA_CONFIG_ARGS} \
"$@"

for arg in "$@"; do
  case $arg in
    -help | --help | --hel | --he | -h | -help=r* | --help=r* | --hel=r* | --he=r* | -hr* | -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
      test -n "${EXTRA_CONFIG_ARGS}" && echo '' && echo "This wrapper script ('$0') calls the configure script with the following extra arguments, which might override the default values listed above: ${EXTRA_CONFIG_ARGS}"
      exit 0 ;;
  esac
done

# Copy runscript-related files when building out-of-source:
if test $(pwd) != $(cd "${ICON_DIR}"; pwd); then
  echo "Copying runscript input files from the source directory..."
  rsync -uavz ${ICON_DIR}/run . --exclude='*.in' --exclude='.*' --exclude='standard_*'
  ln -sf -t run/ ${ICON_DIR}/run/standard_*
  ln -sf set-up.info run/SETUP.config
  rsync -uavz ${ICON_DIR}/externals . --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='*.mod' --exclude='*.o'
  rsync -uavz ${ICON_DIR}/make_runscripts .
  ln -sf ${ICON_DIR}/data
  ln -sf ${ICON_DIR}/vertical_coord_tables
fi

