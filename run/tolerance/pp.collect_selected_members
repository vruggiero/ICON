#!/bin/bash

# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

set -euo pipefail

# This script runs the member selection for probtest


# Variables passed via list_probtest -> addexp/runexp -> create_target_header
#
# tolerance_experiments : comma separated list of experiments
# basedir : the directory where ICON has been build in.

# make sure the resulting data and directories are global readable
umask 0022

# generating iterable array of builders
IFS=',' read -ra experiments <<< "${tolerance_experiments}"

# Sort experiments in alphabetic order
sorted_experiments=($(for exp in "${experiments[@]}"; do echo $exp; done | sort))

# Please don't change these path/file names. They are used by buildbot.
yaml_path=scripts/experiments

# Update the selected members in the corresponding file 
echo ""
echo "Please update or add the following lines with the selected members and the "
echo "tolerance factor (if not the default value of 5) to the corresponding experiment "
echo "in '${yaml_path}/<group>/<test-type>_tests.yml'."
echo "If any of the experiments is not yet in the list, please add it in alphabetical order."
echo ""
for exp in "${sorted_experiments[@]}"; do
    if [ -f "${basedir}/${exp}_selected_members.csv" ]; then
        selected_members=$(sed -n '1p' "${basedir}/${exp}_selected_members.csv")
        export_factor=$(sed -n '2p' "${basedir}/${exp}_selected_members.csv")
        # Extract the factor from the second line
        factor=$(echo "$export_factor" | grep -oE '[0-9]+')
        echo "- name: ${exp}"
        echo "  ensemble_num:"
        echo "    - ${BB_NAME}: $selected_members"
        echo "  tolerance_factor:"
        echo "    - ${BB_SYSTEM}: $factor"
        echo ""
    else
        echo "WARNING: The member selection failed for ${exp}."
        echo ""
    fi
done

# exit 0 on success (and don't execute any appended scripts)
exit 0
