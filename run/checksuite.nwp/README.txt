------------------------------------------------------
DWD Setup for BuildBot
------------------------------------------------------

[2020-09-21] : M Jacob, DWD: Ported most experiments to make_runscripts + make_target_runscript mechanism


This directory contains DWD NWP test experiments.
These experiment work fully on the DWD rcl machine.
However, their input data has also been transferred to Levante but the experiments have not been tested there in detail.


How to use
----------
The experiments are provided as templates. Complete run scripts must be generated by `make_target_runscript`.
The latter command is nicely wrapped by the `make_runscripts` program which is located at the root of the build directory.
To generate all run in this directory execute

    ./make_runscripts --all -r run/checksuite.nwp

from the root of your build directory.


For the SX-AURORA system it is recommended to build the vector host and vector engine binaries in two build directories:
    some_directory/host
    some_directory/vector
After building both, run the following to generate all run scripts.
    some_directory/vector/make_runscripts --all -r run/checksuite.nwp
(make_runscripts must be run in the build directory for the Vector Engine.)

Alternative directory names are `VH` and `VE`.
If you use another structure for your build directories, use the `-s` as explained when executing `./make_runscripts -h`.


How it works
------------
`make_runscripts` calls `run/make_target_runscript` which uses `run/create_target_header` to generate full run scripts.
These run scripts get a machine depend header which is defined in `create_target_header`.
`create_target_header` also specifies the node configuration of each experiment.


Experiments in this directory have to start with `nwpexp.`. This prefix was chosen to differentiate them from other `exp.*` experiments as those experiment use the complex script `run/exec.iconrun`.


`nwpexp.*` experiments do not require and use `exec.iconrun`!
However `run/add_run_routines` will be sourced into the job script through `create_target_header` as some functions defined in `add_run_routines` are used in the experiments.
