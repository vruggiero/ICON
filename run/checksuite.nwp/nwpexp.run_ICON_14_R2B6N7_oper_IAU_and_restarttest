# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

#-----------------------------------------------------------------------------
#
# Quasi-operational single EPS member run
#
# Global R2B6 main run with R2B7 EU nest.
# Starting from DWD analysis (IAU)
# For the nest, surface analysis is read from file, while atmospheric analysis 
# is interpolated from parent grid.
#
# Checks:
# 3 forecast runs are performed:
# I  ) forecast run with iterative IAU
# II ) forecast run without iterative IAU, which writes a restart file
# III) restart run, starting from the previously written restart file
# IV ) nproma run: short (+2h) run without iterative IAU with a modified nproma
# V* ) openmp run: short (+2h) run without iterative IAU, number of openmp threads is set to 2
# *Only performed for nec_hybrid builder
# By comparing the output files, this test case checks the correctness of
#
# - iterative IAU
# - restart
# - nproma bit identity
# - openmp bit identity
#

# ----------------------------------------------------------------------
# path definitions
# ----------------------------------------------------------------------

make_and_change_to_experiment_dir # function in ../add_run_routines

# Combine START and MODEL if START_MODEL is not already set.
# START_MODEL is used to ease the execution of a machine that uses a complex 
# mpirun command with multiple binaries
START_MODEL="${START_MODEL:=$START $MODEL}"

# set icon_data_poolFolder
icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/buildbot_data/nwp"

export PATH=${PATH}:~routfor/routfox/bin

# base directory for ICON sources, binary and auxilary data:
ICONDIR="${basedir}" # basedir can be set with create_target_header

# experiment identifier for output files
# experiment identifier (replace III with your initials and EEEE by a four
# digit number for the current experiment and  TTTT  by some text).
# EXP=IIIEEEETTTT (see as well above for the job names)
EXP="NWP"    # experiment identifier

# root directory for input data
DATAROOT="${icon_data_poolFolder}/Checksuite_data"

# directory for grid and extpar files
GRIDDIR="${icon_data_poolFolder}/grids/public/edzw"
# GRIDDIR links to /hpc/rwork0/routfor/routfox/icon/grids/public/edzw on RCL
EXTPDIR="$GRIDDIR" # external parameter directory

# absolute path to input directory
INDIR=${DATAROOT}/InidataExp14

MAP_FILE=${ICONDIR}/run/ana_varnames_map_file.txt

set +x

# ----------------------------------------------------------------------
# copy input data: grids, external parameters
# ----------------------------------------------------------------------

# Grids
ln -sf $GRIDDIR/icon_grid_0023_R02B05_R.nc iconR2B05_DOM00.nc
ln -sf $GRIDDIR/icon_grid_0023_R02B05_R-grfinfo.nc iconR2B05_DOM00-grfinfo.nc
ln -sf $GRIDDIR/icon_grid_0024_R02B06_G.nc iconR2B06_DOM01.nc
ln -sf $GRIDDIR/icon_grid_0024_R02B06_G-grfinfo.nc iconR2B06_DOM01-grfinfo.nc
ln -sf $GRIDDIR/icon_grid_0028_R02B07_N02.nc iconR2B07_DOM02.nc
ln -sf $GRIDDIR/icon_grid_0028_R02B07_N02-grfinfo.nc iconR2B07_DOM02-grfinfo.nc

# EXTPAR
ln -sf $EXTPDIR/icon_extpar_0024_R02B06_G_20180625_tiles.nc extpar_iconR2B06_DOM01.nc
ln -sf $EXTPDIR/icon_extpar_0028_R02B07_N02_20180625_tiles.nc extpar_iconR2B07_DOM02.nc

# files needed for radiation
ln -sf ${ICONDIR}/externals/ecrad/data ecrad_data

# files needed for RTTOV
ln -sf ${icon_data_poolFolder}/externals/rttov/const/rt13coeffs_rttov7pred54L/* .



# ----------------------------------------------------------------------
# global namelist settings
# ----------------------------------------------------------------------

# the namelist filename
atmo_namelist=NAMELIST_${EXP}


cymdg=2018100100

echo dates $cymdg

# initial data
ln -sf $INDIR/${cymdg}/m013/igaf${cymdg}     an_R02B06_DOM01.grb
ln -sf $INDIR/${cymdg}/m013/igfff00013000    fg_R02B06_DOM01.grb
ln -sf $INDIR/${cymdg}/m013/iefff00013000    fg_R02B07_DOM02.grb

# the grid and extpar parameters
atmo_dyn_grids="iconR2B06_DOM01.nc iconR2B07_DOM02.nc"
atmo_rad_grids="iconR2B05_DOM00.nc"

# save the machine dependent nproma set by create_target_header
nproma_default=$nproma

# ============================================================================
#                        LOOP: MODEL IS EXECUTED THREE TIMES
# ============================================================================

echo "Running on BB_NAME: " ${BB_NAME}

# EXP names
EXP1="reference"
EXP2="iterative_IAU"
EXP3="restart"
EXP4="nproma"
# Perform additional iteration with different number of threads
if [[ ${BB_NAME} == 'DWD_nec_hybrid' ]]; then
  tot_iter=5
  EXP5="omp"
else
  tot_iter=4
fi

iter=1
while [ $iter -le $tot_iter ]; do


if [ $iter -eq 1 ] ; then

  echo "##############################################################"
  echo "###            Reference run with iterative IAU            ###"
  echo "##############################################################"

  OMP_NUM_THREADS=1

  # reference run with iterative IAU
  nproma=$nproma_default # was 760 for NEC
  lrestart=".FALSE."
  num_restart_procs="2"
  iterate_iau=".TRUE."
  restart_interval="P1D"
  checkpoint_interval="P1D"
  restart_write_mode=""
  start_date="2018-10-01T00:00:00Z"
  stop_date="2018-10-01T13:30:00Z"

elif [ $iter -eq 2 ] ; then

  echo "#############################################################"
  echo "###     Run without iterative IAU, write restart file     ###"
  echo "#############################################################"

  OMP_NUM_THREADS=1

  # run without iterative IAU, which writes restart file after 7H
  nproma=$nproma_default # was 760 for NEC
  lrestart=".FALSE."
  num_restart_procs="2"
  iterate_iau=".FALSE."
  restart_interval="P1D"
  checkpoint_interval="PT7H"
  restart_write_mode="dedicated procs multifile"
  start_date="2018-10-01T00:00:00Z"
  stop_date="2018-10-01T13:30:00Z"

elif [ $iter -eq 3 ] ; then

  echo "#############################################################"
  echo "###                      Restart run                      ###"
  echo "#############################################################"

  OMP_NUM_THREADS=1

  # restart run
  nproma=$nproma_default # was 760 for NEC
  lrestart=".TRUE."
  num_restart_procs="2"
  iterate_iau=".FALSE."
  restart_interval="P1D"
  checkpoint_interval="P1D"
  restart_write_mode="dedicated procs multifile"
  start_date="2018-10-01T00:00:00Z"
  stop_date="2018-10-01T13:30:00Z"

  # remove output files written after restart because existing output files are opened
  # in append mode in case of a restart (only relevant for manually executed tests)
  rm -f NWP3_winds*.nc

elif [ $iter -eq 4 ] ; then

  echo "#############################################################"
  echo "###                       nproma run                      ###"
  echo "#############################################################"

  OMP_NUM_THREADS=1

  # This setup peforms a short (+2h) run without iterative IAU
  # with a modified nproma (760 has a comparable speed to 752)
  let "nproma=$nproma_default+8" # was 752 for NEC
  lrestart=".FALSE."
  num_restart_procs="2"
  iterate_iau=".FALSE."
  restart_interval="P1D"
  checkpoint_interval="PT7H"
  restart_write_mode="dedicated procs multifile"
  start_date="2018-10-01T00:00:00Z"
  stop_date="2018-10-01T02:00:00Z"

else

  echo "#############################################################"
  echo "###                        OMP run                        ###"
  echo "#############################################################"

  OMP_NUM_THREADS=2

  # This setup peforms a short (+2h) run without iterative IAU
  # The number of openmp threads is set to 2 (which is 1 for the reference)
  nproma=$nproma_default # was 760 for NEC
  lrestart=".FALSE."
  num_restart_procs="2"
  iterate_iau=".FALSE."
  restart_interval="P1D"
  checkpoint_interval="PT7H"
  restart_write_mode="dedicated procs multifile"
  start_date="2018-10-01T00:00:00Z"
  stop_date="2018-10-01T02:00:00Z"

fi

# update PPN
let PPN=${CPE}*${NE}/${OMP_NUM_THREADS}

# Run information
echo "NE CPE PPN: $NE $CPE $PPN"

# ----------------------------------------------------------------------
# create ICON master namelist
# ----------------------------------------------------------------------

# For a complete list see Namelist_overview and Namelist_overview.pdf

cat > icon_master.namelist << EOF
&master_nml
 lrestart                     = $lrestart
/
&master_time_control_nml
 experimentStartDate          = "$start_date"
 experimentStopDate           = "$stop_date"
 restartTimeIntval            = "$restart_interval"
 checkpointTimeIntval         = "$checkpoint_interval"
/
&master_model_nml
  model_type                  = 1
  model_name                  = "ATMO"
  model_namelist_filename     = "$atmo_namelist"
  model_min_rank              = 1
  model_max_rank              = 65536
  model_inc_rank              = 1
/
EOF

#-----------------------------------------------------------------------------
#

#-----------------------------------------------------------------------------
#
# ------------------------------
# write ICON namelist parameters
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
# ------------------------
# reconstrcuct the grid parameters in namelist form
dynamics_grid_filename=""
for gridfile in ${atmo_dyn_grids}; do
  dynamics_grid_filename="${dynamics_grid_filename} '${gridfile}',"
done
radiation_grid_filename=""
for gridfile in ${atmo_rad_grids}; do
  radiation_grid_filename="${radiation_grid_filename} '${gridfile}',"
done



# ------------------------

# Variables to configure the mpirun command on the RCL
num_io_procs=1
num_prefetch_proc=0
num_io_procs_radar=0

cat > ${atmo_namelist} << EOF
&parallel_nml
 nproma                       =  ${nproma}
 nproma_sub                   =  ${nproma} ! use variable nproma_sub for nproma-test
 p_test_run                   = .FALSE.
 l_test_openmp                = .FALSE.
 l_log_checks                 = .FALSE.
 num_io_procs                 = ${num_io_procs}
 num_restart_procs            = ${num_restart_procs}
 num_prefetch_proc            = ${num_prefetch_proc}
 num_io_procs_radar           = ${num_io_procs_radar}
 iorder_sendrecv              = 3
 proc0_shift                  = ${proc0_shift}
 use_omp_input                = .true.
/
&grid_nml
 dynamics_grid_filename		= ${dynamics_grid_filename}
 radiation_grid_filename	= ${radiation_grid_filename}
 dynamics_parent_grid_id	= 0,1
 lredgrid_phys			= .TRUE.,.TRUE.
 lfeedback			= .TRUE.
 ifeedback_type			= 2
 start_time			= 0., -5400.    ! ** Achtung: muss "0.,-5400." heissen, wenn Input am genesteten Gebiet gelesen werden soll **
 end_time			= 0., 432000.   ! ** bewirkt, dass das Nest nur bis vv=120h laueft **
/
&synsat_nml
 lsynsat			= .TRUE.,.TRUE.
/
&initicon_nml
 init_mode			= 5           ! operation mode
 lread_ana			= .TRUE.
 dt_iau				= 10800
 dt_shift			= -5400
 iterate_iau                    = $iterate_iau
 lconsistency_checks            = .TRUE.
 zpbl1				= 500.
 zpbl2				= 1000.
 dwdfg_filename			= "<path>fg_R<nroot0>B<jlev>_DOM<idom>.grb"
 dwdana_filename		= "<path>an_R<nroot0>B<jlev>_DOM<idom>.grb"
 ana_varnames_map_file		= "${MAP_FILE}"
 ltile_coldstart		= .FALSE.
 lp2cintp_incr			= .true.
 lp2cintp_sfcana		= .true.
 use_lakeiceana                 = .true.
 icpl_da_sfcevap                = 5
 icpl_da_skinc                  = 2
 adjust_tso_tsnow               = .TRUE.
 icpl_da_snowalb                = 3
 icpl_da_landalb                = 1
 icpl_da_sfcfric                = 1
 icpl_da_tkhmin                 = 1
/
&io_nml
 itype_pres_msl                 = 5              ! New extrapolation method to circumvent Ninjo problem with surface inversions
 itype_rh                       = 1              ! RH w.r.t. water
 dt_diag                        = 3600.          ! interval for totint
 restart_write_mode             = "${restart_write_mode}"
 nrestart_streams               = 4
/
&run_nml
 num_lev			= 90,60
 lvert_nest			= .TRUE.
 modelTimeStep                  = "PT6M"
 ldynamics			= .TRUE.      ! dynamics
 ltransport			= .TRUE.
 iforcing			= 3           ! NWP forcing
 lart                           = .FALSE.     ! ICON-ART main switch
 ltestcase			= .FALSE.     ! false: run with real data
 msg_level			= 12          ! default: 5, much more: 20
 ltimer				= .TRUE.
 timers_level			= 10
 activate_sync_timers		= .FALSE.
 output				= "nml","totint"
/
&nwp_phy_nml
 inwp_gscp			= 1   ! 1: default, or 10
 inwp_convection		= 1
 inwp_radiation			= 4
 inwp_cldcover			= 1   ! 0: no cld, 1: new diagnostic, 3: COSMO, 5: grid scale
 inwp_turb			= 1
 inwp_satad			= 1
 inwp_sso			= 1
 inwp_gwd			= 1
 inwp_surface			= 1
 icapdcycl			= 3 ! apply CAPE modification to improve diurnalcycle over tropical land (optimizes NWP scores)
 latm_above_top			= .TRUE.,.TRUE.
 efdt_min_raylfric		= 7200.
 itype_z0			= 2   ! 1: default, 2: turn off SSO part of z0
 icpl_aero_conv			= 1
 icpl_aero_gscp			= 1
 dt_rad				= 2160.
 dt_conv			= 720.,360.
 dt_sso				= 1440.,720.
 dt_gwd				= 1440.
 ldetrain_conv_prec             = .false.,.false.        ! to activate detrainment of rain and snow (only R3B8)
 mu_rain                        = 0.5
 rain_n0_factor                 = 0.1
/
&turbdiff_nml
 tkhmin				= 0.75
 tkmmin				= 0.75
 tkmmin_strat                   = 1.5
 pat_len			= 750.
 c_diff				= 0.2
 rat_sea			= 0.8
 ltkesso			= .true.
 frcsmot			= 0.2      ! these 2 switches together apply vertical smoothing of the TKE source terms
 imode_frcsmot			= 2  ! in the tropics (only), which reduces the moist bias in the tropical lower troposphere
 itype_sher			= 3
 ltkeshs			= .TRUE.
 a_hshr				= 2.0
 alpha0				= 0.0123
 alpha0_max			= 0.0335
 icldm_turb                     = 1
/
&lnd_nml
 ntiles				= 3
 nlev_snow			= 3
 lmulti_snow			= .false.
 itype_heatcond			= 3
 idiag_snowfrac			= 20
 lsnowtile			= .true.  !! later on .true. if GRIB encoding issues are solved
 lseaice			= .true.
 llake				= .true.
 lprog_albsi                    = .true.
 itype_lndtbl			= 4  ! minimizes moist/cold bias in lower tropical troposphere
 itype_root			= 2
 itype_evsl                     = 4
 itype_trvg                     = 3
 cwimax_ml                      = 5.e-4
 itype_canopy                   = 2
 cskinc                         = -1.0
 c_soil                         = 1.25
 c_soil_urb                     = 0.5
 sstice_mode                    = 2  ! 1: constant SST; 2: with climatological SST increments
 itype_snowevap                 = 3
/
&radiation_nml
 irad_o3			= 79
 irad_aero			= 6
 albedo_type			= 2           ! 1: default, 2: MODIS
 vmr_co2			= 390.e-06 ! values representative for 2012
 vmr_ch4			= 1800.e-09
 vmr_n2o			= 322.0e-09
 vmr_o2				= 0.20946
 vmr_cfc11			= 240.e-12
 vmr_cfc12			= 532.e-12
 ecrad_data_path                = './ecrad_data'
 isolrad                        = 1
 ecrad_isolver = ${radiation_ecrad_isolver}
 ! Solver version. 2: McICA with OpenACC, 0: McICA
/
&nonhydrostatic_nml
 iadv_rhotheta			= 2
 ivctype			= 2
 itime_scheme			= 4
 exner_expol			= 0.333
 vwind_offctr			= 0.2
 damp_height			= 44000.
 rayleigh_coeff			= 0.5
 divdamp_order			= 24
 divdamp_type			= 32 
 divdamp_fac			= 0.004
 divdamp_trans_start            = 12500
 divdamp_trans_end              = 17500
 igradp_method			= 3
 l_zdiffu_t			= .true.
 thslp_zdiffu			= 0.02
 thhgtd_zdiffu			= 125.
 htop_moist_proc		= 22500.
 hbot_qvsubstep			= 16000.
/
&sleve_nml
 min_lay_thckn			= 20.
 max_lay_thckn			= 400.   ! maximum layer thickness below htop_thcknlimit
 htop_thcknlimit		= 14000. ! this implies that the upcoming COSMO-EU nest will have 60 levels
 top_height			= 75000.
 stretch_fac			= 0.9
 decay_scale_1			= 4000.
 decay_scale_2			= 2500.
 decay_exp			= 1.2
 flat_height			= 16000.
/
&dynamics_nml
 divavg_cntrwgt			= 0.50
 lcoriolis			= .TRUE.
/
&transport_nml
 ivadv_tracer			= 3,3,3,3,3
 itype_hlimit			= 3,4,4,4,4
 ihadv_tracer			= 52,2,2,2,2
 llsq_svd                       = .false.
 nadv_substeps                  = 3,2
/
&diffusion_nml
 hdiff_order                    = 5
 itype_vn_diffu                 = 1
 itype_t_diffu                  = 2
 hdiff_efdt_ratio               = 24.0
 hdiff_smag_fac                 = 0.025
 lhdiff_vn                      = .TRUE.
 lhdiff_temp                    = .TRUE.
/
&interpol_nml
 nudge_zone_width               = 8
 lsq_high_ord                   = 3
 l_intp_c2l                     = .TRUE.
 l_mono_c2l                     = .TRUE.
 support_baryctr_intp           = .TRUE.
/
&gridref_nml
 grf_intmethod_e        	= 6
 grf_intmethod_ct        	= 2
 grf_tracfbk       		= 2
 denom_diffu_v		        = 150.
/
&extpar_nml
 itopo                          = 1
 itype_vegetation_cycle         = 2
 n_iter_smooth_topo             = 1,1
 heightdiff_threshold           = 3000.
 hgtdiff_max_smooth_topo        = 750.,750.
 extpar_filename                = "<path>extpar_<gridfile>"         ! filename of external parameter input file
/
&nwp_tuning_nml
 itune_albedo                   = 1
 tune_gkdrag                    = 0.075
 tune_gkwake                    = 1.5
 tune_gfrcrit                   = 0.425
 tune_dust_abs                  = 1.
 tune_zvz0i                     = 1.1
 tune_box_liq_asy               = 3.0
/
&ensemble_pert_nml
 use_ensemble_pert              = .true.
 timedep_pert                   = 2
/
&gribout_nml
 preset                          ='ensemble'
 ldate_grib_act                  = .true.
 lgribout_24bit                  = .false.
 backgroundProcess               = 0
 localNumberOfExperiment         = 1
 productionStatusOfProcessedData = 0
 localTypeOfEnsembleForecast     = 101    ! -1, etyp
 numberOfForecastsInEnsemble     = 40     ! -1, nr_member
 perturbationNumber              = 13     ! -1, member
 generatingProcessIdentifier     = 1,2    ! 2 .. nest
 tablesVersion                   = 19
/


! OUTPUT: ICON native grid, model levels, all domains: FG (tiled) to be re-read by ICON
&output_nml
 filetype                     =  4                         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                          = -1                         ! write all domains
 mode                         =  1                         ! 1: forecast
 output_time_unit             =  1                         ! 1: seconds
 output_bounds                =  48600., 360000., 48600.   ! start, end, increment
 steps_per_file               =  10
 include_last                 = .TRUE.
 output_filename              = "${EXP}${iter}_winds"           ! file name base
 ml_varlist                   = 'vn','w','t_g','w_so','t_so','tot_prec','SYNMSG_BT_CL_IR10.8'
 output_grid                  = .TRUE.
/

! OUTPUT: lat-lon grid, model levels, all domains
&output_nml
 filetype                     =  2                         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                          = -1                         ! write all domains
 mode                         =  1                         ! 1: forecast
 output_time_unit             =  1                         ! 1: seconds
 output_bounds                =  0., 360000., 10800.   ! start, end, increment
 steps_per_file               =  1
 include_last                 = .TRUE.
 output_filename              = "${EXP}${iter}_ll"           ! file name base
 ml_varlist                   = 'u','v','temp','tot_prec'
 output_grid                  = .false.
 remap                        = 1
 reg_lon_def                  = 0.,0.5,359.501
 reg_lat_def                  = -90.,0.5,90.
/

! OUTPUT: native grid, model levels, all domains
&output_nml
 filetype                     =  4                         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                          = -1                         ! write all domains
 mode                         =  1                         ! 1: forecast
 output_time_unit             =  1                         ! 1: seconds
 output_bounds                =  7200., 7200., 3600.   ! start, end, increment
 steps_per_file               =  1
 include_last                 = .TRUE.
 output_filename              = "${EXP}${iter}_omp_npr"           ! file name base
 ml_varlist                   = 'u','v','temp','pres'
 output_grid                  = .TRUE.
 remap                        = 0
/
&meteogram_output_nml
 lmeteogram_enabled= .FALSE.,.FALSE.  !.TRUE.
 n0_mtgrm          = 0              ! meteogram initial time step (0 is first step!)
 ninc_mtgrm        = ${ninc_mtgrm},${ninc_mtgrm}  ! meteogram output interval
 ldistributed      = .false.,.false.
 stationlist_tot   =  52.17,  14.12, 'Lindenberg',                        
                      51.97,   4.93, 'Cabauw',
                     -10.08, -61.93, 'LBA_Rondonia',
                      13.50,   2.5 , 'Niamey',
                      36.61, -97.49, 'ARM_Southern_Great_Plains',
                     -71.32, 156.62, 'ARM_North_Slope_of_Alaska_Barrow',
                      -2.06, 147.43, 'ARM_Tropical_W_Pacific_Manus',
                     -12.43, 130.89, 'ARM_Tropical_W_Pacific_Darwin',
                      60.00,  80.00, 'Snow Test Russia',
/
EOF


#
# configure START_MODEL_function
#
ICON_COMPONENT1_VH_procs=$((num_restart_procs + num_io_procs + num_prefetch_proc + num_io_procs_radar))

$START_MODEL
EXIT_STATUS=$?

if [ "$EXIT_STATUS" -ne "0" ]; then
  echo "ICON EXIT_STATUS: $EXIT_STATUS"
  exit $EXIT_STATUS
fi

# ----------------------------------------------------------------------------
iter=$(( $iter + 1 ))
done # model run iterations
# ----------------------------------------------------------------------------

# now start with the tests


ERROR_SUM=0
DIFF_STATUS_IAU=0
DIFF_STATUS_RESTART=0
DIFF_STATUS_NPROMA=0
DIFF_STATUS_OMP=0

# EXP1 output filenames
FILE1_DOM01="NWP1_winds_DOM01_ML_0001.nc"
FILE1_DOM02="NWP1_winds_DOM02_ML_0001.nc"
# EXP2 output filenames
FILE2_DOM01="NWP2_winds_DOM01_ML_0001.nc"
FILE2_DOM02="NWP2_winds_DOM02_ML_0001.nc"
# EXP3 output filenames
FILE3_DOM01="NWP3_winds_DOM01_ML_0001.nc"
FILE3_DOM02="NWP3_winds_DOM02_ML_0001.nc"

# OMP/NPROMA check output filenames
REF_FILE_DOM01="NWP1_omp_npr_DOM01_ML_0001.nc"
REF_FILE_DOM02="NWP1_omp_npr_DOM02_ML_0001.nc"
NPR_FILE_DOM01="NWP4_omp_npr_DOM01_ML_0001.nc"
NPR_FILE_DOM02="NWP4_omp_npr_DOM02_ML_0001.nc"
OMP_FILE_DOM01="NWP5_omp_npr_DOM01_ML_0001.nc"
OMP_FILE_DOM02="NWP5_omp_npr_DOM02_ML_0001.nc"

echo "=================================================================="
echo "Check iterative IAU"
echo "=> Compare experiments: $EXP1 $EXP2"

# compare_output_files is defined in ./add_run_routines
compare_output_files "${FILE1_DOM01}" "${FILE2_DOM01}"
DIFF_STATUS_IAU=$((DIFF_STATUS_IAU + $?))
compare_output_files "${FILE1_DOM02}" "${FILE2_DOM02}"
DIFF_STATUS_IAU=$((DIFF_STATUS_IAU + $?))

ERROR_SUM=$((ERROR_SUM + DIFF_STATUS_IAU))
if [[ $DIFF_STATUS_IAU -eq 0 ]]; then
  echo "DOM01 and DOM02: EXP1 $EXP1 and EXP2 $EXP2 are identical"
else
  echo "DOM01 or DOM02: EXP1 $EXP1 and EXP2 $EXP2 differ"
fi

echo "=================================================================="
echo "Check restart"
echo "=> Compare experiments:" $EXP2 $EXP3

compare_output_files "${FILE2_DOM01}" "${FILE3_DOM01}"
DIFF_STATUS_RESTART=$((DIFF_STATUS_RESTART + $?))
compare_output_files "${FILE2_DOM02}" "${FILE3_DOM02}"
DIFF_STATUS_RESTART=$((DIFF_STATUS_RESTART + $?))

ERROR_SUM=$((ERROR_SUM + DIFF_STATUS_RESTART))
if [[ $DIFF_STATUS_RESTART -eq 0 ]]; then
  echo "DOM01 and DOM02: EXP2 $EXP2 and EXP3 $EXP3 are identical"
else
  echo "DOM01 or DOM02: EXP2 $EXP2 and EXP3 $EXP3 differ"
fi

echo "=================================================================="
echo "Check nproma"
echo "=> Compare experiments:" $EXP1 $EXP4

compare_output_files "${REF_FILE_DOM01}" "${NPR_FILE_DOM01}"
DIFF_STATUS_NPROMA=$((DIFF_STATUS_NPROMA + $?))
compare_output_files "${REF_FILE_DOM02}" "${NPR_FILE_DOM02}"
DIFF_STATUS_NPROMA=$((DIFF_STATUS_NPROMA + $?))

ERROR_SUM=$((ERROR_SUM + DIFF_STATUS_NPROMA))
if [[ $DIFF_STATUS_NPROMA -eq 0 ]]; then
  echo "DOM01 and DOM02: EXP1 $EXP1 and EXP4 $EXP4 are identical"
else
  echo "DOM01 or DOM02: EXP1 $EXP1 and EXP4 $EXP4 differ"
fi

if [[ ${BB_NAME} == 'DWD_nec_hybrid' ]]; then
  echo "=================================================================="
  echo "Check OMP"
  echo "=> Compare experiments:" $EXP1 $EXP5

  compare_output_files "${REF_FILE_DOM01}" "${OMP_FILE_DOM01}"
  DIFF_STATUS_OMP=$((DIFF_STATUS_OMP + $?))
  compare_output_files "${REF_FILE_DOM02}" "${OMP_FILE_DOM02}"
  DIFF_STATUS_OMP=$((DIFF_STATUS_OMP + $?))

  ERROR_SUM=$((ERROR_SUM + DIFF_STATUS_OMP))
  if [[ $DIFF_STATUS_OMP -eq 0 ]]; then
    echo "DOM01 and DOM02: EXP1 $EXP1 and EXP5 $EXP5 are identical"
  else
    echo "DOM01 or DOM02: EXP1 $EXP1 and EXP5 $EXP5 differ"
  fi

fi
#
#-----------------------------------------------------------------------------
#
if [ $DIFF_STATUS_IAU == 0 ]; then
  echo " "
  echo "IAU test SUCESSFUL"
  echo " "
else
  echo " "
  echo "IAU test FAILED"
  echo " "
fi
if [ $DIFF_STATUS_RESTART == 0 ]; then
  echo " "
  echo "Restart test SUCESSFUL"
  echo " "
else
  echo " "
  echo "Restart test FAILED"
  echo " "
fi
if [ $DIFF_STATUS_NPROMA == 0 ]; then
  echo " "
  echo "nproma test SUCESSFUL"
  echo " "
else
  echo " "
  echo "nproma test FAILED"
  echo " "
fi
if [[ ${BB_NAME} == 'DWD_nec_hybrid' ]]; then
  if [ $DIFF_STATUS_OMP == 0 ]; then
    echo " "
    echo "OMP test SUCESSFUL"
    echo " "
  else
    echo " "
    echo "OMP test FAILED"
    echo " "
  fi
fi

echo "Cdo test ERROR_SUM: $ERROR_SUM"
exit $ERROR_SUM
#
#-----------------------------------------------------------------------------
