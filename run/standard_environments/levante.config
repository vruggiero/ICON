# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

VERSION_ = $$Id: levante.config 6 2023-05-09 09:54:35Z k203123 $$

WORK_ROOT = "eval('/scratch/'+'$USER'[0]+'/$USER')"
DATA_ROOT = /work/$PROJECT_SUBDIR/$USER

[jobs]

  batch_command = sbatch
  progress_command = sh -c 'scontrol update JobId=$$SLURM_JOB_ID Comment="$$*"' scomment
  python3 = /usr/bin/env python3
  ksh = /bin/bash

  # Environment variables for job information
  name_environ = SLURM_JOB_NAME
  id_environ = SLURM_JOBID

  [[run]]
    use_cpu_mask = true
    use_hostfile = true
    use_mpmd = true
    partition = compute
    stack_size = 4194304
    [[[env]]]
      # OpenMP
      OMP_DYNAMIC = false
      OMP_SCHEDULE = guided
      OMP_STACKSIZE = 500M
      # Intel OpenMP
      KMP_AFFINITY = 'granularity=fine,scatter'
      KMP_LIBRARY = turnaround
      # OpenMPI
      OMPI_MCA_btl = self
      OMPI_MCA_coll = '^hcoll,ml'
      OMPI_MCA_coll_tuned_alltoallv_algorithm = 2
      OMPI_MCA_coll_tuned_use_dynamic_rules = true
      OMPI_MCA_io = romio321
      OMPI_MCA_osc = ucx
      OMPI_MCA_pml = ucx
      OMPI_MCA_pml_ucx_opal_mem_hooks = 1
      # Unified Communication X
      UCX_HANDLE_ERRORS = bt
      UCX_IB_ADDR_TYPE=ib_global
      UCX_NET_DEVICES=mlx5_0:1
      UCX_TLS = 'mm,cma,dc_mlx5,dc_x,self'
      UCX_UNIFIED_MODE = y
      UCX_LOG_LEVEL = ERROR # TODO: unsilence UCX warnings
      # HDF5 Library
      HDF5_USE_FILE_LOCKING = FALSE
      # GNU C Library
      MALLOC_TRIM_THRESHOLD_ = -1
      # Intel MKL
      MKL_DEBUG_CPU_TYPE = 5
      MKL_ENABLE_INSTRUCTIONS = AVX2

  [[mon]]
    partition = shared

  [[clean]]
    partition = compute
    tasks = 128
    time_limit = 30

[MPI]

  command = "srun -l --kill-on-bad-exit=1 --cpu-bind=quiet,cores --distribution=block:block --propagate=STACK,CORE"
