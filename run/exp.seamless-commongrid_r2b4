# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

#==================================================================================================
#
# ICON-ESM R2B4 NWP atmosphere coupled to R2B4 ocean on identical grid
#
author_list="Stephan Lorenz, Martin Koehler, Rene Redler"
#
#--------------------------------------------------------------------------------------------------
#
# exp.seamless-commongrid_r2b4
#
# Basic test case for the ICON-NWP coupled to the ICON-O.
#
# This basic coupled test case (Prototype 1) computes a few days of a
# global weather forecast (ICON-NWP) coupled to a global ocean (ICON-O).
# The system is set up on a common grid and utilizes a common
# land-sea-mask in 160 km resolution (R2B04), initialized at 1979-01-01.
# The purpose is the technical testing of the coupled setup.
#
# This section of the run script contains the specifications of the experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Initial revision: 2021-01-27, S. Lorenz, MPI-M
#
#--------------------------------------------------------------------------------------------------

# (1) Basic model configuration
# -----------------------------

atmos_gridID="0043"
atmos_refinement="R02B04"

ocean_gridID="0043"
ocean_refinement="R02B04"

# nproma = blocking length for array dimensioning and inner loop lengths
nproma_atm=24
nproma_oce=24

# unset some setting of create_target_header for mistral
unset OMPI_MCA_coll_fca_enable
unset OMPI_MCA_coll_fca_priority

#--------------------------------------------------------------------------------------------------
#
# (2) Define the model time stepping
# ----------------------------------
#
# NWP:
dtime=450                        # NWP atmospheric timestep (s)   (same as in atmTimeStep!!)
dt_rad=3600.                     # NWP radiation timestep (s) - must match coupling/ocean time step
oceTimeStep="PT60M"              # ocean time step
atmTimeStep="PT450S"             # atmos time step (for coupler)  (same as dtime!!)
couplingTimeStep="PT60M"         # coupling time step

#--------------------------------------------------------------------------------------------------

# (3) Set variables to configure the experiment:
# ----------------------------------------------

# start and end date+time of experiment
# -------------------------------------
start_date=${start_date:="1000-01-01T00:00:00Z"}
    end_date=${end_date:="1000-01-05T00:00:00Z"}

# distribution of nodes
# ---------------------

# at least one node for ocean and atmosphere each is necessary
# default: half of requested nodes for ocean
mpi_oce_nodes=1
mpi_oce_nodes=${mpi_oce_nodes:=((no_of_nodes/2))}  
((mpi_oce_procs=mpi_oce_nodes * mpi_procs_pernode))

# asynchronous diagnostic output processes
# ----------------------------------------

# Note that "mpi_atm_io_procs" must match the number of output files
mpi_atm_io_procs=0      # >0 for atmosphere plus land (not working for monitoring)
mpi_oce_io_procs=0      # >0 for ocean is not working yet

# initialization/restart
# ----------------------
#
# Use alternatively:
  initialiseOcean="fromRestart"        # ocean is setup from restart-file, atmosphere initialised from scratch
# initialiseOcean="fromClimatology"    # ocean is setup from climatology, atmosphere initialised from scratch
# initialiseOcean="fromExperiment"     # atmos and ocean restarts from experiment specified below
# restart=.true.                       # deactivate semaphore mechanism - use restart files for atmos and ocean

# variables for start from an existing experiment (use restart=.true.)
#  - is not yet be used automatically
#restart_dir=".."   #  from the same experiment directory
restart_dir="/work/mh0287/m211032/Icon/Git_lev/icon.rc/experiments"
restart_exp=slo1471
restart_yea=1100

# set initialiseOcean automatically to false via semaphore mechanism (isRestartRun.sem)
if [ -d "$basedir/experiments/$EXPNAME" ] ; then
  if [ -f "$basedir/experiments/$EXPNAME/isRestartRun.sem" ]; then
    initialiseOcean="FALSE"
  fi
fi

#--------------------------------------------------------------------------------------------------

# (4) Output and restart file selection
# -------------------------------------

# restart/file/output intervals
# -----------------------------

# experiment stops after restart_interval, restart and output files are written once per job
restart_interval="P2D"                             #  test run 30 min
#restart_interval="P10Y"                            #  production run

# file interval must be longer than restart-interval - add some time!
atm_file_interval="P50Y"
oce_file_interval="P50Y"

# output interval
all_output_interval="PT6H"     # short test
#all_output_interval="P1M"      # production

# output file selection
# ---------------------
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

# monitoring output switches
output_atm_mon=yes
output_oce_mon=yes

# ocean output switches
output_oce_moc=yes      #  calc_moc is called every timestep - switch off for high resolutions
output_oce_ice=yes      #  sea-ice, SST and some deeper levels

# standard debug-flux arrays at surface for coupling debug purpose
output_atm_dbg=no 
output_oce_dbg=no 

# output time of geometry file fx:
start_fx="1000-01-02T00:00:00Z"

# output switches for large atm/oce files - set to "yes" if needed for standard quickplots
#  - yes writes much output and needs more computing time at least in high resolution
output_atm_3d=no 
output_atm_2d=no 
output_oce_def=no              # annual mean is sufficient
oce_output_interval_def="P1Y"  # annual mean output for deep ocean
# monthly output interval for at least monitoring output if all_output is annual - not used here
#mon_output_interval="P1M"

# more specs:
atm_output_interval=$all_output_interval
oce_output_interval=$all_output_interval
checkpoint_interval="P50Y"  #  write checkpoint

# output interval for large atm/oce files, normally set to general interval:
atm_output_interval_3d="$atm_output_interval"
atm_output_interval_2d="$atm_output_interval"

# output switches for HAMOCC files
# - not yet

# namelist files
# --------------
atm_namelist=NAMELIST_${EXPNAME}_atm
oce_namelist=NAMELIST_${EXPNAME}_oce

#--------------------------------------------------------------------------------------------------
# I. coupling section
#--------------------------------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

# I.1 Split the number of total procs and assign to each component
# ----------------------------------------------------------------
oce_min_rank=`expr ${mpi_total_procs} - ${mpi_oce_procs}`
oce_max_rank=`expr ${oce_min_rank} + ${mpi_oce_procs} - 1`
oce_inc_rank=1
atm_min_rank=0
atm_max_rank=`expr ${oce_min_rank} - 1`
atm_inc_rank=1
#
# I.2 Fill model list
# -------------------
#
namelist_list[0]="$atm_namelist"
modelname_list[0]="atmo"
modeltype_list[0]=1
minrank_list[0]=$atm_min_rank
maxrank_list[0]=$atm_max_rank
incrank_list[0]=$atm_inc_rank
#
namelist_list[1]="$oce_namelist"
modelname_list[1]="ocean"
modeltype_list[1]=2
minrank_list[1]=$oce_min_rank
maxrank_list[1]=$oce_max_rank
incrank_list[1]=$oce_inc_rank


# I.3 YAC coupling library configuration
#-----------------------------------------------------------------------------

atm_lag=1
oce_lag=1

# co2_flux and co2_mixing_ratio are listed as transients
# below but are not configured for coupling in the couples
# section. There fields are therefore not considered for
# the search not for the data exchange even if yac_fget and
# yac_fput are called for these fields.
#
# component names in coupling.yaml must (!) match with modelname_list[*]
#
cat > coupling_${EXPNAME}.yaml << EOF
definitions:
  atm2oce: &atm2oce
    src_component: ${modelname_list[0]}
    src_grid: icon_atmos_grid
    tgt_component: ${modelname_list[1]}
    tgt_grid: icon_ocean_grid
    coupling_period: ${couplingTimeStep}
    time_reduction: average
    src_lag: ${atm_lag}
    tgt_lag: ${oce_lag}
  oce2atm: &oce2atm
    src_component: ${modelname_list[1]}
    src_grid: icon_ocean_grid
    tgt_component: ${modelname_list[0]}
    tgt_grid: icon_atmos_grid
    coupling_period: ${couplingTimeStep}
    time_reduction: average
    src_lag: ${oce_lag}
    tgt_lag: ${atm_lag}
  interp_stacks:
    hcsbb_interp_stack: &hcsbb_interp_stack
      interpolation:
        - bernstein_bezier
        - nnn:
            n: 4
            weighted: arithmetic_average
	    gauss_scale: 0.1
        - fixed:
            user_value: -999.9
    conserv_interp_stack: &conserv_interp_stack
      interpolation:
        - conservative:
            order: 1
            enforced_conservation: false
            partial_coverage: true
            normalisation: fracarea
        - fixed:
            user_value: -999.9
    spmap_interp_stack: &spmap_interp_stack
      interpolation:
        - source_to_target_map

timestep_unit: ISO_format
calendar: proleptic-gregorian
coupling:
  - <<: [ *atm2oce, *hcsbb_interp_stack ]
    field: [surface_downward_eastward_stress,
            surface_downward_northward_stress]
#  - <<: [ *atm2oce, *hcsbb_interp_stack ]
#    coupling_period: ${couplingTimeStep}
#    field: [10m_wind_speed]
  - <<: [ *atm2oce, *conserv_interp_stack ]
    field: [surface_fresh_water_flux,
            total_heat_flux,
            atmosphere_sea_ice_bundle]
  - <<: [ *oce2atm, *conserv_interp_stack ]
    field: [sea_surface_temperature,
            ocean_sea_ice_bundle]
#  - <<: [ *oce2atm, *conserv_interp_stack ]
#    coupling_period: ${couplingTimeStep}
#    field: [eastward_sea_water_velocity,
#            northward_sea_water_velocity]
#  - <<: [ *atm2oce, *spmap_interp_stack ]
#    coupling_period: ${couplingTimeStep}
#    field: river_runoff
EOF


#
# yaml files for yac
# ------------------
#
add_required_file ${basedir}/run/coupling_${EXPNAME}.yaml     ./coupling.yaml

#
#-----------------------------------------------------------------------------
# II. ATMOSPHERE
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# NWP model parameters
atmo_model_equations=3 # equation system
#                     1=hydrost. atm. (T dynamics)
#                     2=hydrost. atm. (theta dynamics)
#                     3=non-hydrost. atm.,
#                    -1=shallow water model
#                    -2=hydrost. ocean
nlev=90           # nlev = number of full levels
iforcing=3        # 3 for inwp forcing; 0 for no forcing
#
#-----------------------------------------------------------------------------
#
# NWP atmospheric grid files - old processing
#

# link files directly
atmo_grid_target=iconR2B04_DOM01.nc                                            #  needed in name of ifs2icon data
atmo_grid_folder="${icon_data_rootFolder}/grids/public/mpim/${atmos_gridID}"
atmo_grid_source=icon_grid_${atmos_gridID}_R02B04_G.nc
add_link_file ${atmo_grid_folder}/${atmo_grid_source} ./$atmo_grid_target

#
# NWP Extpar and ifs2icon specificatons
#

INDIR="/work/mh0287/m211032/Icon/Coupled/NWP_Coupling/Input_Prototype"
add_link_file $INDIR/ExtParSLM_grid_${atmos_gridID}.nc extpar_iconR2B04_DOM01.nc   # preliminary path

INDIR=$atmo_grid_folder/initial_condition/r0001/
add_link_file $INDIR/ifs2icon_1979010100_R02B04_G.nc ifs2icon_R2B04_DOM01.nc 

# files needed for radiation
add_link_file ${basedir}/data/ECHAM6_CldOptProps.nc .
add_link_file ${basedir}/data/rrtmg_lw.nc .
ecRad_data_path=${basedir}'/externals/ecrad/data'

#-----------------------------------------------------------------------------
#
#   Kinne background aerosols for the year 1850 (irad_aero=12, filename without year)
#    - unified with code of icon-nwp
#
#datadir=${atmo_data_InputFolder}/aerosol_kinne/r0001 - noch nicht
datadir=${atmo_grid_folder}/aerosol_kinne/r0001
add_link_file ${datadir}/bc_aeropt_kinne_lw_b16_coa.nc                  ./
add_link_file ${datadir}/bc_aeropt_kinne_sw_b14_coa.nc                  ./
#
#   use exlcusively Kinne background aerosols for the year 1850, filename without year (irad_aero=12)
add_link_file ${datadir}/bc_aeropt_kinne_sw_b14_fin_1850.nc             ./bc_aeropt_kinne_sw_b14_fin.nc

#-----------------------------------------------------------------------------

# If the model runs with mpi_procs=1, then this script exits without error:
if [[ ${mpi_total_procs} = 1 ]]; then
  echo "This test must not be started if mpi_procs=1 --> exit test without error"
  check_error 0 "exp.nat_jww_nwp_mpiomp"
  exit 0
fi

# If running in parallel, mpi_procs*no_of_nodes must be bigger than 2:
n_procs=`expr ${mpi_procs_pernode} \* ${no_of_nodes}`
if [[ ${n_procs} = 2 ]]; then
  echo "This test needs at least 3 MPI processes --> increase mpi_procs from 2 to 3"
  mpi_procs=3
  START=${START%2}3
fi

# reconstruct the grid parameters in namelist form
dynamics_grid_filename=""
for gridfile in ${atmo_dyn_grids}; do
  dynamics_grid_filename="${dynamics_grid_filename} '${gridfile}',"
done
dynamics_parent_grid_id="${dynamics_parent_grid_id},"
#

#-----------------------------------------------------------------------------
#
# write ICON-NWP atmospheric namelist parameters
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${atm_namelist} << EOF
!
&coupling_mode_nml
 coupled_to_ocean        = .TRUE.
/
!
&parallel_nml
 nproma                  = ${nproma_atm}
 p_test_run              = .false.
 l_test_openmp           = .false.
 l_log_checks            = .false.
 num_io_procs            = ${mpi_atm_io_procs}
 num_restart_procs       = 0
 num_dist_array_replicas = ${replicate_grid-1} ! can be 1 iff passive or active (see HAVE_SLOW_PASSIVE_TARGET_ONESIDED) target RMA works well
/
&grid_nml
 dynamics_grid_filename  = "${atmo_grid_target}"
 radiation_grid_filename = " "
 dynamics_parent_grid_id = 0,1
 lredgrid_phys           = .false.,.false.
 lfeedback               = .false.
/ 
&run_nml
 num_lev                 = ${nlev},${nlev}      ! number of full levels of vertical grid
 dtime                   = ${dtime}             ! [s] timestep in seconds
 ldynamics               = .TRUE.               ! dynamics
 ltransport              = .TRUE.               ! transport
 iforcing                = ${iforcing}          !
 ntracer                 =  5                   ! number of tracers - default 0
 ltimer                  = .true.               ! 
 ltestcase               = .false.              ! initialize with real data
 timers_level            = 0
 msg_level               = 13                   ! detailed report during integration (5-7 or 13 incl. seaice prints)
 output                  = 'nml'
 check_uuid_gracefully   = .true.
 Restart_filename        = "${EXPNAME}_restart_atm_<rsttime>.nc"
/
&dynamics_nml
 lcoriolis               = .TRUE.
 divavg_cntrwgt          = 0.50
/
&diffusion_nml
 hdiff_order             = 5
 hdiff_efdt_ratio        = 24.0
 hdiff_smag_fac          = 0.025
 lhdiff_vn               = .TRUE.
 lhdiff_temp             = .TRUE.
 hdiff_multfac           = 1.0
 hdiff_tv_ratio          = 1.0
/
&nwp_phy_nml
 inwp_gscp               = 1
 inwp_convection         = 1
 inwp_radiation          = 4
 inwp_cldcover           = 1
 inwp_turb               = 1
 inwp_satad              = 1
 inwp_sso                = 1
 inwp_gwd                = 1
 inwp_surface            = 1
 latm_above_top          = .false.
 efdt_min_raylfric       = 7200.
 itype_z0                = 2
 icapdcycl               = 3
 icpl_aero_conv          = 0           ! 1 if irad_aero=6 or 9 is used - 0 for irad_aero=12
 icpl_aero_gscp          = 0           ! 1 if irad_aero=6 or 9 is used - 0 for irad_aero=12
 icpl_o3_tp              = 1
 !lshallow_liquid_only   = .true.
 dt_rad                  = ${dt_rad}
 dt_conv                 = 1800.
 dt_sso                  = 1800.
 dt_gwd                  = 1800.
/
&nwp_tuning_nml
 itune_albedo            = 0                         ! somewhat reduced albedo (w.r.t. MODIS data) over Sahara in order to reduce cold bias
 tune_zceff_min          = 0.025                     ! ** default value to be used for R3B7; use 0.025 for R2B6 in order to get similar temperature biases in upper troposphere **
 tune_gkdrag             = 0.075                     ! R2B6: 0.075  
 tune_gkwake             = 1.5                       ! R2B6: 1.5
 tune_gfrcrit            = 0.425                     ! R2B6: 0.425
 tune_dust_abs           = 0.
 tune_zvz0i              = 0.85
 tune_box_liq_asy        = 3.25                      ! oper global: 3.0 , oper D2: 3.25, default: 2.5
 tune_box_liq            = 0.05
 tune_rcucov             = 0.075
 tune_rhebc_land         = 0.825
 tune_gust_factor        = 7.0
 icpl_turb_clc           = 1
 lcalib_clcov            = .false.                   ! turn off TCC, HCC, MCC, LCC tuning
/
&turbdiff_nml
 tkhmin                  = 0.6
 tkhmin_strat            = 1.0
 tkmmin                  = 0.75
 tkmmin_strat            = 4
 alpha0                  = 0.0123
 alpha0_max              = 0.0335
 alpha1                  = 0.125
 pat_len                 = 750.
 c_diff                  = 0.2
 rlam_heat               = 10.0
 rat_sea                 = 0.8
 ltkesso                 = .true.                    ! SSO dissipation energy used in TKE equation
 frcsmot                 = 0.2                       ! these 2 switches together apply vertical smoothing of the TKE source terms
 imode_frcsmot           = 2                         ! in the tropics (only), which reduces the moist bias in the tropical lower troposphere
 itype_sher              = 3                         ! use horizontal shear production terms with 1/SQRT(Ri) scaling to prevent unwanted side effects
 ltkeshs                 = .true.                   
 a_hshr                  = 2.0	                    
 icldm_turb              = 1                         ! 2: Gauss clouds for turbulence    1: grid scale clouds
 icldm_tran              = 2                         ! 2: Gauss clouds for surface layer 1: grid scale clouds
/
&transport_nml
 ivadv_tracer            = 3,3,3,3,3
 itype_hlimit            = 3,4,4,4,4,0
 ihadv_tracer            = 32,2,2,2,2,0
/
&interpol_nml
nudge_zone_width         = 8
l_intp_c2l               = .true.
rbf_scale_mode_ll        = 2
! l_mono_c2l             = .true.
! lsq_high_ord           = 3
! support_baryctr_intp XS  =.true.,
/
&nonhydrostatic_nml
 iadv_rhotheta           = 2
 ivctype                 = 2
 itime_scheme            = 4
 exner_expol             = 0.333
 vwind_offctr            = 0.2                       ! 0.2 for R2B6 and higher resolution, 0.3 for lower resolution
 damp_height             = 44000.                    
 rayleigh_coeff          = 0.5
 divdamp_order           = 24                        ! 2 ass, 24 fc
 divdamp_type            = 32                        ! optional: 2 assimilation cycle, 32 forecast
 divdamp_fac             = 0.004                     ! 0.004 for R2B6; recommendation for R3B7: 0.003
 divdamp_trans_start     = 12500                     
 divdamp_trans_end       = 17500                     
 igradp_method           = 3	                     
 l_zdiffu_t              = .true.                    
 thslp_zdiffu            = 0.02	                     
 thhgtd_zdiffu           = 125.	                     
 htop_moist_proc         = 22500.                    
 hbot_qvsubstep          = 16000.                    
/				                     
&sleve_nml			                     
 min_lay_thckn           = 20.                       ! lowest level thickness (between half-levels)
 max_lay_thckn           = 400.                      ! maximum layer thickness below htop_thcknlimit
 htop_thcknlimit         = 14000.                    
 top_height              = 75000.                    
 stretch_fac             = 0.9	                     
 decay_scale_1           = 4000.                     
 decay_scale_2           = 2500.                     
 decay_exp               = 1.2	                     
 flat_height             = 16000.                    
/
&io_nml				                     
 lflux_avg               = .FALSE.                   ! true: averaged (ashfl_s), false: accumulated fluxes (accshfl_s)
 itype_pres_msl          = 5                         ! (1) 3: IFS-type extrapolation
 itype_rh                = 1                         ! (1) 2: mixed phase (water and ice)
!dt_checkpoint           = 2592000.                  ! 30 days
 inextra_3d              = 2                         ! 3D extra variables 
 inextra_2d              = 10                        ! 2D extra variables 
 lkeep_in_sync           = .TRUE.                    ! sync after each timestep
 lnetcdf_flt64_output    = .TRUE.                    ! 64 bit output in all files
/
&output_nml       !! interpolated lat-lon output
 output_start            = "${start_date}"
 output_end              = "${end_date}"
 output_interval         = "${atm_output_interval}"  ! the output interval and
 file_interval           = "${atm_file_interval}"    ! the file interval
 filetype                = 4                         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                     = -1
 mode                    = 1                         ! 1: forecast mode (relative t-axis)
 include_last            = .TRUE.                    ! flag whether to include the last time step
 output_filename         = "${EXPNAME}_atm_latlon"   ! file name base
 filename_format         = "<output_filename>_<levtype>_<datetime2>"
 output_grid             = .TRUE.                    ! flag whether grid information is added to output.
 remap                   = 1                         ! 1: latlon,  0: native grid
 reg_lon_def             = 0.,1.,360.
 reg_lat_def             = -90.,1.,90.
 ml_varlist              = 'clct', 'tqv', 'tqc_dia', 'tqi_dia', 'sp_10m', 't_2m' ,'t_g', 'qv_2m', 'h_ice', 't_ice',
                           'accthb_s','accthb_t','accsob_s','accsob_t','accshfl_s','acclhfl_s','accumfl_s','accvmfl_s',
                           'pres_sfc', 'tot_prec', 't_seasfc', 'fr_seaice',
                           'shfl_s_t_7', 'shfl_s_t_9', 'lhfl_s_t_7', 'lhfl_s_t_9',
                           'thb_s_t_7', 'thb_s_t_9', 'sob_s_t_7', 'sob_s_t_9',
                           'condhf_ice', 'frac_t_7', 'frac_t_8', 'frac_t_9',
                           'fr_land', 'fr_lake', 'fr_seaice', 't_seasfc'
 hl_varlist              = 'temp', 'u'
 h_levels                = 10, 500, 5000 
 !m_levels                = "5...(nlev+1)"
/
&output_nml       !! native time-mean output
 output_start            = "${start_date}"
 output_end              = "${end_date}"
 output_interval         = "${atm_output_interval}"  ! the output interval and
 file_interval           = "${atm_file_interval}"    ! the file interval
 filetype                = 4                         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                     = -1		             
 mode                    = 1                         ! 1: forecast mode (relative t-axis)
 include_last            = .TRUE.                    ! flag whether to include the last time step
 output_filename         = "${EXPNAME}_atm_icon"     ! file name base
 filename_format         = "<output_filename>_<levtype>_<datetime2>"
 output_grid             = .TRUE.                    ! flag whether grid information is added to output.
 remap                   = 0                         ! 1: latlon,  0: native grid
 operation               = "mean"                    ! works on icon grid only (remap=0)
 ml_varlist              = 'pres_sfc', 'tot_prec_rate', 'sp_10m', 't_2m', 't_g', 'tqv', 'clct', 'h_ice', 't_ice',
                           'shfl_s', 'lhfl_s', 'thb_s', 'sob_s',
                           'shfl_s_t_7', 'shfl_s_t_9', 'lhfl_s_t_7', 'lhfl_s_t_9',
                           'thb_s_t_7', 'thb_s_t_9', 'sob_s_t_7', 'sob_s_t_9',
                           'condhf_ice', 'frac_t_7', 'frac_t_8', 'frac_t_9',
 !                         'fr_land', 'fr_lake', 'fr_seaice', 't_seasfc', 'lsm_switch', 'lsm_ctr_c', 'topography_c'
 !hl_varlist              = 'temp', 'u'
 !h_levels                = 10, 500, 5000 
 m_levels                = "5...(nlev+1)"
/
&dbg_index_nml
  idbg_mxmn              = 4                          ! initialize MIN/MAX  debug output
  idbg_val               = 0                          ! initialize one cell debug output
  idbg_slev              = 1                          ! initialize start level for debug output
  idbg_elev              = 2                          ! initialize start level for debug output
/
&extpar_nml
 itopo                   = 1
 n_iter_smooth_topo      = 1
 heightdiff_threshold    = 3000.
/
&lnd_nml
 ntiles                  = 3
 nlev_snow               = 3
 lmulti_snow             = .false.
 itype_heatcond          = 3
 idiag_snowfrac          = 20
 lsnowtile               = .true.
 lseaice                 = .true.
 llake                   = .true.
 itype_lndtbl            = 4
 itype_evsl              = 4
 itype_trvg              = 3
 itype_root              = 2
 cwimax_ml               = 5.e-4
 c_soil                  = 1.25
 c_soil_urb              = 0.5
 sstice_mode             = 1           ! 1 for coupled 
 lprog_albsi             = .true. 
 hice_min                = 0.05        ! default of nwp sea-ice model
 hice_max                = 4.8         ! corresponding to 40% seaice_limit in icon-o
 itype_snowevap          = 2
/
&radiation_nml
 irad_o3                 = 79
 irad_aero               = 12
 izenith                 = 4           ! 4: NWP default, 3: no annual cycle
 albedo_type             = 2 ! Modis albedo
 vmr_co2                 = 284.3e-06   !
 vmr_ch4                 = 808.2e-09   ! values for 1850 CE
 vmr_n2o                 = 273.0e-09   ! values for 1850 CE
 vmr_o2                  = 0.20946
 vmr_cfc11               = 0.0
 vmr_cfc12               = 0.0
 direct_albedo           = 4
 direct_albedo_water     = 3
 albedo_whitecap         = 1
 ecrad_llw_cloud_scat    = .true.
 ecRad_data_path         = '${ecRad_data_path}' 
/
&meteogram_output_nml
  lmeteogram_enabled     = .false., .false.
  n0_mtgrm               = 0                          ! meteogram initial time step (0 is first step!)
  ninc_mtgrm             = 2, 4 ! meteogram output interval (in terms of time steps)
  ldistributed           = .false., .false.
  stationlist_tot        =  50.0,       8.6,    'Frankfurt-Flughafen',
                            52.260,    14.313,  'Lindenberg_Obs',
                            52.1873,   13.9894, 'Waldstation_Kehrigk',
                            52.1215,   14.1077, 'Falkenberg',
/
EOF

#
#-----------------------------------------------------------------------------
# add standard atmo_non-hydrostatic_files
. ${thisdir}/add_required_atmo_non-hydrostatic_files


#-----------------------------------------------------------------------------
# III. OCEAN and SEA-ICE
#-----------------------------------------------------------------------------

ocean_vertical_levels=40
ocean_grid="icon_grid_${ocean_gridID}_${ocean_refinement}_G.nc"
ocean_grid_folder="${icon_data_rootFolder}/grids/public/mpim/${ocean_gridID}"
#ocean_data_InputFolder="/pool/data/ICON/oes/input/r0004/${ocean_grid_name}"

#-----------------------------------------------------------------------------
# HAMOCC
#

use_hamocc=no  

if [  "x${use_hamocc}"  = "xyes" ]; then
lhamocc=".TRUE."
lbgcadv=".TRUE."
nlev_eu=$ocean_vertical_levels
# set nlev_eu to level belonging to approx 500m
if [ "x$ocean_vertical_levels" = "x40" ];then
nlev_eu=19
fi
if [ "x$ocean_vertical_levels" = "x64" ];then
nlev_eu=26
fi
if [ "x$ocean_vertical_levels" = "x20" ];then
nlev_eu=16
fi
else
lhamocc=".FALSE."
lbgcadv=".FALSE."
fi
l_init_bgc=".false." # Hamocc state variables are in restart
if [[ "$initialiseOcean" == "fromRestart" ]] || [[ "$initialiseOcean" == "fromClimatology" ]]; then
  l_init_bgc=".true." # initialize HAMOCC (HAMOCC state variables are not in restart)
fi
# ----------------------------------------------------------------------------
#
# ocean namelist
# --------------

cat > ${oce_namelist} << EOF
!
&coupling_mode_nml
 coupled_to_atmo             = .TRUE.
/
&parallel_nml
 nproma                      = ${nproma_oce}
 num_io_procs                = ${mpi_oce_io_procs}
 num_prefetch_proc           = 0
 pio_type                    = 0
 p_test_run                  = .FALSE.
 l_fast_sum                  = .TRUE.
/
&grid_nml
 dynamics_grid_filename      = "${ocean_grid}"
 use_dummy_cell_closure      = .TRUE.
 use_duplicated_connectivity = .FALSE.
/
&run_nml
 modelTimeStep               = "${oceTimeStep}"
 output                      = 'nml'                            ! namelist controlled output scheme
 activate_sync_timers        = .TRUE.
 profiling_output            = 1                                ! aggregated: 1; detailed: 2; in files: 3
 msg_timestamp               = .FALSE.
 timers_level                = 10
 debug_check_level           = 1
 Restart_filename            = "${EXPNAME}_restart_oce_<rsttime>.nc"
/
EOF
# output of fixed geometry
cat >> ${oce_namelist} << EOF
 &output_nml
  filetype         =  5                               ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
  output_filename  = "${EXPNAME}_oce_fx"
  filename_format  = "<output_filename>_<datetime2>"
  output_start     = "${start_fx}"                    ! start date in ISO-format
  output_end       = "${start_fx}"                    ! end date in ISO-format
  output_interval  = "${oce_output_interval}"         ! interval in ISO-format
  file_interval    = "${oce_file_interval}"           ! interval in ISO-format
  output_grid      = .TRUE.
  mode             =  2                               ! 1: forecast mode (relative t-axis); 2: climate mode
  include_last     = .FALSE.
  !ml_varlist       =  'wet_c','basin_c','regio_c','lsm_ctr_c'
  ml_varlist       = 'lsm_ctr_c','lsm_c','lsm_e','surface_cell_sea_land_mask','surface_edge_sea_land_mask',
                     'surface_vertex_sea_land_mask','vertex_bottomLevel','basin_c','regio_c','bottom_thick_c',
                     'bottom_thick_e','column_thick_c','column_thick_e','wet_c','wet_e','wet_halo_zero_c',
                     'wet_halo_zero_e','prism_thick_c','invConstantPrismThickness','prism_volume','prism_thick_e',
                     'prism_thick_flat_sfc_c','prism_thick_flat_sfc_e','inverse prism_thick_c','prism_center_dist_c',
                     'constantPrismCenters_Zdistance','constantPrismCenters_invZdistance','inv_prism_thick_e',
                     'inv_prism_center_dist_c','inv_prism_center_dist_e','depth_CellMiddle'
/
EOF
#
if [[ "$output_oce_def" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 5
  output_filename            = "${EXPNAME}_oce_def"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  output_interval            = "${oce_output_interval_def}"     ! interval in ISO-format
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .TRUE.
  operation                  = "mean"
  ml_varlist                 = 'group:oce_default', 'group:oce_essentials'
/
EOF
fi

if [[ "$output_oce_ice" == "yes" ]]; then
  cat >> ${oce_namelist} <<EOF

&output_nml
  output_start     = "${start_date}"                  ! start date in ISO-format
  output_end       = "${end_date}"                    ! end date in ISO-format
  output_interval  = "${oce_output_interval}"         ! interval in ISO-format
  file_interval    = "${oce_file_interval}"           ! interval in ISO-format
  mode             =  1                               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  operation        = 'mean'                           ! mean over output interval
  output_grid      = .TRUE.
  output_filename  = "${EXPNAME}_oce_ice"
  filename_format  = "<output_filename>_<datetime2>"
  filetype         =  5                               ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
  m_levels         = "1...9,23,30,34"                 ! surface and some subsurface levels only
  ml_varlist       =  'draftave','hi','hs','conc','to','so', 'mld', 'Qtop', 'Qbot', 'u', 'v', 'condep'
/
EOF
fi
#
if [[ "$output_oce_mon" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 4
  output_filename            = "${EXPNAME}_oce_mon"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  !output_interval            = "${mon_output_interval}"
  output_interval            = "${oce_output_interval}"
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .FALSE.
  operation                  = "mean"
  ml_varlist                 = 'group:ocean_monitor'
/
EOF
fi
#
if [[ "$output_oce_moc" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 5
  output_filename            = "${EXPNAME}_oce_moc"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  output_interval            = "${oce_output_interval}"
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .FALSE.
  operation                  = "mean"
  ml_varlist                 = 'group:ocean_moc'
/
EOF
fi

if [[ "$output_oce_dbg" == "yes" ]]; then
  cat >> ${oce_namelist} <<EOF

&output_nml
  filetype         =  5                               ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
  output_filename  = "${EXPNAME}_oce_dbg"
  filename_format  = "<output_filename>_<datetime2>"
  output_start     = "${start_date}"                  ! start date in ISO-format
  output_end       = "${end_date}"                    ! end date in ISO-format
  output_interval  = "${oce_output_interval}"         ! interval in ISO-format
  file_interval    = "${oce_file_interval}"           ! interval in ISO-format
  output_grid      = .TRUE.
  mode             =  1                               ! 1: forecast mode (relative t-axis); 2: climate mode
  operation        = 'mean'                           ! mean over output interval
  include_last     = .false.
  m_levels         = "1,2"                            ! surface and subsurface level only
  ml_varlist       =  'Qtop', 'Qbot','Qbot_slow', 'zHeatOceI','heatOceI','heatOceW','draftave','zUnderIce',
                      'mld','condep','zos','u_vint','hi','hs','conc','to','so','u',
                      'HeatFlux_Total','atmos_fluxes_HeatFlux_ShortWave','atmos_fluxes_HeatFlux_LongWave',
                      'HeatFlux_ShortWave','HeatFlux_LongWave','HeatFlux_Sensible','HeatFlux_Latent',
                      'FrshFlux_Runoff','FrshFlux_Precipitation','FrshFlux_Evaporation','FrshFlux_SnowFall',
                      'FrshFlux_TotalOcean','FrshFlux_VolumeIce','totalsnowfall','Wind_Speed_10m'
/
EOF
fi

##############################################################

cat >> ${oce_namelist} << EOF
&dbg_index_nml
  idbg_mxmn                  = 4                                ! initialize MIN/MAX  debug output
  idbg_val                   = 0                                ! initialize one cell debug output
  idbg_slev                  = 1                                ! initialize start level for debug output
  idbg_elev                  = 2                                ! initialize end level for debug output
  dbg_lat_in                 = 30.0                             ! latitude location of one cell debug output
  dbg_lon_in                 = -30.0                            ! longitude location of one cell debug output
  str_mod_tst                ='oceanCouplng'                    ! define modules to print out in debug mode
  !str_mod_tst                = 'all'                            ! define modules to print out in debug mode
/
&ocean_dynamics_nml
! 40 unevenly spaced levels used by MPIOM/GR30
 n_zlev         =   ${ocean_vertical_levels}
 dzlev_m(1:40)  =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
                    30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
                   100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
                   220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0
  l_edge_based                               = .FALSE.     ! edge- or cell-based mimetic discretization
! l_partial_cells                            = .FALSE.     ! partial bottom cells=TRUE: local varying bottom depth
  select_solver                              = 4           ! 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart 
                                                           ! 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
  use_absolute_solver_tolerance              = .TRUE.
  solver_tolerance                           = 1.0E-9      ! 1e-10 in omip-YVF - enlarged to 1e-9 (LL opt)
  l_lhs_direct                               = .TRUE.      ! .true.= use lhs implementation directly  .false.= matrix scanner (default)
  select_lhs                                 = 2           ! 1=operator based (default) 2=matrix based - 2=error?
  solver_FirstGuess                          = 2           ! 0=start from zeros 1=last timestep smoothed 2=last timestep (default) 

! solver_max_iter_per_restart                = 14
! solver_max_restart_iterations              = 100         ! outer (restart solver)

  fast_performance_level                     = 200         ! performance level 12: for cell-based; 5: default
  use_continuity_correction                  = .TRUE.      ! height adjustment according to vertical velocity in dynamics
  cfl_check                                  = .FALSE.
  cfl_write                                  = .FALSE.

  i_bc_veloc_top                             = 1
  i_bc_veloc_bot                             = 1           ! 0: (def) bottom friction off, 1: on
/
&ocean_tracer_transport_nml
  flux_calculation_horz                      = 5           ! 1=upwind, 2=central, 3=Lax-Friedrichs,
                                                           ! 4=Miura, 5=FCT with Zalesak limiter (default)
  flux_calculation_vert                      = 7           ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in
  ! horizontal flux corrected transport methods
  ! (flux_calculation_horz=4,5)
  fct_low_order_flux                         = 1           ! horizontal low  order method: 1=upwind (def), no other implemented
  fct_high_order_flux                        = 5           ! horizontal high order method: 1=upwind, 2=central, 3=lax_friedrichs, 4=miura_order1
  fct_limiter_horz                           = 100         ! zalesak
/
&ocean_horizontal_diffusion_nml
  laplacian_form                             = 1           ! 1=curlcurl-graddiv
  VelocityDiffusion_order                    = 1           ! 21=biharmonic+laplacian (for the laplacian leith)
                                                           !
!  BiharmonicViscosity_scaling                = 1
!  BiharmonicViscosity_reference              = 1.0E15      ! [m2/s] constant horizontal viscosity coefficient for velocity
!  BiharmonicViscosity_background             = 0.0         ! [m2/s] constant horizontal viscosity coefficient for velocity

  HarmonicViscosity_scaling                  = 1
  HarmonicViscosity_reference                = 5.0E+4      ! [m2/s] constant horizontal viscosity coefficient for velocity
  HarmonicViscosity_background               = 0.0  

  TracerHorizontalDiffusion_scaling          = 1
  Temperature_HorizontalDiffusion_Background = 0.0
  Temperature_HorizontalDiffusion_Reference  = 0
  Salinity_HorizontalDiffusion_Background    = 0.0
  Salinity_HorizontalDiffusion_Reference     = 0
/
&ocean_vertical_diffusion_nml
  vert_mix_type                              = 2           ! 1: PP; 2: TKE
  PPscheme_type                              = 0           ! 4: current PPscheme - 0: switched off
  velocity_VerticalDiffusion_background      = 5.0E-5      ! [m2/s]  vertical background viscosity coefficient for velocity
  temperature_VerticalDiffusion_background   = 5.0E-5      ! [m2/s]  vertical background diffusion coefficient for temperature
  salinity_VerticalDiffusion_background      = 5.0E-5      ! [m2/s]  vertical background diffusion coefficient for salinity
  tracer_convection_MixingCoefficient        = 0.1         ! max vertical tracer diffusion for convection used in case of instability
  convection_InstabilityThreshold            = -1.0E-6     ! used in update_ho_params - default=-5e-8
  richardsonDiffusion_threshold              = 0.0         ! used in update_ho_params - default=+5e-8
  tracer_RichardsonCoeff                     = 2.0E-3      ! factor for vertical diffusion coefficient in PP scheme
  velocity_RichardsonCoeff                   = 2.0E-3      ! factor for vertical viscosity coefficient in PP scheme
  bottom_drag_coeff                          = 3.0E-3      ! default=2.5E-3; active for i_bc_veloc_bot=1
  use_wind_mixing                            = .TRUE.      ! TRUE: use wind mixing scheme in MPIOM-type pp-scheme
  lambda_wind                                = 0.03
  !  tracer_TopWindMixing                       = 1.0E-5  0.5E-3
  !  velocity_TopWindMixing                     = 1.0E-5  0.5E-3
  tracer_TopWindMixing                       = 2.31480E-6  ! eqals 0.5e-3 m2s-1 (MPIOM)
  velocity_TopWindMixing                     = 2.31480E-6
  c_k        = 0.1
  c_eps      = 0.7
  alpha_tke  = 30.0
  mxl_min    = 1.d-8
  kappaM_min = 0.0
  kappaM_max = 100.0
  cd         = 3.75
  tke_min    = 1.d-6
  tke_mxl_choice = 2
  tke_surf_min = 1.d-4
  only_tke = .true.
  use_ubound_dirichlet = .false.
  use_lbound_dirichlet = .false.
/
&ocean_GentMcWilliamsRedi_nml
  GMRedi_configuration                       = 1           ! 0=cartesian diffusion; 1=GM-Redi: bolus advection + isopycnal diffusion
  tapering_scheme                            = 1
  GMRedi_usesRelativeMaxSlopes               = .FALSE.
  S_max                                      = 3.0e-5      ! 1.0
  S_d                                        = 1.0e-4      ! 5e-3 to 5e-4
                                                           !
  k_tracer_GM_kappa_parameter                = 800.0      !
  k_tracer_isoneutral_parameter              = 800.0      ! value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
  k_tracer_dianeutral_parameter              = 0.0         ! 1.0E-5  !
                                                           !
  switch_off_diagonal_vert_expl              = .TRUE.
  gmredi_combined_diagnostic                 = .FALSE.
! switch_on_redi_balance_diagnostic          = .FALSE.     ! not yet available in icon-aes-dyamond++
  revert_vertical_recon_and_transposed       = .TRUE.
  slope_calc_via_temperture_salinity         = .TRUE.
  include_slope_squared_implicit             = .TRUE.      ! think of l_with_vert_tracer_diffusion
  switch_on_tapering_horizontal_diffusion    = .TRUE.
/
&ocean_physics_nml
  i_sea_ice                                  = 1           ! 0 = no sea ice; 1 = sea ice model on; default=1
  lhamocc                                    = ${lhamocc}
  lbgcadv                                    = ${lbgcadv}
/                                           
&sea_ice_nml
  i_ice_therm                                = 1           ! 1=zero-layer (default), 2=Winton, 0/2: not allowed
  i_ice_dyn                                  = 1           ! 1/0=switch on/off AWI ice dynamics
! i_Qio_type                                 = 3           ! 3 (default): energy of whole grid-area used for melting (MPIOM-type)
! use_constant_tfreez                        = .TRUE.      ! default: TRUE
! use_no_flux_gradients                      = .FALSE.     ! default: TRUE
! hmin                                       = 0.05        ! default: 0.05 - minimum sea-ice value for ice
  leadclose_1                                = 0.5         ! default: 0.5 - value of MPIOM: 0.25
  leadclose_2n                               = 0.0         ! default: 0.0 - value of MPIOM: 2/3
/
EOF

cat >> ${oce_namelist} << EOF
&ocean_forcing_nml
  iforc_oce                                  = 14          ! ocean forcing: 14 from coupling via YAC
  type_surfRelax_Temp                        = -1          ! -1: use net surface heat flux from atmosphere
                                                           !  0: no relaxation used
                                                           !  1: relaxation switched on for reading (init_oce_relax=1)
                                                           !     or some testcases only
  forcing_enable_freshwater                  = .TRUE.      ! enable/disable freshwater flux
  forcing_windstress_u_type                  = 2           ! 0: zero wind stress, 1: read from file, 2: none
  forcing_windstress_v_type                  = 2           ! 0: zero wind stress, 1: read from file, 2: none
                                                           ! salt-change due to internal fluxes only
  limit_seaice                               = .TRUE.      ! default: TRUE
  seaice_limit                               = 0.4         ! hard limit set to 40% of flat upper layer for sea ice
  lfix_salt_content                          = .TRUE.
  limit_elevation                            = .TRUE.      ! true: adjust daily to zero, default=false: free surface
! lswr_jerlov                                = .FALSE.     ! SW-penetration (Jerlov-radiation, default=T)
/
EOF
#
if [[ "$initialiseOcean" == "fromRestart" ]] || [[ "$initialiseOcean" == "fromRestartwithHamocc" ]]; then
  #
  cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 0                ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 0                ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .TRUE.
/
EOF
#
else
#
  if [[ "$initialiseOcean" == "fromClimatology" ]]; then
    cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 1                ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 1                ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .FALSE.
/
EOF
  else
    cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 0                ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 0                ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .FALSE.
/
EOF
  fi
fi
#
cat >> ${oce_namelist} << EOF
&ocean_diagnostics_nml
  diagnostics_level                          = 1
  diagnose_for_horizontalVelocity            = .FALSE.
  diagnose_for_heat_content                  = .TRUE.
/
&io_nml
  restart_file_type                          = 5
  write_last_restart                         = .TRUE.
! restart_write_mode                         = "joint procs multifile"  ! not yet available in ocean model
  lnetcdf_flt64_output                       = .TRUE.           ! 64 bit output in all files
  lkeep_in_sync                              = .TRUE.           ! sync after each timestep
/
EOF

add_required_file ${basedir}/run/${oce_namelist} ./

#-----------------------------------------------------------------------------
#
# Ocean initialisation input
 # add spun-up ocean-only experiments or use initial state from "Levitus"
#
if [[ "$initialiseOcean" == "fromRestart" ]]; then
  #INDIR="/work/mh0287/m211032/Icon/Coupled/NWP_Coupling/Input_Prototype"
  #add_link_file $INDIR/ler0863_restart_oce_22000101T000000Z.nc init-restart-oce.nc
  add_link_file ${restart_dir}/${restart_exp}/${restart_exp}_restart_oce_${restart_yea}0101T000000Z.nc init-restart-oce.nc
  add_link_file init-restart-oce.nc restart_ocean_DOM01.nc
fi

if [[ "$initialiseOcean" == "fromRestartwithHamocc" ]]; then
  # Restart file like above + 1 year with Hamocc (initialized from basin averages)
  add_link_file /work/mh0727/m300732/input/0036/ocean/restart/ler0614_restart_oce_10010101T000000Z.nc init-restart-oce.nc
  add_link_file init-restart-oce.nc restart_ocean_DOM01.nc
fi

if [[ "$initialiseOcean" == "fromClimatology" ]]; then
  # for initializing from Levitus:
  #INDIR="/work/mh0287/m211032/Icon/Coupled/NWP_Coupling/Input_Prototype"
  #add_link_file $INDIR/ts_phc3.0_annual_icon_icon_grid_0036_R02B04_G_L40.nc initial_state.nc
  INDIR="${icon_data_rootFolder}/grids/public/mpim/${ocean_gridID}/ocean/initial_conditions/r0001"
  add_link_file $INDIR/ts_phc3.0_annual_icon_grid_${ocean_gridID}_${ocean_refinement}_G_L40.nc initial_state.nc
fi

#
# Ocean grid
#
add_required_file ${ocean_grid_folder}/${ocean_grid} ./
#
## HAMOCC forcing files
#
if [  "x${use_hamocc}"  = "xyes" ]; then
  # FIXME: this is still a private path
  datadir=/work/mh0727/m300732/input/0036/ocean/hamocc/
  add_link_file $datadir/MAHOWALDDUST_icon_grid_0036_R02B04_O_remapbil1.nc           dust.nc  # iron deposition
  add_link_file $datadir/ndepo_1-0_gr_185001-185012-clim_icon_grid_0036_R02B04_O.nc  nitrogen.nc  # nitrate deposition
fi
#
#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt `expr $mpi_oce_procs + 1` ] ; then
   echo "Too few mpi_total_procs for requested mpi_oce_procs."
   echo "-> check mpi_total_procs and mpi_oce_procs. Exiting."
   check_error 0
   exit
fi

#-----------------------------------------------------------------------------
#
# Following: automatically appended section to start the model integration. 
#


