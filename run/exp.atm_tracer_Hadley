# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

#--------------------------------------------------------------------------------------------------
#
# Pure tracer advection experiment
#
author_list="Daniel Reinert, DWD"
#
#--------------------------------------------------------------------------------------------------
#
# In this experiment 3D tracer transport is performed in a prescribed
# Hadley-like circulation. As the flow reverses its course at half time, an
# analytical solution is available at the end of the simulation (after 1day). 
# This test case is part of the DCMIP-2012 test suite. For more information, 
# see Kent,J. et al (2014): Dynamical core model intercomparison project:
# Tracer transport test cases. QJRMS 140, 1279-1293  
#
# The specific aim of this test case in the ICON-boildbit context is to check 
# the equivalence of the vertical tracer transport routines 
# * upwind_vflux_ppm
# * upwind_vflux_ppm4gpu
# While the former is used on x86 and SX architectures, the latter has been
# optimized for GPUs. In theory, both variants should produce equivalent
# results.
#
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths

icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/buildbot_data"

#--------------------------------------------------------------------------------------------------

# (2) Set variables needed by the scripting mechanism

# horizontal grid(s)
#
grids_folder=${icon_data_poolFolder}/grids
#
# global domain
#
dynamics_grid_filename=iconR5B04-grid.nc
atmo_dyn_grids="'${dynamics_grid_filename}',"

# start and end date+time
start_date=${start_date:="2008-09-01T00:00:00Z"}
  end_date=${end_date:="2008-09-02T00:00:00Z"}

# output intervals
output_bounds="0.,86400.,7200."
steps_per_file=25

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration

cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma                 = ${nproma}
 nblocks_c              = ${nblocks_c}
 nproma_sub             = ${nproma_sub}
 p_test_run             = .false.
 l_test_openmp          = .false.
 l_log_checks           = .false.
 iorder_sendrecv        = 1
/
&grid_nml
 dynamics_grid_filename = ${atmo_dyn_grids},
 grid_rescale_factor    = 1.0
/
&run_nml
 num_lev                = 30,              ! number of full levels of vertical grid
 dtime                  = 150              ! [s] timestep in seconds
 ltestcase              = .TRUE.           ! run testcase
 ldynamics              = .FALSE.          ! dynamics
 ltransport             = .TRUE.           ! transport
 ntracer                = 1                ! number of tracers - default 0
 iforcing               = 0                !
 msg_level              = 12               ! detailed report during integration
 ltimer                 = .TRUE.
 timers_level           = 10
 output                 = "nml"
/
&dynamics_nml
 divavg_cntrwgt         = 0.50
 lcoriolis              = .FALSE.
/
&nh_testcase_nml
 nh_test_name           = 'dcmip_pa_12'    ! test case identifier
 lcoupled_rho           = .FALSE.
 layer_thickness        = 400.
 n_flat_level           = 5
/
!&sleve_nml
! min_lay_thckn         = 200.
! top_height            = 12000.
! stretch_fac           = 1.1
!/
&nonhydrostatic_nml
 itime_scheme           = 1
 ndyn_substeps          = 1                ! reset to 1 for matching output times
 ivctype                = 1                ! Gal-Chen hybrid
 vwind_offctr           = 0.0              ! default=0.15
/
&transport_nml
 ihadv_tracer           = 22               ! default: miura
 ivadv_tracer           = 3                ! 3: ppm
 itype_vlimit           = 1                ! 1: semi-monotone reconstruction limiter
 itype_hlimit           = 3                ! 3: monotone flux limiter
 beta_fct               = 1.0
/
&diffusion_nml
 hdiff_order            = 5
 hdiff_efdt_ratio       = 1.0
 hdiff_min_efdt_ratio   = 1.0
 lhdiff_vn              = .TRUE.
 lhdiff_temp            = .FALSE.
 hdiff_tv_ratio         = 1.0
/
&initicon_nml
 pinit_seed             = 0               ! seed for perturbation of initial model state. no perturbation by default
 pinit_amplitude        = 0.              ! amplitude of perturbation
/
&output_nml
 filetype               = 4               ! output format: 2=GRIB2, 4=NETCDFv2
 dom                    = -1
 output_time_unit       = 1
 output_bounds          = $output_bounds ! start, end, increment
 steps_per_file         = $steps_per_file
 include_last           = .TRUE.
 remap                  = 1               ! lon/lat output
 reg_lon_def            = -180.,0.5,180.
 reg_lat_def            = -90.,0.5,90.
 output_filename        = "remapped"   ! file name base
 filename_format        = "<output_filename>_<levtype_l>_<datetime2>"
 output_grid            = .TRUE.
 ml_varlist             = 'u','v','w','Q1','temp','pres','rho','z_ifc','z_mc','aw'
/
&output_nml
 filetype               = 4
 dom                    = -1
 output_time_unit       = 1
 output_bounds          = $output_bounds  ! start, end, increment
 steps_per_file         = $steps_per_file
 include_last           = .TRUE.
 remap                  = 0                ! output on triangular grid
 output_filename        = "native"     ! file name base
 filename_format        = "<output_filename>_<levtype_l>_<datetime2>"
 output_grid            = .TRUE.
 ml_varlist             = 'u','v','w','Q1','temp','pres','rho','z_ifc','z_mc'
/
&interpol_nml
 l_intp_c2l             = .true.
 l_mono_c2l             = .true.
/
EOF
