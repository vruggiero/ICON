# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

# ===========================================================================
# 
# Name: exp.dwd_art_dustrad_R2B4N5
#
# Purpose: Runscript for ICON on a low resolution global grid and EU nest 
#          (157km/79km) with ICON-ART mineral dust.
#
# Created by: Michael Krayer (DWD)
#
# =========================================================================== 

#--------------------------------------------------------------------------------------------------
#
# This experiment describes an ICON-GLO run with a code path similar to DWD's operational
# mineral dust deterministic forecast. It is computed on a coarse grid with nest (global/EU). 
# The input data is based on exp.dwd_run_ICON_09_R2B4N5_EPS with some extensions regarding ART. 
# The initial dust concentration in the atmosphere is close to zero.
#
#--------------------------------------------------------------------------------------------------
set -x
make_and_change_to_experiment_dir # function in ../add_run_routines

# Be explicit about the number of procs for each component
num_restart_procs=${num_restart_procs:-0}
num_io_procs=${num_io_procs:-0}
num_prefetch_proc=${num_prefetch_proc:-0}
num_io_procs_radar=${num_io_procs_radar:-0}

# Machine-specific settings
case ${builder} in 
    bull_milan*)
        # ECCODES_DEFINITION_PATH needs to be set explicitly on levante
        ECCODES_ROOT="$(dirname $(dirname $(ldd ${MODEL} | grep libeccodes.so | awk '{print $3;}')))"
        ECCODES_DEFAULT_DEFINITION_PATH="$(${ECCODES_ROOT}/bin/codes_info -d)"
        ECCODES_DEFINITION_PATH="${ECCODES_DEFAULT_DEFINITION_PATH}.edzw:${ECCODES_DEFAULT_DEFINITION_PATH}"
        export ECCODES_DEFINITION_PATH
        ;;
    rcl_nec)
        # Number of vector host procs needs to be set explicitly
        ICON_COMPONENT1_VH_procs=$((num_restart_procs+num_io_procs+num_prefetch_proc+num_io_procs_radar))
        # Set some NEC runtime variables
        export NMPI_FPE_ENABLE="(DIV,FOF,INV)"
        export NMPI_PROGINF="ALL_DETAIL"
        export NMPI_TRACEBACK="FULL"
        export VE_FORT_SETBUF6="0"
        export VE_INIT_HEAP="ZERO"
        export NMPI_EXPORT=" NMPI_FPE_ENABLE NMPI_MALLOC_HEAP_EXPANSION_SIZE NMPI_MALLOC_MMAP_THRESHOLD NMPI_PROGINF NMPI_TRACEBACK VE_FORT_SETBUF6 VE_FPE_ENABLE VE_INIT_HEAP VE_TRACEBACK GFORTRAN_UNBUFFERED_PRECONNECTED MPI_IB_VBUF_TOTAL_SIZE"
        ;;
    *)
        ;;
esac

# Combine START and MODEL if START_MODEL is not already set.
# START_MODEL is used to ease the execution of a machine that uses a complex 
# mpirun command with multiple binaries
START_MODEL="${START_MODEL:=$START $MODEL}"

# set icon_data_poolFolder
icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/buildbot_data/nwp"

# Experiment name
EXP="dwd_art_dustrad_R2B4N5" # experiment identifier

# Switches for debugging
DISABLE_ART=0 # Disables ART in namelist
DISABLE_COMPUTE_TOTALDUST=0 # Disables computation of total dust content with cdo

# Set directory names
ICONDIR="${basedir}" # basedir can be set with create_target_header
DATAROOT="${icon_data_poolFolder}/Checksuite_data_small/art_dustrad_R2B4N5"
ECRADDIR="${ICONDIR}/externals/ecrad/data"
XMLROOT="${ICONDIR}/run/xml_art/art_dustrad_R2B4N5"

# Link input files from ICON source
ln -sf ${ICONDIR}/run/ana_varnames_map_file.txt map_file.ana
ln -sf ${ICONDIR}/data/ECHAM6_CldOptProps.nc    ECHAM6_CldOptProps.nc
ln -sf ${ICONDIR}/data/rrtmg_lw.nc              rrtmg_lw.nc

# Link grid files
ln -sf ${DATAROOT}/icon_grid_0011_R02B03_R.nc                                iconR2B03_DOM00.nc
ln -sf ${DATAROOT}/icon_grid_0012b_R02B04_G.nc                               iconR2B04_DOM01.nc
ln -sf ${DATAROOT}/external_parameter_icon_art_grid_0012b_R02B04_G_tiles.nc  extpar_iconR2B04_DOM01.nc
ln -sf ${DATAROOT}/icon_grid_0099_R02B05_N02.nc                              iconR2B05_DOM02.nc
ln -sf ${DATAROOT}/external_parameter_icon_art_grid_0099_R02B05_N02_tiles.nc extpar_iconR2B05_DOM02.nc

# Link input files from dustrad experiment
ln -sf ${DATAROOT}/an_20220228.grb                        an_R2B04_DOM01.grb
ln -sf ${DATAROOT}/fc_R02B04.20220228223000_with_dust     fg_R2B04_DOM01.grb
ln -sf ${DATAROOT}/fc_R02B05_N02.20220228223000_with_dust fg_R2B05_DOM02.grb
ln -sf ${DATAROOT}/hwsd_icon_art_grid_0012b_R02B04_G.nc   ART_STY_iconR2B04-grid_TCNR.nc
ln -sf ${DATAROOT}/hwsd_icon_art_grid_0099_R02B05_N02.nc  ART_STY_iconR2B05-grid_TCNR.nc

# Link ART XML configuration
ln -sf ${XMLROOT}/tracers_dust.xml      tracers.xml
ln -sf ${XMLROOT}/modes_dust.xml        modes.xml
ln -sf ${XMLROOT}/diagnostics_dust.xml  diagnostics.xml
ln -sf ${XMLROOT}/coagulate.xml         coagulate.xml
ln -sf ${XMLROOT}/aero_emiss.xml        aero_emiss.xml
ln -sf ${XMLROOT}/Meng_ICON_CMD_USE.xml Meng_ICON_CMD_USE.xml 

# Cleanup out
[[ -d out ]]       && rm -Rf out
mkdir out/         # output directory
[[ -d out/ready ]] && rm -Rf out/ready
mkdir out/ready/   # ready files

# Define filename of namelist
atmo_namelist=NAMELIST_${EXP}

# global timing
ndays_restart=1
dt_restart=`expr ${ndays_restart} \* 86400`

# model timing
start_date="2022-03-01T00:00:00Z"
end_date="2022-03-01T03:00:00Z"
modelTimeStep="PT9M"

# ICON master namelist
cat > icon_master.namelist << EOF
&master_nml
 lRestart = .false.
/
&master_time_control_nml
experimentStartDate = "$start_date"
experimentStopDate  = "$end_date"
/
&master_model_nml
  model_type		=	1
  model_name		=	"ATMO"
  model_namelist_filename="$atmo_namelist"
  model_min_rank	=	1
  model_max_rank	=	65536
  model_inc_rank	=	1
/
&time_nml
 ini_datetime_string = "$start_date"
 dt_restart          = $dt_restart
/
EOF

# ATMO namelist
cat > ${atmo_namelist} << EOF
&parallel_nml
 nproma                  = ${nproma}
 nproma_sub              = ${nproma_sub} ! loop chunk length for radiation
 p_test_run              = .false.
 l_test_openmp           = .true.
 l_log_checks            = .true.
 num_io_procs            = ${num_io_procs}
 num_io_procs_radar      = ${num_io_procs_radar}
 num_restart_procs       = ${num_restart_procs}
 num_prefetch_proc       = ${num_prefetch_proc}
 iorder_sendrecv         = 3
 num_dist_array_replicas = 4
 proc0_shift             = ${proc0_shift:-0}
 use_omp_input           = .true.
/
&grid_nml
 dynamics_grid_filename  = 'iconR2B04_DOM01.nc','iconR2B05_DOM02.nc'
 dynamics_parent_grid_id = 0,1
 radiation_grid_filename = 'iconR2B03_DOM00.nc'
 lfeedback               = .true.,.true.
 ifeedback_type          = 2                   !
 lredgrid_phys           = .true.,.true.
 start_time              = 0.,5400.
/
&initicon_nml
 init_mode      		= 5           				! operation mode 2: IFS
 dwdfg_filename  		= 'fg_R<nroot>B<jlev>_DOM<idom>.grb'! initial data filename
 dwdana_filename        = 'an_R<nroot>B<jlev>_DOM<idom>.grb'
 ana_varnames_map_file  = 'map_file.ana' 			! dictionary mapping internal names onto GRIB2 shortNames
 lread_ana      	 	= .true.     				! no analysis data will be read
 lp2cintp_incr          = .true.                    ! parent-to-child-interpolation
 lp2cintp_sfcana        = .false.                   ! of analyses (DET:.false.;EPS:.true.)
 ltile_coldstart 		= .false.      				! coldstart for surface tiles
 ltile_init      		= .false.     				! set it to .TRUE. if FG data originate from run without tiles
 dt_iau      			=  5400.       				! time interval (in s) during which the IAU procedure is performed
 dt_shift    			= -5400.       				! time (in s) by which the model start is shifted ahead, given by ini_datetime_string.
 iterate_iau 			= .true.
 zpbl1       			= 500.
 zpbl2       			= 1000.
 check_ana(1)%list      = 'T_SO','FR_ICE','W_SO','P','QV','T','U','V','FRESHSNW','H_SNOW'
 check_ana(2)%list      = 'T_SO','FR_ICE','W_SO','FRESHSNW','H_SNOW'
/
&run_nml
 num_lev        = 90,60
 lvert_nest     = .true.       ! use vertical nesting if a nest is active
 modelTimeStep  = "${modelTimeStep}" 
 ldynamics      = .true.       ! dynamics
 ltransport     = .true.
 iforcing       = 3            ! NWP forcing
 ltestcase      = .false.      ! false: run with real data
 msg_level      = 7            ! print maximum wind speeds every 5 time steps
 ltimer         = .true.       ! set .TRUE. for timer output
 timers_level   = 1            ! can be increased up to 10 for detailed timer output
 output         = "nml"
 lart           = .true.
 check_uuid_gracefully = .true.
/
&nwp_phy_nml
 inwp_gscp         = 1
 inwp_convection   = 1
 inwp_radiation    = 4
 inwp_cldcover     = 1
 inwp_turb         = 1
 inwp_satad        = 1
 inwp_sso          = 1
 inwp_gwd          = 1
 inwp_surface      = 1
 icapdcycl         = 3 				! apply CAPE modification to improve diurnalcycle over tropical land (optimizes NWP scores)
 latm_above_top    = .true., .true.  ! the second entry refers to the nested domain (if present)
 efdt_min_raylfric = 3600.
 itype_z0          = 2
 icpl_aero_conv    = 1
 icpl_aero_gscp    = 1
 mu_rain           = 0.5     ! new tuning becoming operational in July 2018
 rain_n0_factor    = 0.1
 ! resolution-dependent settings - please choose the appropriate one
 dt_rad         = 2160.
 dt_conv        = 720., 360.
 dt_sso         = 1440.,720.
 dt_gwd         = 1440.,
/
&nwp_tuning_nml ! taken from operational dust setup on R3B6N7
 itune_albedo      = 0
 tune_eiscrit      = 7.
 tune_gkdrag       = 0.075
 tune_gkwake       = 0.6
 tune_gfrcrit      = 0.36
 tune_grcrit       = 0.50
 tune_gustsso_lim  = 20.
 tune_dust_abs     = 1.
 tune_zvz0i        = 0.85
 tune_box_liq_asy  = 3.25
 tune_rhebc_land   = 0.825
 tune_rcucov       = 0.075
 tune_gfluxlaun    = 3.75e-3
 icpl_turb_clc     = 1
 max_calibfac_clcl = 4 ! eps: 1.5  det: 4.0
 ! SSO with MERIT data
 itune_gust_diag   = 2
 tune_blockred     = 1.5
 tune_minsso       = 1.
 tune_minsso_gwd   = 40.
 tune_capethresh   = 2000.
 tune_sc_eis       = 7.
/
&turbdiff_nml
 a_hshr        = 2.0
 alpha0        = 0.0123
 alpha0_max    = 0.0335
 alpha1        = 0.125
 c_diff        = 0.2
 frcsmot       = 0
 icldm_turb    = 1
 imode_charpar = 3
! use horizontal shear production terms with 1/SQRT(Ri) scaling to prevent unwanted side effects:
 itype_sher    = 3
 ltkesso       = .true.
 ltkeshs       = .true.
 pat_len       = 750.
 rat_sea       = 0.875
 rlam_heat     = 10.0
 tkhmin        = 0.6
 tkhmin_strat  = 1.0
 tkmmin        = 0.75
 tkmmin_strat  = 2.5
/
&lnd_nml
 ntiles         = 3
 nlev_snow      = 3
 lmulti_snow    = .false.
 itype_heatcond = 3
 idiag_snowfrac = 20
 lsnowtile      = .true.
 lseaice        = .true.
 llake          = .true.
 lprog_albsi    = .true.
 itype_canopy   = 2
 itype_lndtbl   = 4
 itype_root     = 2
 itype_evsl     = 4
 itype_trvg     = 3
 cwimax_ml      = 5.e-4
 c_soil         = 1.25
 c_soil_urb     = 0.5
 sstice_mode    = 2
 itype_snowevap = 3
/
&radiation_nml
 albedo_type         = 2          ! Modis albedo
 albedo_whitecap     = 1
 direct_albedo_water = 3
 irad_aero           = 9
 irad_o3             = 79
 vmr_cfc11           = 240.e-12
 vmr_cfc12           = 532.e-12
 vmr_ch4             = 1800.e-09
 vmr_co2             = 390.e-06   ! values representative for 2012
 vmr_n2o             = 322.0e-09
 vmr_o2              = 0.20946
 ecrad_data_path     = "${ECRADDIR}"
/
&nonhydrostatic_nml
 iadv_rhotheta       = 2
 ivctype             = 2
 itime_scheme        = 4
 exner_expol         = 0.6
 vwind_offctr        = 0.2
 damp_height         = 43500
 rayleigh_coeff      = 1
 divdamp_order       = 24 ! 2 ass, 24 fc
 divdamp_type        = 32  ! optional: 2 assimilation cycle, 32 forecast
 divdamp_fac         = 0.004   ! 0.004 for R2B6; recommendation for R3B7: 0.003
 divdamp_trans_start = 12500
 divdamp_trans_end   = 17500
 igradp_method       = 3
 l_zdiffu_t          = .true.
 thslp_zdiffu        = 0.02
 thhgtd_zdiffu       = 125.
 htop_moist_proc     = 22500.
 hbot_qvsubstep      = 16000.
/
&sleve_nml
 min_lay_thckn   = 20.
 max_lay_thckn   = 400.   ! maximum layer thickness below htop_thcknlimit
 htop_thcknlimit = 14000. ! this implies that the upcoming COSMO-EU nest will have 60 levels
 top_height      = 75000.
 stretch_fac     = 0.9
 decay_scale_1   = 4000.
 decay_scale_2   = 2500.
 decay_exp       = 1.2
 flat_height     = 16000.
/
&dynamics_nml
 iequations     = 3
 divavg_cntrwgt = 0.50
 lcoriolis      = .TRUE.
/
&transport_nml
 ctracer_list  = '12345'
 ivadv_tracer  = 3,3,3,3,3,3,3,3,3,3,3
 itype_hlimit  = 3,4,4,4,4,3,3,3,3,3,3
 ihadv_tracer  = 52,2,2,2,2,22,22,22,22,22,22
 iadv_tke      = 0
/
&diffusion_nml
 hdiff_order      = 5
 itype_vn_diffu   = 1
 itype_t_diffu    = 2
 hdiff_efdt_ratio = 24.0
 hdiff_smag_fac   = 0.025
 lhdiff_vn        = .TRUE.
 lhdiff_temp      = .TRUE.
/
&interpol_nml
 nudge_zone_width     = 8
 lsq_high_ord         = 3
 l_intp_c2l           = .true.
 l_mono_c2l           = .true.
 support_baryctr_intp = .true.
/
&gridref_nml
 grf_intmethod_e  = 6
 grf_intmethod_ct = 2
 grf_tracfbk      = 2
 denom_diffu_v    = 150.
/
&gribout_nml
 generatingCenter    = 78
 generatingSubcenter = 255
/
&extpar_nml
 itopo                = 1
 n_iter_smooth_topo   = 1
 heightdiff_threshold = 3000.
 read_nc_via_cdi      = .false.
/
&io_nml
 itype_pres_msl = 4  ! IFS method with bug fix for self-consistency between SLP and geopotential
 itype_rh       = 1  ! RH w.r.t. water
/
&output_nml
 filetype         = 4               ! output format: 2 = GRIB2, 4 = NETCDFv2
 dom              = 1               ! write all domains
 output_time_unit = 3               ! 3: hours
 output_bounds    = 3., 3., 1.    ! start, end, increment
 steps_per_file   = 1
 mode             = 1               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
 steps_per_file   = 1
 include_last     = .TRUE.
 filename_format  = '<output_filename>_DOM<physdom>_<levtype>_<ddhhmmss>'
 output_filename  = '${EXP}'            ! file name base
 ml_varlist       = 'temp','rho','sob_s','sodifd_s','z_mc','group:ART_AEROSOL','group:ART_DIAGNOSTICS','group:ART_ROUTINE_DIAG'
 remap            = 0
/
&output_nml
 filetype         = 4        ! output format: 2 = GRIB2, 4 = NETCDFv2
 dom              = 2                 ! write all domains
 output_time_unit = 3                 ! 3: hours
 output_bounds    = 3., 3., 1.     ! start, end, increment
 steps_per_file   = 1
 mode             = 1                 ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
 steps_per_file   = 1
 include_last     = .TRUE.
 filename_format  = '<output_filename>_DOM<physdom>_<levtype>_<ddhhmmss>'
 output_filename  = '${EXP}'            ! file name base
 ml_varlist       = 'temp','rho','sob_s','sodifd_s','z_mc','group:ART_AEROSOL','group:ART_DIAGNOSTICS','group:ART_ROUTINE_DIAG'
 remap            = 0
/
&art_nml
 lart_diag_out        = .TRUE.
 lart_aerosol         = .TRUE.
 iart_ari             = 1
 iart_init_aero       = 0
 iart_seasalt         = 0
 iart_dust            = 1
 iart_nonsph          = 1
 cart_io_suffix       = 'TCNR','TCNR'
 cart_aerosol_xml     = './tracers.xml'
 cart_input_folder    = './'
 cart_modes_xml       = './modes.xml'
 cart_coag_xml        = './coagulate.xml'
 cart_aero_emiss_xml  = './aero_emiss.xml'
 cart_diagnostics_xml = './diagnostics.xml'
/
EOF

# Disable ART in namelist if switch is activated
if [ ${DISABLE_ART} -eq 1 ]; then
    echo "WARNING: ART is disabled, because DISABLE_ART is set to 1." >&2
    sed -e "s/,'group:ART_AEROSOL','group:ART_DIAGNOSTICS','group:ART_ROUTINE_DIAG'//" \
        -e "s/\s*lart\s*=.*/lart = .false./" \
        -e "s/\s*irad_aero\s*=.*/irad_aero = 6/" \
        -e "/&art_nml/,\//d" \
        -i ${atmo_namelist}
fi

# Run the model!
ls -l ${MODEL}
${START_MODEL}
EXIT_STATUS=$?

# Print ICON exit code and finish if run failed or verification is to be skipped
echo "EXIT_STATUS: $EXIT_STATUS"
if [[ $EXIT_STATUS -ne 0 ]] || [[ ${DISABLE_COMPUTE_TOTALDUST} -eq 1 ]]; then
    exit $EXIT_STATUS
fi

# Verify results with some basic checks against reference data
echo "Computing total atmospheric dust content..."
# Check if cdo is available
cdo=${cdo:-$(which cdo)}
if [ -z ${cdo} ]; then
    echo 'Error: cdo not found. Set $cdo or add to $PATH.'
    exit 1
fi
# 1) Extract cell grid
$cdo selname,cell_area iconR2B04_DOM01.nc gridcell_R2B04_DOM01.nc
$cdo selname,cell_area iconR2B05_DOM02.nc gridcell_R2B05_DOM02.nc
# 2) Compute total mass/number inside domain 
$cdo -s -infov -vertint -fldint -setgrid,gridcell_R2B04_DOM01.nc \
     -mul -selvar,rho ${EXP}_DOM01_ML_00030000.nc \
     -selvar,dusta,dustb,dustc,dusta0,dustb0,dustc0 ${EXP}_DOM01_ML_00030000.nc
$cdo -s -infov -vertint -fldint -setgrid,gridcell_R2B05_DOM02.nc \
     -mul -selvar,rho ${EXP}_DOM02_ML_00030000.nc \
     -selvar,dusta,dustb,dustc,dusta0,dustb0,dustc0 ${EXP}_DOM02_ML_00030000.nc

# Exit with ICON's exit status
exit $EXIT_STATUS
