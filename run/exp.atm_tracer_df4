# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

#--------------------------------------------------------------------------------------------------
#
# Pure tracer advection experiment
#
author_list="Daniel Reinert, DWD"
#
#--------------------------------------------------------------------------------------------------
#
# Horizontal tracer transport is performed in an analytically prescribed,
# time dependent 2-dimensional flow field. Two initially well resolved tracer blobs
# undergo severe deformation while being transported around the globe. At half time, the
# flow reverses its course and ideally, the tracer field returns back to its initial
# state. A 3D version of this test case is part of the DCMIP-2012 test suite.
# For more information see
# * Nair, R. et al (2010): A class of deformational flow test cases for
#   linear transport problems on the sphere. JCP, 229, 8868-8887
# * Kent,J. et al (2014): Dynamical core model intercomparison project:
#   Tracer transport test cases. QJRMS 140, 1279-1293
#
# Currently, only the MIURA3 scheme is tested. Other variants of the tracer
# transport are about to follow.
#
#
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths

icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/buildbot_data"

#--------------------------------------------------------------------------------------------------

# (2) Set variables needed by the scripting mechanism

# horizontal grid(s)
#
grids_folder=${icon_data_poolFolder}/nwp/grids/public/edzw
#
# global domain
#
dynamics_grid_filename=icon_grid_0030_R02B05_G.nc
atmo_dyn_grids="'${dynamics_grid_filename}',"
radiation_grid_filename=""
atmo_rad_grid="'${radiation_grid_filename}',"

# start and end date+time
start_date=${start_date:="2008-09-01T00:00:00Z"}
  end_date=${end_date:="2008-09-13T00:00:00Z"}

# restart intervals
checkpoint_interval=P7D
   restart_interval=P20D


# output intervals
output_bounds="0.,1036800.,172800."
steps_per_file=40

num_io_procs=${num_io_procs:-1}

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration

echo "Define the model configuration"
echo "${atmo_namelist}"
pwd

cat > ${basedir}/run/${atmo_namelist} << EOF
!
&parallel_nml
 nproma                 = ${nproma}
 nblocks_c              = ${nblocks_c}
 nproma_sub             = ${nproma_sub}
 num_io_procs           = ${num_io_procs}
 p_test_run             = .false.
 l_test_openmp          = .false.
 l_log_checks           = .false.
 iorder_sendrecv        = 1
 proc0_shift            = ${proc0_shift}
/
&grid_nml
 dynamics_grid_filename = ${atmo_dyn_grids},
 radiation_grid_filename= ${atmo_rad_grid}
/
&run_nml
 num_lev	        = 3
 dtime			= 240         ! timestep in seconds
 ltestcase              = .TRUE.      ! run testcase
 ldynamics		= .FALSE.     ! dynamics
 ltransport		= .TRUE.      ! transport
 ntracer                = 1           ! number of tracers - default 0
 iforcing		= 0           ! no forcing
 lart                   = .FALSE.     ! ICON-ART main switch
 msg_level		= 12          ! detailed report during integration
 restart_filename       = '${EXPNAME}_restart_atm_<rsttime>.mfr'
 ltimer			= .TRUE.
 timers_level		= 10
 output			= "nml","totint"
/
&nh_testcase_nml
 tracer_inidist_list    = 5
 nh_test_name           = 'DF4'      ! deformational flow
 linit_tracer_fv        = .TRUE.     ! finite-volume-type initialization
/
&nonhydrostatic_nml
 itime_scheme           = 1
 ivctype                = 2          ! SLEVE
/
&dynamics_nml
 lcoriolis              = .FALSE.
/
&transport_nml
 tracer_names           = 'Q5'       ! list of tracer names
 ihadv_tracer	        = 3          ! Miura3
 lvadv_tracer           = .FALSE.    ! no vertical transport
 ivadv_tracer		= 3
 itype_hlimit		= 0
 itype_vlimit           = 0
 llsq_svd               = .TRUE.
 lclip_tracer           = .FALSE.    ! no clipping
/
&interpol_nml
 llsq_lin_consv         = .TRUE.
 llsq_high_consv        = .TRUE.
 lsq_high_ord           = 3
/
&sleve_nml
 top_height             = 2000.
 flat_height            = 2000.
 min_lay_thckn          = -1            ! constant level spacing
/
&output_nml
 filetype               = 4
 dom                    = -1
 output_time_unit       = 1
 output_bounds          = $output_bounds  ! start, end, increment
 steps_per_file         = 1
 include_last           = .TRUE.
 remap                  = 0                        ! triangular grid
 output_filename        = '${EXPNAME}_tracer'      ! file name base
 filename_format        = '${EXPNAME}_tracer_ml_<datetime2>'
 ready_file             = '${EXPNAME}_tracer_ml_<datetime2>.ready'
 output_grid            = .TRUE.
 ml_varlist             = 'Q5'
/
&output_nml
 filetype               = 4
 dom                    = -1
 output_time_unit       = 1
 output_bounds          = $output_bounds  ! start, end, increment
 steps_per_file         = $steps_per_file
 include_last           = .TRUE.
 remap                  = 0               ! triangular grid
 output_filename        = 'icon_df4'      ! file name base
 filename_format        = "<output_filename>_<levtype_l>_<datetime2>"
 output_grid            = .TRUE.
 ml_varlist             = 'vn','u','v','div','theta_v','rho'
/
EOF
