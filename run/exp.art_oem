#!/bin/ksh

# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

# =======================================================================================
# 
# Name: exp.art_oem.run
#
# Purpose: Runscript for ICON-ART to conduct a LAM simulation over Europe, 
#          featuring methane tracers emitted by the online emissions module. 
#          This example includes one emission tracer with two categories &
#          10 ensemble members. 
#
#          - For long test runs (i.e. higher than 1 hour of physical time), activate 
#            the time-dependent boundaries (i.e. itype_latbc=1).
#
#          - At least 3 & 4 GPU nodes (Piz Daint) are required to run this specific
#            test case with itype_latbc=0 & itype_latbc=1, respectively.  
#
#          - For GPU runs, use one block for each MPI (i.e. nblocks_c=1) & let 
#            the code evaluate nproma for maximum performance. For CPU runs, use
#            nproma=16 (on Piz Daint). 
#
#          - Radiation is off here (inwp_radiation=0). Switch it on and use ecRad by 
#            setting inwp_radiation=4. Do not specify nproma_sub (for radiation) for CPU runs. 
#            For GPU runs, its value should be evaluated based on nproma & code performance 
#            (through trial & error). 
#
# Author: Arash Hamzehloo (Empa, 2024)
#
#
# ======================================================================================= 

set -x

#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths

icon_data_poolFolder="/users/icontest/pool/data/ICON/art_data/oem_methane"

# =======================================================================
# Setup - experiment
# ======================================================================

# generate output files for probtest?
probtest=yes
# generate structured output files?
structured_output=no  # interpolation for structured output breaks all files

# Folder containing required grid information
grids_folder=${icon_data_poolFolder}/grids/

# Folder containing lateral boundary conditions
input_dir=${icon_data_poolFolder}/input/

# variables atmo_dyn_grids and atmo_rad_grids are used
# (for copying) in the generated script; so they are strings
dynamics_grid_filename=dyn_grid.nc
atmo_dyn_grids="'${dynamics_grid_filename}',"

radiation_grid_filename=parent_grid.nc
atmo_rad_grids="'${radiation_grid_filename}',"

# start and end date+time
start_date=${start_date:="2019-08-05T00:00:00Z"}
end_date=${end_date:="2019-08-05T00:05:00Z"}
#end_date=${end_date:="2019-08-06T00:00:00Z"}

# output intervals
# make sure this coincides with timesteps (dtime)
output_interval="PT60S"
file_interval="PT60S"
#output_interval="PT3600S"
#file_interval="PT3600S"

# translating between output and internal variable names
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim_fuernwp  > ${dict_file}
add_required_file ${basedir}/run/${dict_file} .

if [[ "$probtest" == "yes" ]]
then
  output_art_oem=yes
  output_atm_3d=yes

else
  output_art_oem=no
  output_atm_3d=no
  
fi
  
if [[ "$structured_output" == "yes" ]]
then
  output_art_oem_structured=yes
else
  output_art_oem_structured=no
fi


# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm

# ========================
# Get required files together
# ========================

extpar_filename=extpar_file.nc
add_required_file ${grids_folder}/${extpar_filename} .

# files needed for radiation
add_link_file ${basedir}/externals/ecrad/data ecrad_data

# Dictionary for the mapping: DWD GRIB2 names <-> ICON internal names
add_required_file ${basedir}/run/ana_varnames_map_file.txt map_file.ana

# Dictionary for the mapping: GRIB2/Netcdf input names <-> ICON internal names
add_required_file ${input_dir}/map_file.latbc map_file.latbc

# initial data
initial_condition=era5_2019080500.nc
add_link_file ${input_dir}/${initial_condition} .

# lateral boundary grid
add_required_file ${input_dir}/lateral_boundary.grid.nc lateral_boundary.grid.nc

# lateral boundary data
add_link_file ${input_dir}/era5_2019080500_lbc.nc .
add_link_file ${input_dir}/era5_2019080503_lbc.nc .
add_link_file ${input_dir}/era5_2019080506_lbc.nc .
add_link_file ${input_dir}/era5_2019080509_lbc.nc .
add_link_file ${input_dir}/era5_2019080512_lbc.nc .
add_link_file ${input_dir}/era5_2019080515_lbc.nc .
add_link_file ${input_dir}/era5_2019080518_lbc.nc .
add_link_file ${input_dir}/era5_2019080521_lbc.nc .
add_link_file ${input_dir}/era5_2019080600_lbc.nc .


# art files
art_dir=${basedir}/externals/art
add_required_file ${input_dir}/ch4.xml tracers.xml
add_required_file ${input_dir}/oem/tno.nc .
add_required_file ${input_dir}/oem/vertical_profiles.nc .
add_required_file ${input_dir}/oem/hourofday.nc .
add_required_file ${input_dir}/oem/dayofweek.nc .
add_required_file ${input_dir}/oem/monthofyear.nc .


# ===========================================================================
# Create ICON master namelist
# ==========================================================================

cat > ${basedir}/run/icon_master.namelist << EOF

! master_nml: ----------------------------------------------------------------
&master_nml
 lrestart                   =                      .FALSE.        ! .TRUE.=current experiment is resumed
/

! master_model_nml: repeated for each model ----------------------------------
&master_model_nml
 model_type                  =                          1         ! identifies which component to run (atmosphere,ocean,...)
 model_name                  =                      "ATMO"        ! character string for naming this component.
 model_namelist_filename     =          "${atmo_namelist}"        ! file name containing the model namelists
 model_min_rank              =                          1         ! start MPI rank for this model
 model_max_rank              =                      65536         ! end MPI rank for this model
 model_inc_rank              =                          1         ! stride of MPI ranks
/

! time_nml: specification of date and time------------------------------------
&time_nml
 ini_datetime_string         =             "${start_date}"        ! initial date and time of the simulation
 end_datetime_string         =               "${end_date}"        ! end date and time of the simulation
                                                                  ! example date: 2001-01-01T01:00:00Z
/
EOF

# ----------------------------------------------------------------------
# Model namelists
# ----------------------------------------------------------------------


cat > ${basedir}/run/${atmo_namelist} << EOF
! parallel_nml: MPI parallelization -------------------------------------------
&parallel_nml
 nproma                      =                   ${nproma}        ! loop chunk length
 !nproma_sub                  =                         2000
 nblocks_c                   =                   ${nblocks_c}     ! loop number of cell blocks
 p_test_run                  =                     .FALSE.        ! .TRUE. means verification run for MPI parallelization
 num_io_procs                =                          0         ! number of I/O processors
 num_restart_procs           =                          0         ! number of restart processors
 num_prefetch_proc           =                          1         ! number of processors for LBC prefetching
 iorder_sendrecv             =                          3         ! sequence of MPI send/receive calls
/

! run_nml: general switches ---------------------------------------------------
&run_nml
 ltestcase                   =                     .FALSE.        ! real case run
 num_lev                     =                         60        ! number of full levels (atm.) for each domain
 lvert_nest                  =                     .FALSE.        ! no vertical nesting
 dtime                       =                         30.        ! timestep in seconds
 ldynamics                   =                      .TRUE.        ! compute adiabatic dynamic tendencies
 ltransport                  =                      .TRUE.        ! compute large-scale tracer transport
 ntracer                     =                          0         ! number of advected tracers
 iforcing                    =                          3         ! forcing of dynamics and transport by parameterized processes
 msg_level                   =                         12         ! detailed report during integration
 ltimer                      =                      .TRUE.        ! timer for monitoring the runtime of specific routines
 timers_level                =                         10         ! performance timer granularity
 check_uuid_gracefully       =                      .TRUE.        ! give only warnings for non-matching uuids
 output                      =                        "nml"       ! main switch for enabling/disabling components of the model output
 lart                        =                      .TRUE.
/

! art_nml: Aerosols and Reactive Trace gases extension-------------------------------------------------
&art_nml
 lart_chem                  =                        .TRUE.       ! enables chemistry
 lart_pntSrc                =                        .FALSE.      ! enables point sources
 lart_aerosol               =                        .FALSE.      ! main switch for the treatment of atmospheric aerosol
 lart_chemtracer            =                        .TRUE.       ! main switch for the treatment of chemical tracer
 lart_diag_out              =                        .TRUE.       ! If this switch is set to .TRUE., diagnostic
                                                                  ! ... output elds are available. Set it to
                                                                  ! ... .FALSE. when facing memory problems.
 iart_init_gas              =                            4
 cart_cheminit_file         =        '${initial_condition}'
 cart_cheminit_type         =                        'EMAC'
 cart_cheminit_coord        =        '${initial_condition}'
 iart_seasalt               =                            0        ! enable seasalt
 cart_chemtracer_xml        =                 'tracers.xml'       ! path to xml file for passive tracers
 cart_input_folder          =                   '${art_dir}'       ! absolute Path to ART source code
 iart_ari                   =                            0          ! [0|1] for radiation feedback with ART aerosols (ASH or DUST)
/

! oem_nml: online emission module ---------------------------------------------
&oemctrl_nml
 gridded_emissions_nc        =   'tno.nc'
 vertical_profile_nc         =   'vertical_profiles.nc'
 hour_of_day_nc              =   'hourofday.nc'
 day_of_week_nc              =   'dayofweek.nc'
 month_of_year_nc            =   'monthofyear.nc'
 ens_reg_nc                  =    '${icon_data_poolFolder}/input/mask_example_ahamzehl.nc'
 ens_lambda_nc               =    '${icon_data_poolFolder}/input/lambdas_realworld.nc'
/

! diffusion_nml: horizontal (numerical) diffusion ----------------------------
&diffusion_nml
 lhdiff_vn                   =                      .TRUE.        ! diffusion on the horizontal wind field
 lhdiff_temp                 =                      .TRUE.        ! diffusion on the temperature field
 lhdiff_w                    =                      .TRUE.        ! diffusion on the vertical wind field
 hdiff_order                 =                          5         ! order of nabla operator for diffusion
 itype_vn_diffu              =                          1         ! reconstruction method used for Smagorinsky diffusion
 itype_t_diffu               =                          2         ! discretization of temperature diffusion
 hdiff_efdt_ratio            =                         24.0       ! ratio of e-folding time to time step 
 hdiff_smag_fac              =                          0.025     ! scaling factor for Smagorinsky diffusion
/

! dynamics_nml: dynamical core -----------------------------------------------
&dynamics_nml
 iequations                  =                          3         ! type of equations and prognostic variables
 divavg_cntrwgt              =                          0.50      ! weight of central cell for divergence averaging
 lcoriolis                   =                      .TRUE.        ! Coriolis force
/

! extpar_nml: external data --------------------------------------------------
&extpar_nml
 itopo                       =                          1         ! topography (0:analytical)
 extpar_filename             =        '${extpar_filename}'        ! filename of external parameter input file
 n_iter_smooth_topo          =                        1,1         ! iterations of topography smoother
 heightdiff_threshold        =                       3000.        ! height difference between neighb. grid points
 hgtdiff_max_smooth_topo     =                   750.,750.        ! see Namelist doc
 heightdiff_threshold        =                 2250.,1500.
/

! initicon_nml: specify read-in of initial state ------------------------------
&initicon_nml
 init_mode                    =                           2       ! For ICON-LAM runs, use 7 when initialized from ICON and 2 from IFS
 lread_ana                    =                      .FALSE.      ! no analysis data will be read
 ifs2icon_filename           =        '${initial_condition}'      ! initial data filename
 ana_varnames_map_file       =                'map_file.ana'      ! dictionary mapping internal names onto GRIB2 shortNames
 ltile_coldstart             =                      .TRUE.        ! coldstart for surface tiles
 ltile_init                  =                     .FALSE.        ! set it to .TRUE. if FG data originate from run without tiles
 pinit_seed                   =                          0        ! seed for perturbation of initial model state. no perturbation by default
 pinit_amplitude              =                          0.       ! amplitude of perturbation
/

! grid_nml: horizontal grid --------------------------------------------------
&grid_nml
 dynamics_grid_filename      =         ${atmo_dyn_grids}        ! array of the grid filenames for the dycore
 radiation_grid_filename     =         ${atmo_rad_grids}        ! array of the grid filenames for the radiation model
 dynamics_parent_grid_id     =                          0         ! array of the indexes of the parent grid filenames
 lredgrid_phys               =                      .TRUE.        ! .true.=radiation is calculated on a reduced grid
 lfeedback                   =                      .TRUE.        ! specifies if feedback to parent grid is performed
 l_limited_area              =                      .TRUE.        ! .TRUE. performs limited area run
 ifeedback_type              =                          2         ! feedback type (incremental/relaxation-based)
 start_time                  =                          0.        ! Time when a nested domain starts to be active [s]
/

! gridref_nml: grid refinement settings --------------------------------------
&gridref_nml
 denom_diffu_v               =                        150.        ! denominator for lateral boundary diffusion of velocity
/

! interpol_nml: settings for internal interpolation methods ------------------
&interpol_nml
 nudge_zone_width            =                         8         ! width of lateral boundary nudging zone
 support_baryctr_intp        =                     .FALSE.        ! barycentric interpolation support for output
 nudge_max_coeff             =                       0.069
 nudge_efold_width           =                        2.0
/

! io_nml: general switches for model I/O -------------------------------------
&io_nml
 itype_pres_msl              =                          4         ! method for computation of mean sea level pressure
!  lmask_boundary              =                      .TRUE.        ! mask out interpolation zone in output
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
/

! limarea_nml: settings for limited area mode ---------------------------------
&limarea_nml
 itype_latbc                 =                          0         ! 1: time-dependent lateral boundary conditions
 dtime_latbc                 =                      10800.        ! time difference between 2 consecutive boundary data
 nlev_latbc                  =                        137         ! Number of vertical levels in boundary data
 latbc_boundary_grid         =   "lateral_boundary.grid.nc"       ! Grid file defining the lateral boundary
 ! setting the latbc_path to the _source_ of the latbc files instead of
 ! the target is strange. However, here we don't technically know yet
 ! where the experiment will be run, so we can't actually set the
 ! destination of the copied latbc files.
 latbc_path                  =              "${input_dir}"        ! Absolute path to boundary data
 latbc_varnames_map_file     =            'map_file.latbc'
 latbc_filename              =     'era5_2019<m><d><h>_lbc.nc'    ! boundary data input filename
 init_latbc_from_fg          =                     .FALSE.        ! .TRUE.: take lbc for initial time from first guess
/

! lnd_nml: land scheme switches -----------------------------------------------
&lnd_nml
 ntiles                      =                          3         ! number of tiles
 nlev_snow                   =                          3         ! number of snow layers
 lmulti_snow                 =                      .FALSE.       ! .TRUE. for use of multi-layer snow model
 idiag_snowfrac              =                         20         ! type of snow-fraction diagnosis
 lsnowtile                   =                       .TRUE.       ! .TRUE.=consider snow-covered and snow-free separately
 itype_root                  =                          2         ! root density distribution
 itype_heatcond              =                          3         ! type of soil heat conductivity
 itype_lndtbl                =                          4         ! table for associating surface parameters
 itype_evsl                  =                          4         ! type of bare soil evaporation
 itype_root                  =                          2         ! root density distribution
 cwimax_ml                   =                      5.e-4         ! scaling parameter for max. interception storage
 c_soil                      =                       1.75         ! surface area density of the evaporative soil surface
 c_soil_urb                  =                        0.5         ! same for urban areas
 lseaice                     =                      .FALSE.       ! .TRUE. for use of sea-ice model
 llake                       =                      .TRUE.        ! .TRUE. for use of lake model
/

! nonhydrostatic_nml: nonhydrostatic model -----------------------------------
&nonhydrostatic_nml
 iadv_rhotheta               =                          2         ! advection method for rho and rhotheta
 ivctype                     =                          2         ! type of vertical coordinate
 itime_scheme                =                          4         ! time integration scheme
 ndyn_substeps               =                          5         ! number of dynamics steps per fast-physics step
 exner_expol                 =                          0.333     ! temporal extrapolation of Exner function
 vwind_offctr                =                          0.2       ! off-centering in vertical wind solver
 damp_height                 =                      12500.0       ! height at which Rayleigh damping of vertical wind starts
 rayleigh_coeff              =                          1.5       ! Rayleigh damping coefficient
 divdamp_order               =                         24         ! order of divergence damping 
 divdamp_type                =                         3          ! type of divergence damping
 divdamp_fac                 =                          0.004     ! scaling factor for divergence damping
 igradp_method               =                          3         ! discretization of horizontal pressure gradient
 l_zdiffu_t                  =                      .TRUE.        ! specifies computation of Smagorinsky temperature diffusion
 thslp_zdiffu                =                          0.02      ! slope threshold (temperature diffusion)
 thhgtd_zdiffu               =                        125.0       ! threshold of height difference (temperature diffusion)
 htop_moist_proc             =                      22500.0       ! max. height for moist physics
 hbot_qvsubstep              =                      22500.0       ! height above which QV is advected with substepping scheme
/

! nwp_phy_nml: switches for the physics schemes ------------------------------
&nwp_phy_nml
 inwp_gscp                   =                          2         ! cloud microphysics and precipitation
 inwp_convection             =                          1         ! convection
 lshallowconv_only           =                      .FALSE.       ! only shallow convection
 inwp_radiation              =                          0         ! 0 = no radiation
                                                                  ! 1 = RRTM (which is not supported on GPU)
                                                                  ! 4 = ecRad (which will be supported on GPU in the near future)
 inwp_cldcover               =                          1         ! cloud cover scheme for radiation
 inwp_turb                   =                          1         ! vertical diffusion and transfer
 inwp_satad                  =                          1         ! saturation adjustment
 inwp_sso                    =                          1         ! subgrid scale orographic drag
 inwp_gwd                    =                          0         ! non-orographic gravity wave drag
 inwp_surface                =                          1         ! surface scheme
 latm_above_top              =                      .TRUE.        ! take into account atmosphere above model top for radiation computation
 ldetrain_conv_prec          =                      .TRUE.
 efdt_min_raylfric           =                       7200.        ! minimum e-folding time of Rayleigh friction
 itype_z0                    =                          2         ! type of roughness length data
 icapdcycl                   =                          3         ! apply CAPE modification to improve diurnalcycle over tropical land
 icpl_aero_conv              =                          1         ! coupling between autoconversion and Tegen aerosol climatology
 icpl_aero_gscp              =                          1         ! coupling between autoconversion and Tegen aerosol climatology
 lrtm_filename               =                'rrtmg_lw.nc'       ! longwave absorption coefficients for RRTM_LW
 cldopt_filename             =             'rrtm_cldopt.nc'       ! RRTM cloud optical properties
 dt_rad                      =                        360.       ! time step for radiation in s
 dt_conv                     =                        30.       ! time step for convection in s (domain specific)
 dt_sso                      =                        30.       ! time step for SSO parameterization
 dt_gwd                      =                        90.       ! time step for gravity wave drag parameterization
/

! nwp_tuning_nml: additional tuning parameters ----------------------------------
&nwp_tuning_nml
 itune_albedo                =                          1         ! reduced albedo (w.r.t. MODIS data) over Sahara
 tune_gkwake                 =                        1.8
 tune_gkdrag                 =                        0.01
 tune_minsnowfrac            =                        0.3
/

! radiation_nml: radiation scheme ---------------------------------------------
&radiation_nml
 ecrad_isolver                =                          2
 irad_o3                     =                          79         ! ozone climatology
 irad_aero                   =                          6         ! aerosols
 albedo_type                 =                          2         ! type of surface albedo
 vmr_co2                     =                    390.e-06
 vmr_ch4                     =                   1800.e-09
 vmr_n2o                     =                   322.0e-09
 vmr_o2                      =                     0.20946
 vmr_cfc11                   =                    240.e-12
 vmr_cfc12                   =                    532.e-12
 direct_albedo_water         =                           3
 albedo_whitecap             =                           1
 ecrad_data_path             =          '${basedir}/externals/ecrad/data'
/

! sleve_nml: vertical level specification -------------------------------------
&sleve_nml
 min_lay_thckn               =                         20.0       ! layer thickness of lowermost layer
 top_height                  =                      23000.0       ! height of model top
 stretch_fac                 =                          0.65      ! stretching factor to vary distribution of model levels
 decay_scale_1               =                       4000.0       ! decay scale of large-scale topography component
 decay_scale_2               =                       2500.0       ! decay scale of small-scale topography component
 decay_exp                   =                          1.2       ! exponent of decay function
 flat_height                 =                      16000.0       ! height above which the coordinate surfaces are flat
/

! transport_nml: tracer transport ---------------------------------------------
&transport_nml
 npassive_tracer             =                          0         ! number of additional passive tracers
 ivadv_tracer                =              3, 3, 3, 3, 3, 3         ! tracer specific method to compute vertical advection
 itype_hlimit                =              3, 4, 4, 4, 4, 4         ! type of limiter for horizontal transport
 ihadv_tracer                =             52, 2, 2, 2, 2, 22        ! tracer specific method to compute horizontal advection
 llsq_svd                    =                      .TRUE.        ! use SV decomposition for least squares design matrix
/

! turbdiff_nml: turbulent diffusion -------------------------------------------
&turbdiff_nml
 tkhmin                      =                          0.75      ! scaling factor for minimum vertical diffusion coefficient
 tkmmin                      =                          0.75      ! scaling factor for minimum vertical diffusion coefficient
 pat_len                     =                        750.0       ! effective length scale of thermal surface patterns
 c_diff                      =                          0.2       ! length scale factor for vertical diffusion of TKE
 rat_sea                     =                          0.8       ! controls laminar resistance for sea surface
 ltkesso                     =                        .TRUE.      ! consider TKE-production by sub-grid SSO wakes
 frcsmot                     =                          0.2       ! these 2 switches together apply vertical smoothing of the TKE source terms
 imode_frcsmot               =                            2       ! in the tropics (only), which reduces the moist bias in the tropical lower troposphere
 itype_sher                  =                            3       ! type of shear forcing used in turbulence
 ltkeshs                     =                        .TRUE.      ! include correction term for coarse grids in hor. shear production term
 a_hshr                      =                          2.0       ! length scale factor for separated horizontal shear mode
 icldm_turb                  =                            1       ! mode of cloud water representation in turbulence
 ldiff_qi                    =                        .TRUE.
/

&ser_nml
!   ser_art_data = 1, 12, 12
!   ser_physics = 1, 12, 12
!   ser_dynamics = 1, 12, 12
!   ser_convection = 1, 12, 12
!   ser_step_advection = 1, 12, 12
!   ser_output_diag = 1, 12, 12
!   ser_latbc_data = 1, 12, 12
/
EOF

if [[ "$output_atm_3d" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'pfull'   , 'zg'      ,
                    'rho'     , 'ta'      ,
                    'ua'      , 'va'      , 'wap'     ,
                    'hus'     , 'clw'     , 'cli'     ,
                    'cl'      ,
/
EOF
fi

if [[ "$output_art_oem" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_CH4"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist                  =  'group:ART_CHEMISTRY',
                                'group:nh_prog_vars',
                                'group:ATMO_ML_VARS',
                                'group:PBL_VARS',
                                'z_mc', 'z_ifc',
/
EOF
fi

if [[ "$output_art_oem_structured" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 filetype                    =                          4         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                         =                          1         ! write domain 1 only
 output_start                =            "${start_date}"
 output_end                  =              "${end_date}"
 output_interval             =       "${output_interval}"
 file_interval               =         "${file_interval}"
 mode                        =                          1         ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
 include_last                =                      .TRUE.
 output_filename             =                    'STRUCTURED'
 filename_format             = '<output_filename>_<datetime>'     ! file name base
 steps_per_file_inclfirst    =                    .FALSE.
 output_grid                 =                      .TRUE.
 remap                       =                          1         ! 1: remap to lat-lon grid
 reg_lon_def                 =              -16.0,0.16,36.0 
 reg_lat_def                 =               32.0,0.12,74.0 
 ml_varlist                  =  'group:ART_CHEMISTRY',
                                'group:nh_prog_vars',
                                'group:ATMO_ML_VARS',
                                'group:PBL_VARS',
                                'z_mc', 'z_ifc',
/
EOF
fi
