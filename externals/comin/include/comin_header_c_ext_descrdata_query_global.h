/* @authors 11/2023 :: ICON Community Interface  <comin@icon-model.org>

   SPDX-License-Identifier: BSD-3-Clause

   Please see the file LICENSE in the root of the source tree for this code.
   Where software is supplied by third parties, it is indicated in the
   headers of the routines.

*** DO NOT EDIT MANUALLY!  Generated by python script in utils/. DO NOT EDIT MANUALLY! *** */
#ifdef __cplusplus
extern "C"{
#endif
  int comin_descrdata_get_global_n_dom();
  int comin_descrdata_get_global_max_dom();
  int comin_descrdata_get_global_nproma();
  int comin_descrdata_get_global_wp();
  int comin_descrdata_get_global_min_rlcell_int();
  int comin_descrdata_get_global_min_rlcell();
  int comin_descrdata_get_global_max_rlcell();
  int comin_descrdata_get_global_min_rlvert_int();
  int comin_descrdata_get_global_min_rlvert();
  int comin_descrdata_get_global_max_rlvert();
  int comin_descrdata_get_global_min_rledge_int();
  int comin_descrdata_get_global_min_rledge();
  int comin_descrdata_get_global_max_rledge();
  int comin_descrdata_get_global_grf_bdywidth_c();
  int comin_descrdata_get_global_grf_bdywidth_e();
  bool comin_descrdata_get_global_lrestartrun();
  void comin_descrdata_get_global_vct_a(double** vct_a, int* arr_size);
  int comin_descrdata_get_global_yac_instance_id();
  void comin_descrdata_get_global_host_git_remote_url(char** host_git_remote_url, int* arr_size);
  void comin_descrdata_get_global_host_git_branch(char** host_git_branch, int* arr_size);
  void comin_descrdata_get_global_host_git_tag(char** host_git_tag, int* arr_size);
  void comin_descrdata_get_global_host_revision(char** host_revision, int* arr_size);
  bool comin_descrdata_get_global_has_device();
  void comin_descrdata_get_global_device_name(char** device_name, int* arr_size);
  void comin_descrdata_get_global_device_vendor(char** device_vendor, int* arr_size);
  void comin_descrdata_get_global_device_driver(char** device_driver, int* arr_size);

  const struct comin_descrdata_property_t comin_descrdata_global_properties[] = {
    {"n_dom", (void*)&comin_descrdata_get_global_n_dom, "int", 0, false, 0 },
    {"max_dom", (void*)&comin_descrdata_get_global_max_dom, "int", 0, false, 0 },
    {"nproma", (void*)&comin_descrdata_get_global_nproma, "int", 0, false, 0 },
    {"wp", (void*)&comin_descrdata_get_global_wp, "int", 0, false, 0 },
    {"min_rlcell_int", (void*)&comin_descrdata_get_global_min_rlcell_int, "int", 0, false, 0 },
    {"min_rlcell", (void*)&comin_descrdata_get_global_min_rlcell, "int", 0, false, 0 },
    {"max_rlcell", (void*)&comin_descrdata_get_global_max_rlcell, "int", 0, false, 0 },
    {"min_rlvert_int", (void*)&comin_descrdata_get_global_min_rlvert_int, "int", 0, false, 0 },
    {"min_rlvert", (void*)&comin_descrdata_get_global_min_rlvert, "int", 0, false, 0 },
    {"max_rlvert", (void*)&comin_descrdata_get_global_max_rlvert, "int", 0, false, 0 },
    {"min_rledge_int", (void*)&comin_descrdata_get_global_min_rledge_int, "int", 0, false, 0 },
    {"min_rledge", (void*)&comin_descrdata_get_global_min_rledge, "int", 0, false, 0 },
    {"max_rledge", (void*)&comin_descrdata_get_global_max_rledge, "int", 0, false, 0 },
    {"grf_bdywidth_c", (void*)&comin_descrdata_get_global_grf_bdywidth_c, "int", 0, false, 0 },
    {"grf_bdywidth_e", (void*)&comin_descrdata_get_global_grf_bdywidth_e, "int", 0, false, 0 },
    {"lrestartrun", (void*)&comin_descrdata_get_global_lrestartrun, "bool", 0, false, 0 },
    {"vct_a", (void*)&comin_descrdata_get_global_vct_a, "double", 1, false, 0 },
    {"yac_instance_id", (void*)&comin_descrdata_get_global_yac_instance_id, "int", 0, false, 0 },
    {"host_git_remote_url", (void*)&comin_descrdata_get_global_host_git_remote_url, "char", 1, false, 0 },
    {"host_git_branch", (void*)&comin_descrdata_get_global_host_git_branch, "char", 1, false, 0 },
    {"host_git_tag", (void*)&comin_descrdata_get_global_host_git_tag, "char", 1, false, 0 },
    {"host_revision", (void*)&comin_descrdata_get_global_host_revision, "char", 1, false, 0 },
    {"has_device", (void*)&comin_descrdata_get_global_has_device, "bool", 0, false, 0 },
    {"device_name", (void*)&comin_descrdata_get_global_device_name, "char", 1, false, 0 },
    {"device_vendor", (void*)&comin_descrdata_get_global_device_vendor, "char", 1, false, 0 },
    {"device_driver", (void*)&comin_descrdata_get_global_device_driver, "char", 1, false, 0 },
    {0,0,0,0,0}};

#ifdef __cplusplus
} // extern C
#endif
