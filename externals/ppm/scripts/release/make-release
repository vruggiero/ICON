#! /usr/bin/env bash
#
# make-release --- create release commit and archive
#
# Copyright  (C)  2021  Thomas Jahns <jahns@dkrz.de>
#
# Keywords: create release
# Author: Thomas Jahns <jahns@dkrz.de>
# Maintainer: Thomas Jahns <jahns@dkrz.de>
# URL: https://www.dkrz.de/redmine/projects/scales-ppm
#
# Redistribution and use in source and binary forms, with or without
# modification, are  permitted provided that the following conditions are
# met:
#
# Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# Neither the name of the DKRZ GmbH nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
set -e
trap 'echo "Failed to run $BASH_COMMAND">&2' ERR
# check that generated files and scripts are in place
if [[ -r configure && -r scripts/release/make-release-commit ]]; then
  # 1. import common script settings
  # shellcheck source=get-package-and-version.shinc
  . scripts/release/get-package-and-version.shinc
  # 2. check the version about to be released is actually new
  if git rev-parse "refs/tags/v$version" >/dev/null 2>&1 ; then
    echo "A tag for version $version has already been created." >&2
    echo "Perhaps set new version in configure.ac first?" >&2
    exit 1
  fi
  if git rev-parse "refs/heads/release-$version" >/dev/null 2>&1 ; then
    echo "A branch named release-$version has already been created." >&2
    echo "Perhaps set new version in configure.ac first?" >&2
    exit 1
  fi
  # check the necessary scripts are in place
  if [[ -x scripts/release/make-release-commit \
      && -x scripts/release/make-distcheck \
      && -x scripts/release/compare_archive_to_tree ]]; then
    echo "Creating commits for release."
    scripts/release/make-release-commit
    echo "Checking whether distcheck completes successfully."
    scripts/release/make-distcheck >"${log_dir}/make-distcheck.log" 2>&1
    archive_msg=$(grep -E '^(Find archives in|\|2)' \
                  "${log_dir}/make-distcheck.log")
    echo "$archive_msg"
    while [[ $archive_msg = \|* ]]; do
      archive_msg=${archive_msg#*
}
    done
    archive_msg=${archive_msg#Find archives in }
    scripts/release/check-gitignore
    IFS=" " read -r -a archives <<< "${archive_msg}"
    TAR=${TAR-tar}
    scripts/release/compare_archive_to_tree --gnutar="$TAR" \
       "${archives[0]}" "release-$version"
  else
    echo "warning: release script missing." >&2
    echo "Are you in the correct and autoreconf'ed directory?" >&2
    exit 1
  fi
else
  echo "cannot find configure and/or scripts/release/make-release-commit." >&2
  echo "Are you in the correct and autoreconf'ed directory?" >&2
  exit 1
fi
#
# Local Variables:
# mode: sh
# license-project-url: "https://www.dkrz.de/redmine/projects/scales-ppm"
# license-default: "bsd"
# End:
#
