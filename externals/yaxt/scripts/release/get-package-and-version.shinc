#! /bin/false
#
# scripts/get-package-and-version.shinc --- script code to set variables
#                                           commonly used in release scripts
#
# Copyright  (C)  2022 Jörg Behrens <behrens@dkrz.de>
#                      Moritz Hanke <hanke@dkrz.de>
#                      Thomas Jahns <jahns@dkrz.de>
#
# Author: Jörg Behrens <behrens@dkrz.de>
#         Moritz Hanke <hanke@dkrz.de>
#         Thomas Jahns <jahns@dkrz.de>
#
# Maintainer: Jörg Behrens <behrens@dkrz.de>
#             Moritz Hanke <hanke@dkrz.de>
#             Thomas Jahns <jahns@dkrz.de>
# URL: http://https://swprojects.dkrz.de/redmine/projects/scales-ppm
#
# Redistribution and use in source and binary forms, with or without
# modification, are  permitted provided that the following conditions are
# met:
#
# Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# Neither the name of the DKRZ GmbH nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# meant to be included in shell scripts
package=$(autoconf '--trace=AC_INIT:$1#$2')
version=${package#*#}
package=${package%#*}
hostname=${hostname-$(hostname)}
if [[ -x "scripts/reconfigure-${hostname}" ]]; then
  reconfCmd="scripts/reconfigure-${hostname}"
else
  # let's hope everything's correctly setup
  reconfCmd=scripts/reconfigure
fi
log_dir=${log_dir-"${package}-${version}-release-logs"}
mkdir -p "$log_dir"

# trap functions are incorrectly diagnosed by shellcheck as unreachable
# shellcheck disable=SC2317
restore_extglob=$(shopt -p extglob || :)
shopt -s extglob
errMsg()
{
  typeset cmd=$BASH_COMMAND orig_cmd=$BASH_COMMAND pfx vpos
  typeset -i ofs=0 src_lev=${#BASH_SOURCE[@]}
  trap "$(shopt -p extglob)" RETURN
  shopt -s extglob
  while [[ "${cmd:$ofs}" \
    =~ \$\{([a-zA-Z_][a-zA-Z_0-9]*(\[[^\]]*\]){0,1})(([\]+:/@\[\?-]){0,1}([a-zA-Z_0-9]*)(:[^:]*){0,1}){0,1}\} ]];
  do
    pfx=${cmd:ofs}; vpos=${pfx%%\$*}; ofs=$((ofs+${#vpos}))
    case ${BASH_REMATCH[4]} in
      (-)
        cmd=${cmd/\$\{${BASH_REMATCH[1]}${BASH_REMATCH[3]}\}/${!BASH_REMATCH[1]-${BASH_REMATCH[5]}}}
        ;;
      (:-|:=)
        cmd=${cmd/\$\{${BASH_REMATCH[1]}${BASH_REMATCH[3]}\}/${!BASH_REMATCH[1]:-${BASH_REMATCH[5]}}}
        ;;
      (:+|:=)
        cmd=${cmd/\$\{${BASH_REMATCH[1]}${BASH_REMATCH[3]}\}/${!BASH_REMATCH[1]:+${BASH_REMATCH[5]}}}
        ;;
      (:\?)
        ofs=$((ofs + ${#BASH_REMATCH[0]}))
        ;;
      (+)
        cmd=${cmd/\$\{${BASH_REMATCH[1]}${BASH_REMATCH[3]}\}/${!BASH_REMATCH[1]+${BASH_REMATCH[5]}}}
        ;;
      (:)
        if [[ ${#BASH_REMATCH[6]} > 0 ]]; then
          cmd=${cmd/\$\{${BASH_REMATCH[1]}${BASH_REMATCH[3]}\}/${!BASH_REMATCH[1]:${BASH_REMATCH[5]}:${BASH_REMATCH[6]:1}}}
        else
          cmd=${cmd/\$\{${BASH_REMATCH[1]}${BASH_REMATCH[3]}\}/${!BASH_REMATCH[1]:${BASH_REMATCH[5]}}}
        fi
        ;;
      ('')
        case ${BASH_REMATCH[2]} in
          ('[@]')
            vpos=${BASH_REMATCH[1]}
            if [[ ${cmd:ofs-1:1} = \" \
                    && ${cmd:ofs+${#BASH_REMATCH[0]}:1} = \" ]]; then
              typeset subst
              printf -v subst "'%s' " "${!vpos}"
              subst=${subst:0:-1}
              typeset -i adjust=1
            else
              printf -v subst "%s" "${!vpos}"
              typeset -i adjust=0
            fi
            printf -v cmd "%s%s%s" "${cmd:0:ofs-adjust}" "$subst" \
              "${cmd:ofs+${#BASH_REMATCH[0]}+adjust}"
            ofs=$((ofs + ${#subst} - adjust))
            ;;
          ( '' | \[+([[:digit:]])\] )
            cmd=${cmd/\$\{"${BASH_REMATCH[1]}"\}/${!BASH_REMATCH[1]}}
            ;;
          (*)
            printf "%s\n" "unhandled substitution: ${BASH_REMATCH[2]}" >&2
            break
            ;;
        esac
        ;;
      (*)
        printf "%s\n" "unhandled substitution: ${BASH_REMATCH[0]}" >&2
        break
        ;;
    esac
  done
  printf 'error: failed to run command\n%s\n(original command: %s)\nin %s at %s, line %d!\n' "$cmd" \
         "$orig_cmd" \
         "${FUNCNAME[$src_lev-1]}" "${BASH_SOURCE[$src_lev-2]}" \
         "${BASH_LINENO[$src_lev-2]}" >&2
}
$restore_extglob
unset restore_extglob

setupMakeDebugging()
{
  if (( ${DEBUG:-0} )); then
    set -x
    MAKE_DEBUG_ARGS=(--debug 'SHELL=bash -x')
  else
    MAKE_DEBUG_ARGS=()
  fi
}

addOverrides()
{
  local mpirun_version=$(mpirun --version)
  case $mpirun_version in
    ('mpirun (Open MPI)'*)
      if [[ "$mpirun_version" =~ ^mpirun\ \(Open\ MPI\)\ ([0-9]+\.[0-9.]+) ]]; then
        mpirun_version=${BASH_REMATCH[1]}
        if printf '%s\n' "5.0" "${mpirun_version}" | sort -C -V ; then
          export PRRTE_MCA_rmaps_default_mapping_policy=:oversubscribe
        elif printf '%s\n' "1.8.0" "${mpirun_version}" | sort -C -V ; then
          export OMPI_MCA_rmaps_base_oversubscribe=true
        fi
      fi
      ;;
  esac
}

setTMPDIR()
{
  if [[ ${TMPDIR+set} = '' ]]; then
    if [[ -d "$XDG_RUNTIME_DIR" && -w "$XDG_RUNTIME_DIR" ]]; then
      TMPDIR=$XDG_RUNTIME_DIR
    elif [[ -d /dev/shm && -w /dev/shm ]]; then
      TMPDIR=/dev/shm
    else
      TMPDIR=/tmp
    fi
    export TMPDIR
  fi
}

#
# Local Variables:
# coding: utf-8
# mode: sh
# End:
#
