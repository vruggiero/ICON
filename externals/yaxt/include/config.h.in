/* include/config.h.in.  Generated from configure.ac by autoheader.  */

/* Macro to cast arguments to MPI_Send-like functions (if necessary) */
#undef CAST_MPI_SEND_BUF

/* Define as the number of bits in a byte, if `limits.h' doesn't. */
#undef CHAR_BIT

/* printf(3) format string for subsstype */
#undef CONF_XT_INT_FMT

/* Maximal value for XT_INT */
#undef CONF_XT_INT_MAX

/* Minimal value for XT_INT */
#undef CONF_XT_INT_MIN

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#undef C_ALLOCA

/* type kind override */
#undef C_INT

/* type kind override */
#undef C_LONG

/* type kind override */
#undef C_LONG_LONG

/* type kind override */
#undef C_SHORT

/* Define to dummy `main' function (if any) required to link to the Fortran
   libraries. */
#undef FC_DUMMY_MAIN

/* Define if F77 and FC dummy `main' functions are identical. */
#undef FC_DUMMY_MAIN_EQ_F77

/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#undef FC_FUNC

/* As FC_FUNC, but for C identifiers containing underscores. */
#undef FC_FUNC_

/* Define to 1 if your Fortran compiler doesn't accept -c and -o together. */
#undef FC_NO_MINUS_C_MINUS_O

/* Define to 1 if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#undef HAVE_ALLOCA_H

/* defined to 1 iff a cuda header of the 6.5 or newer version was found */
#undef HAVE_CUDA

/* Define to 1 if __builtin_clzl is available, 0 if not */
#undef HAVE_DECL___BUILTIN_CLZL

/* Define to 1 if __builtin_ctzl is available, 0 if not */
#undef HAVE_DECL___BUILTIN_CTZL

/* PGI/Nvidia style __lzcnt is available */
#undef HAVE_DECL___LZCNT

/* PGI/Nvidia style __lzcnt16 is available */
#undef HAVE_DECL___LZCNT16

/* PGI/Nvidia style __lzcnt64 is available */
#undef HAVE_DECL___LZCNT64

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Defined to 1 iff Fortran compiler supports C_LOC of an array slice */
#undef HAVE_FC_C_LOC_OF_SLICE

/* Defined to 1 iff Fortran compiler supports IS_CONTIGUOUS query */
#undef HAVE_FC_IS_CONTIGUOUS

/* type kind override */
#undef HAVE_FORTRAN_ISO_C_INT

/* type kind override */
#undef HAVE_FORTRAN_ISO_C_LONG

/* type kind override */
#undef HAVE_FORTRAN_ISO_C_LONG_LONG

/* type kind override */
#undef HAVE_FORTRAN_ISO_C_SHORT

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define to 1 if the system has the type `long double _Complex'. */
#undef HAVE_LONG_DOUBLE__COMPLEX

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define if you have POSIX threads libraries and header files. */
#undef HAVE_PTHREAD

/* Have PTHREAD_PRIO_INHERIT. */
#undef HAVE_PTHREAD_PRIO_INHERIT

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* defined if int64_t is long in disguise */
#undef INT64_T_IS_LONG

/* defined if int64_t is long long in disguise */
#undef INT64_T_IS_LONG_LONG

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* work around missing define in older MPI implementations */
#undef MPI_INT16_T

/* work around problem with MPI_Comm_dup */
#undef NEED_MPICH_UNWEIGHTED_COMM_DUP_WORKAROUND

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to necessary symbol if this constant uses a non-standard name on
   your system. */
#undef PTHREAD_CREATE_JOINABLE

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `MPI_Datatype', as computed by sizeof. */
#undef SIZEOF_MPI_DATATYPE

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `unsigned long', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_LONG

/* The size of `XT_INT', as computed by sizeof. */
#undef SIZEOF_XT_INT

/* The size of `__int128', as computed by sizeof. */
#undef SIZEOF___INT128

/* The size of `__int128_t', as computed by sizeof. */
#undef SIZEOF___INT128_T

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* If the compiler supports a TLS storage class, define it to that here */
#undef TLS

/* use MPI parallel process environment */
#undef USE_MPI

/* Version number of package */
#undef VERSION

/* defined to 1 if this MPI does not support zero-size datatypes */
#undef XT_CANNOT_SUPPORT_ZERO_SIZE_DT

/* defined if MPI_Neighbor_alltoall functions are actually working */
#undef XT_CAN_USE_MPI_NEIGHBOR_ALLTOALL

/* Type to use for enumeration of distributed elements. */
#undef XT_INT

/* return absolute value of v */
#undef XT_INT_ABS

/* return number of leading zero-bits in v */
#undef XT_INT_CLZ

/* MPI Datatype for type for enumeration of distributed elements. */
#undef XT_INT_MPIDT

/* are libxml header files buried in sub-directory? */
#undef XT_LIBXML_INCLUDE_SUBDIR

/* Type to use for fast long multiplication of Xt_int */
#undef XT_LONG

/* Maximum value of MPI_Fint. */
#undef XT_MPI_FINT_MAX

/* Defined to const, iff buf argument to MPI_Send-like functions can be const
   */
#undef XT_MPI_SEND_BUF_CONST

/* To pass the value for MPI_Abort to the surrounding execution environment, a
   hack is needed. */
#undef XT_NEED_MPI_ABORT_WORK_AROUND

/* Type to use for manual long multiplication and division of Xt_int */
#undef XT_SHORT

/* MPI Datatype for type for counts of distributed elements. */
#undef XT_UINT_MPIDT

/* Type to use for fast long multiplication of Xt_int */
#undef XT_ULONG

/* symbols to add a dependency on for correct static builds */
#undef XT_WORKAROUND_MPI_SYMBIND

/* Define to 1 if type `char' is unsigned and you are not using gcc.  */
#ifndef __CHAR_UNSIGNED__
# undef __CHAR_UNSIGNED__
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
#undef size_t
