# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Copyright  (C)  2022 Jörg Behrens <behrens@dkrz.de>
#                      Moritz Hanke <hanke@dkrz.de>
#                      Thomas Jahns <jahns@dkrz.de>
#
# Author: Jörg Behrens <behrens@dkrz.de>
#         Moritz Hanke <hanke@dkrz.de>
#         Thomas Jahns <jahns@dkrz.de>
#
# Maintainer: Jörg Behrens <behrens@dkrz.de>
#             Moritz Hanke <hanke@dkrz.de>
#             Thomas Jahns <jahns@dkrz.de>
# URL: https://dkrz-sw.gitlab-pages.dkrz.de/yaxt/
#
# Redistribution and use in source and binary forms, with or without
# modification, are  permitted provided that the following conditions are
# met:
#
# Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# Neither the name of the DKRZ GmbH nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = test_mpi_generate_datatype$(EXEEXT) \
	test_mpi_smartdedup$(EXEEXT) test_exchanger_parallel$(EXEEXT) \
	test_arithmetic_long$(EXEEXT) test_idxempty$(EXEEXT) \
	test_idxvec$(EXEEXT) test_idxlist_collection$(EXEEXT) \
	test_idxmod$(EXEEXT) test_idxsection$(EXEEXT) \
	test_idxstripes$(EXEEXT) \
	test_redist_single_array_base$(EXEEXT) \
	test_redist_single_array_base_parallel$(EXEEXT) \
	test_redist_collection$(EXEEXT) \
	test_redist_collection_parallel$(EXEEXT) \
	test_redist_collection_static$(EXEEXT) \
	test_redist_collection_static_parallel$(EXEEXT) \
	test_redist_p2p$(EXEEXT) test_redist_p2p_parallel$(EXEEXT) \
	test_redist_repeat$(EXEEXT) \
	test_redist_repeat_parallel$(EXEEXT) \
	test_request_parallel$(EXEEXT) test_xmap_all2all$(EXEEXT) \
	test_xmap_all2all_fail$(EXEEXT) \
	test_xmap_all2all_parallel$(EXEEXT) \
	test_xmap_all2all_intercomm_parallel$(EXEEXT) \
	test_xmap_dist_dir$(EXEEXT) \
	test_xmap_dist_dir_parallel$(EXEEXT) \
	test_xmap_dist_dir_intercomm_parallel$(EXEEXT) \
	test_xmap_intersection_parallel$(EXEEXT) \
	test_initialized_finalized$(EXEEXT) test_sort$(EXEEXT) \
	test_uid$(EXEEXT) test_ddt$(EXEEXT) $(am__EXEEXT_1)
@with_fortran_TRUE@am__append_1 = \
@with_fortran_TRUE@	test_misc_f						\
@with_fortran_TRUE@	test_idxempty_f						\
@with_fortran_TRUE@	test_idxvec_f						\
@with_fortran_TRUE@	test_idxlist_collection_f				\
@with_fortran_TRUE@	test_idxmod_f						\
@with_fortran_TRUE@	test_idxsection_f					\
@with_fortran_TRUE@	test_idxstripes_f					\
@with_fortran_TRUE@	test_redist_single_array_base_f				\
@with_fortran_TRUE@	test_redist_single_array_base_parallel_f		\
@with_fortran_TRUE@	test_redist_collection_f				\
@with_fortran_TRUE@	test_redist_collection_parallel_f			\
@with_fortran_TRUE@	test_redist_collection_static_f				\
@with_fortran_TRUE@	test_redist_collection_static_parallel_f		\
@with_fortran_TRUE@	test_redist_p2p_f					\
@with_fortran_TRUE@	test_redist_p2p_parallel_f				\
@with_fortran_TRUE@	test_redist_repeat_f					\
@with_fortran_TRUE@	test_redist_repeat_parallel_f				\
@with_fortran_TRUE@	test_xmap_all2all_f					\
@with_fortran_TRUE@	test_xmap_all2all_fail_f				\
@with_fortran_TRUE@	test_xmap_all2all_parallel_f				\
@with_fortran_TRUE@	test_xmap_all2all_intercomm_parallel_f			\
@with_fortran_TRUE@	test_xmap_dist_dir_f					\
@with_fortran_TRUE@	test_xmap_dist_dir_parallel_f				\
@with_fortran_TRUE@	test_xmap_dist_dir_intercomm_parallel_f			\
@with_fortran_TRUE@	test_xmap_intersection_parallel_f			\
@with_fortran_TRUE@	test_initialized_finalized_f				\
@with_fortran_TRUE@	test_ut							\
@with_fortran_TRUE@	test_perf						\
@with_fortran_TRUE@	test_perf_stripes					\
@with_fortran_TRUE@	test_sort_f						\
@with_fortran_TRUE@	test_yaxt

@with_fortran_TRUE@am__append_2 = libtestutil_f.la
@USE_NB_A2A_TRUE@am__append_3 = ../src/xt_exchanger_neigh_alltoall.lo
@HAVE_CUDA_TRUE@am__append_4 = ../src/xt_cuda.lo
@HAVE_CUDA_TRUE@am__append_5 = ../src/xt_cuda.lo
TESTS = test_misc_run test_mpi_generate_datatype_run \
	test_mpi_smartdedup_run test_exchanger_parallel_run \
	test_arithmetic_long$(EXEEXT) test_idxempty_run \
	test_idxvec_run test_idxlist_collection_run test_idxmod_run \
	test_idxsection_run test_idxstripes_run \
	test_redist_single_array_base_run \
	test_redist_single_array_base_parallel_run test_redist_p2p_run \
	test_redist_collection_run test_redist_collection_parallel_run \
	test_redist_collection_static_run \
	test_redist_collection_static_parallel_run \
	test_redist_p2p_parallel_run test_redist_repeat_run \
	test_redist_repeat_parallel_run test_request_parallel_run \
	test_xmap_all2all_run test_xmap_all2all_fail_run \
	test_xmap_all2all_parallel_run \
	test_xmap_all2all_intercomm_parallel_run \
	test_xmap_dist_dir_run test_xmap_dist_dir_parallel_run \
	test_xmap_dist_dir_intercomm_parallel_run \
	test_xmap_intersection_parallel_run \
	test_initialized_finalized_run test_exported_symbols \
	test_ut_run test_perf_run test_perf_stripes_run test_sort_run \
	test_uid_run test_yaxt_run test_xmap_all2all_fail_run \
	test_ddt_run
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/test_exchanger_parallel_run.in \
	$(srcdir)/test_redist_p2p_parallel_run.in \
	$(srcdir)/test_redist_collection_parallel_run.in \
	$(srcdir)/test_redist_collection_static_parallel_run.in \
	$(srcdir)/test_redist_repeat_parallel_run.in \
	$(srcdir)/test_xmap_all2all_parallel_run.in \
	$(srcdir)/test_xmap_all2all_intercomm_parallel_run.in \
	$(srcdir)/test_xmap_dist_dir_parallel_run.in \
	$(srcdir)/test_xmap_dist_dir_intercomm_parallel_run.in \
	$(srcdir)/test_xmap_intersection_parallel_run.in \
	$(srcdir)/test_initialized_finalized_run.in \
	$(srcdir)/test_idxempty_run.in $(srcdir)/test_idxvec_run.in \
	$(srcdir)/test_idxlist_collection_run.in \
	$(srcdir)/test_idxmod_run.in $(srcdir)/test_idxsection_run.in \
	$(srcdir)/test_idxstripes_run.in \
	$(srcdir)/test_redist_single_array_base_run.in \
	$(srcdir)/test_redist_single_array_base_parallel_run.in \
	$(srcdir)/test_redist_collection_run.in \
	$(srcdir)/test_redist_collection_static_run.in \
	$(srcdir)/test_redist_repeat_run.in \
	$(srcdir)/test_redist_p2p_run.in \
	$(srcdir)/test_request_parallel_run.in \
	$(srcdir)/test_exported_symbols.in \
	$(srcdir)/test_xmap_dist_dir_run.in \
	$(srcdir)/test_xmap_all2all_run.in \
	$(srcdir)/test_xmap_all2all_fail_run.in \
	$(srcdir)/test_ut_run.in $(srcdir)/test_perf_run.in \
	$(srcdir)/test_perf_stripes_run.in $(srcdir)/test_sort_run.in \
	$(srcdir)/test_uid_run.in $(srcdir)/test_misc_run.in \
	$(srcdir)/test_yaxt_run.in \
	$(srcdir)/test_mpi_generate_datatype_run.in \
	$(srcdir)/test_mpi_smartdedup_run.in $(srcdir)/test_ddt_run.in \
	$(top_srcdir)/config/depcomp $(top_srcdir)/config/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/m4/acx_assert_lang_is_fortran_variant.m4 \
	$(top_srcdir)/m4/acx_c_package.m4 \
	$(top_srcdir)/m4/acx_cfortran_flags.m4 \
	$(top_srcdir)/m4/acx_check_cfortran.m4 \
	$(top_srcdir)/m4/acx_fc_have_c_loc_of_slice.m4 \
	$(top_srcdir)/m4/acx_fc_have_is_contiguous.m4 \
	$(top_srcdir)/m4/acx_fc_have_size_kind_argument.m4 \
	$(top_srcdir)/m4/acx_fc_integer_exp_is_precise.m4 \
	$(top_srcdir)/m4/acx_fc_integer_size.m4 \
	$(top_srcdir)/m4/acx_fc_logical_c_bool.m4 \
	$(top_srcdir)/m4/acx_fc_logical_interop.m4 \
	$(top_srcdir)/m4/acx_fc_pointer_bounds_remap.m4 \
	$(top_srcdir)/m4/acx_fc_type_kinds.m4 \
	$(top_srcdir)/m4/acx_fc_volatile.m4 \
	$(top_srcdir)/m4/acx_fortran2003_kinds.m4 \
	$(top_srcdir)/m4/acx_fortran_check_include.m4 \
	$(top_srcdir)/m4/acx_fortran_package.m4 \
	$(top_srcdir)/m4/acx_lang_check_include.m4 \
	$(top_srcdir)/m4/acx_lang_other_suffix_conftest.m4 \
	$(top_srcdir)/m4/acx_lang_package.m4 \
	$(top_srcdir)/m4/acx_libxml2_workaround.m4 \
	$(top_srcdir)/m4/acx_lt_problems.m4 \
	$(top_srcdir)/m4/acx_m4_list_to_quoted_strings.m4 \
	$(top_srcdir)/m4/acx_mpi_defects.m4 \
	$(top_srcdir)/m4/acx_mpi_send_args.m4 \
	$(top_srcdir)/m4/acx_mpich34_hindexed_workaround.m4 \
	$(top_srcdir)/m4/acx_mpirun.m4 $(top_srcdir)/m4/acx_mv_obj.m4 \
	$(top_srcdir)/m4/acx_ompi_dt_workaround.m4 \
	$(top_srcdir)/m4/acx_option_search_libs.m4 \
	$(top_srcdir)/m4/acx_prog_fc_check_fpp.m4 \
	$(top_srcdir)/m4/acx_prog_fc_v_output.m4 \
	$(top_srcdir)/m4/acx_sl_fc_mod_path_flag.m4 \
	$(top_srcdir)/m4/acx_sl_mod_suffix.m4 \
	$(top_srcdir)/m4/acx_tls_xlc_retry.m4 \
	$(top_srcdir)/m4/acx_use_libtool_configuration.m4 \
	$(top_srcdir)/m4/acx_xcode_commons_workaround.m4 \
	$(top_srcdir)/m4/asx_tr_arg.m4 $(top_srcdir)/m4/asx_unset.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_prog_perl_version.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
	$(top_srcdir)/m4/ax_with_perl.m4 \
	$(top_srcdir)/m4/ax_with_prog.m4 \
	$(top_srcdir)/m4/check_gnu_make.m4 \
	$(top_srcdir)/m4/gcc_ac_c_char_bit.m4 \
	$(top_srcdir)/m4/kpse_libtool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/starlink_fpp.m4 \
	$(top_srcdir)/m4/tj_find_type.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/ac_fc_freeform.m4 \
	$(top_srcdir)/m4/acx_fc_library_ldflags.m4 \
	$(top_srcdir)/m4/ac_lang_program_fortran.m4 \
	$(top_srcdir)/m4/acx_lang_fortran_check_include.m4 \
	$(top_srcdir)/m4/acx_lang_c_check_include.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES = test_exchanger_parallel_run \
	test_redist_p2p_parallel_run \
	test_redist_collection_parallel_run \
	test_redist_collection_static_parallel_run \
	test_redist_repeat_parallel_run test_xmap_all2all_parallel_run \
	test_xmap_all2all_intercomm_parallel_run \
	test_xmap_dist_dir_parallel_run \
	test_xmap_dist_dir_intercomm_parallel_run \
	test_xmap_intersection_parallel_run \
	test_initialized_finalized_run test_idxempty_run \
	test_idxvec_run test_idxlist_collection_run test_idxmod_run \
	test_idxsection_run test_idxstripes_run \
	test_redist_single_array_base_run \
	test_redist_single_array_base_parallel_run \
	test_redist_collection_run test_redist_collection_static_run \
	test_redist_repeat_run test_redist_p2p_run \
	test_request_parallel_run test_exported_symbols \
	test_xmap_dist_dir_run test_xmap_all2all_run \
	test_xmap_all2all_fail_run test_ut_run test_perf_run \
	test_perf_stripes_run test_sort_run test_uid_run test_misc_run \
	test_yaxt_run test_mpi_generate_datatype_run \
	test_mpi_smartdedup_run test_ddt_run
CONFIG_CLEAN_VPATH_FILES =
libtestutil_la_LIBADD =
am_libtestutil_la_OBJECTS = tests.lo cksum.lo ctest_common.lo \
	test_idxlist_utils.lo test_xmap_common.lo \
	test_xmap_common_parallel.lo \
	test_xmap_common_intercomm_parallel.lo \
	test_redist_single_array_base_common.lo test_redist_common.lo
libtestutil_la_OBJECTS = $(am_libtestutil_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 =
libtestutil_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libtestutil_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libtestutil_f_la_LIBADD =
am_libtestutil_f_la_OBJECTS = ftest_common.lo ftest_common_c.lo \
	test_idxlist_utils_f.lo test_xmap_common_f.lo \
	test_xmap_common_parallel_f.lo \
	test_xmap_common_intercomm_parallel_f.lo \
	test_redist_common_f.lo
libtestutil_f_la_OBJECTS = $(am_libtestutil_f_la_OBJECTS)
libtestutil_f_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \
	$(AM_FCFLAGS) $(FCFLAGS) $(libtestutil_f_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@with_fortran_TRUE@am_libtestutil_f_la_rpath =
@with_fortran_TRUE@am__EXEEXT_1 = test_misc_f$(EXEEXT) \
@with_fortran_TRUE@	test_idxempty_f$(EXEEXT) \
@with_fortran_TRUE@	test_idxvec_f$(EXEEXT) \
@with_fortran_TRUE@	test_idxlist_collection_f$(EXEEXT) \
@with_fortran_TRUE@	test_idxmod_f$(EXEEXT) \
@with_fortran_TRUE@	test_idxsection_f$(EXEEXT) \
@with_fortran_TRUE@	test_idxstripes_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_single_array_base_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_single_array_base_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_collection_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_collection_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_collection_static_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_collection_static_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_p2p_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_p2p_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_repeat_f$(EXEEXT) \
@with_fortran_TRUE@	test_redist_repeat_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_all2all_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_all2all_fail_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_all2all_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_all2all_intercomm_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_dist_dir_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_dist_dir_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_dist_dir_intercomm_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_xmap_intersection_parallel_f$(EXEEXT) \
@with_fortran_TRUE@	test_initialized_finalized_f$(EXEEXT) \
@with_fortran_TRUE@	test_ut$(EXEEXT) test_perf$(EXEEXT) \
@with_fortran_TRUE@	test_perf_stripes$(EXEEXT) \
@with_fortran_TRUE@	test_sort_f$(EXEEXT) test_yaxt$(EXEEXT)
am_test_arithmetic_long_OBJECTS = test_arithmetic_long.$(OBJEXT)
test_arithmetic_long_OBJECTS = $(am_test_arithmetic_long_OBJECTS)
test_arithmetic_long_DEPENDENCIES = libtestutil.la
am_test_ddt_OBJECTS = test_ddt.$(OBJEXT)
test_ddt_OBJECTS = $(am_test_ddt_OBJECTS)
am__DEPENDENCIES_1 =
test_ddt_DEPENDENCIES = libtestutil.la ../src/xt_ddt.lo \
	../src/xt_gpu.lo $(am__append_5) ../src/xt_mpi.lo \
	../src/core/xmalloc.lo ../src/core/core.lo \
	$(am__DEPENDENCIES_1)
am_test_exchanger_parallel_OBJECTS =  \
	test_exchanger_parallel.$(OBJEXT)
test_exchanger_parallel_OBJECTS =  \
	$(am_test_exchanger_parallel_OBJECTS)
test_exchanger_parallel_DEPENDENCIES = libtestutil.la ../src/xt_gpu.lo \
	../src/xt_ddt.lo ../src/xt_config.lo \
	../src/xt_exchanger_irecv_isend.lo \
	../src/xt_exchanger_irecv_send.lo \
	../src/xt_exchanger_irecv_isend_packed.lo \
	../src/xt_exchanger_irecv_isend_ddt_packed.lo \
	../src/xt_exchanger_mix_isend_irecv.lo \
	../src/xt_exchanger_simple_base.lo $(am__append_3) \
	$(am__append_4) ../src/xt_exchanger.lo ../src/xt_redist_msg.lo \
	../src/xt_request_msgs.lo ../src/xt_request_msgs_ebuf.lo \
	../src/xt_request_msgs_packed.lo \
	../src/xt_request_msgs_ddt_packed.lo ../src/xt_request.lo \
	../src/xt_mpi.lo ../src/core/xmalloc.lo ../src/core/core.lo \
	$(am__DEPENDENCIES_1)
am_test_idxempty_OBJECTS = test_idxempty.$(OBJEXT)
test_idxempty_OBJECTS = $(am_test_idxempty_OBJECTS)
test_idxempty_LDADD = $(LDADD)
test_idxempty_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_idxempty_f_OBJECTS = test_idxempty_f.$(OBJEXT)
test_idxempty_f_OBJECTS = $(am_test_idxempty_f_OBJECTS)
am__DEPENDENCIES_2 = libtestutil_f.la libtestutil.la ../src/libyaxt.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
test_idxempty_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxlist_collection_OBJECTS =  \
	test_idxlist_collection.$(OBJEXT)
test_idxlist_collection_OBJECTS =  \
	$(am_test_idxlist_collection_OBJECTS)
test_idxlist_collection_LDADD = $(LDADD)
test_idxlist_collection_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_idxlist_collection_f_OBJECTS =  \
	test_idxlist_collection_f.$(OBJEXT)
test_idxlist_collection_f_OBJECTS =  \
	$(am_test_idxlist_collection_f_OBJECTS)
test_idxlist_collection_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxmod_OBJECTS = test_idxmod.$(OBJEXT)
test_idxmod_OBJECTS = $(am_test_idxmod_OBJECTS)
test_idxmod_LDADD = $(LDADD)
test_idxmod_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_idxmod_f_OBJECTS = test_idxmod_f.$(OBJEXT)
test_idxmod_f_OBJECTS = $(am_test_idxmod_f_OBJECTS)
test_idxmod_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxsection_OBJECTS = test_idxsection.$(OBJEXT)
test_idxsection_OBJECTS = $(am_test_idxsection_OBJECTS)
test_idxsection_LDADD = $(LDADD)
test_idxsection_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_idxsection_f_OBJECTS = test_idxsection_f.$(OBJEXT)
test_idxsection_f_OBJECTS = $(am_test_idxsection_f_OBJECTS)
test_idxsection_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxstripes_OBJECTS = test_idxstripes.$(OBJEXT)
test_idxstripes_OBJECTS = $(am_test_idxstripes_OBJECTS)
test_idxstripes_LDADD = $(LDADD)
test_idxstripes_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_idxstripes_f_OBJECTS = test_idxstripes_f.$(OBJEXT)
test_idxstripes_f_OBJECTS = $(am_test_idxstripes_f_OBJECTS)
test_idxstripes_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxvec_OBJECTS = test_idxvec.$(OBJEXT)
test_idxvec_OBJECTS = $(am_test_idxvec_OBJECTS)
test_idxvec_LDADD = $(LDADD)
test_idxvec_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_idxvec_f_OBJECTS = test_idxvec_f.$(OBJEXT)
test_idxvec_f_OBJECTS = $(am_test_idxvec_f_OBJECTS)
test_idxvec_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_initialized_finalized_OBJECTS =  \
	test_initialized_finalized.$(OBJEXT)
test_initialized_finalized_OBJECTS =  \
	$(am_test_initialized_finalized_OBJECTS)
test_initialized_finalized_LDADD = $(LDADD)
test_initialized_finalized_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_initialized_finalized_f_OBJECTS =  \
	test_initialized_finalized_f.$(OBJEXT)
test_initialized_finalized_f_OBJECTS =  \
	$(am_test_initialized_finalized_f_OBJECTS)
test_initialized_finalized_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_misc_f_OBJECTS = test_misc_f.$(OBJEXT)
test_misc_f_OBJECTS = $(am_test_misc_f_OBJECTS)
test_misc_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_mpi_generate_datatype_OBJECTS =  \
	test_mpi_generate_datatype.$(OBJEXT)
test_mpi_generate_datatype_OBJECTS =  \
	$(am_test_mpi_generate_datatype_OBJECTS)
test_mpi_generate_datatype_LDADD = $(LDADD)
test_mpi_generate_datatype_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_mpi_smartdedup_OBJECTS = test_mpi_smartdedup.$(OBJEXT)
test_mpi_smartdedup_OBJECTS = $(am_test_mpi_smartdedup_OBJECTS)
test_mpi_smartdedup_DEPENDENCIES = libtestutil.la ../src/xt_mpi.lo \
	../src/core/xmalloc.lo ../src/core/core.lo \
	$(am__DEPENDENCIES_1)
am_test_perf_OBJECTS = test_perf.$(OBJEXT)
test_perf_OBJECTS = $(am_test_perf_OBJECTS)
test_perf_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_perf_stripes_OBJECTS = test_perf_stripes.$(OBJEXT)
test_perf_stripes_OBJECTS = $(am_test_perf_stripes_OBJECTS)
test_perf_stripes_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_collection_OBJECTS = test_redist_collection.$(OBJEXT)
test_redist_collection_OBJECTS = $(am_test_redist_collection_OBJECTS)
test_redist_collection_LDADD = $(LDADD)
test_redist_collection_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_collection_f_OBJECTS =  \
	test_redist_collection_f.$(OBJEXT) \
	test_redist_collection_displace_f.$(OBJEXT)
test_redist_collection_f_OBJECTS =  \
	$(am_test_redist_collection_f_OBJECTS)
test_redist_collection_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_collection_parallel_OBJECTS =  \
	test_redist_collection_parallel.$(OBJEXT)
test_redist_collection_parallel_OBJECTS =  \
	$(am_test_redist_collection_parallel_OBJECTS)
test_redist_collection_parallel_LDADD = $(LDADD)
test_redist_collection_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_collection_parallel_f_OBJECTS =  \
	test_redist_collection_parallel_f.$(OBJEXT)
test_redist_collection_parallel_f_OBJECTS =  \
	$(am_test_redist_collection_parallel_f_OBJECTS)
test_redist_collection_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_redist_collection_static_OBJECTS =  \
	test_redist_collection_static.$(OBJEXT)
test_redist_collection_static_OBJECTS =  \
	$(am_test_redist_collection_static_OBJECTS)
test_redist_collection_static_LDADD = $(LDADD)
test_redist_collection_static_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_collection_static_f_OBJECTS =  \
	test_redist_collection_static_f.$(OBJEXT)
test_redist_collection_static_f_OBJECTS =  \
	$(am_test_redist_collection_static_f_OBJECTS)
test_redist_collection_static_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_collection_static_parallel_OBJECTS =  \
	test_redist_collection_static_parallel.$(OBJEXT)
test_redist_collection_static_parallel_OBJECTS =  \
	$(am_test_redist_collection_static_parallel_OBJECTS)
test_redist_collection_static_parallel_LDADD = $(LDADD)
test_redist_collection_static_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_collection_static_parallel_f_OBJECTS =  \
	test_redist_collection_static_parallel_f.$(OBJEXT)
test_redist_collection_static_parallel_f_OBJECTS =  \
	$(am_test_redist_collection_static_parallel_f_OBJECTS)
test_redist_collection_static_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_redist_p2p_OBJECTS = test_redist_p2p.$(OBJEXT)
test_redist_p2p_OBJECTS = $(am_test_redist_p2p_OBJECTS)
test_redist_p2p_LDADD = $(LDADD)
test_redist_p2p_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_redist_p2p_f_OBJECTS = test_redist_p2p_f.$(OBJEXT)
test_redist_p2p_f_OBJECTS = $(am_test_redist_p2p_f_OBJECTS)
test_redist_p2p_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_p2p_parallel_OBJECTS =  \
	test_redist_p2p_parallel.$(OBJEXT)
test_redist_p2p_parallel_OBJECTS =  \
	$(am_test_redist_p2p_parallel_OBJECTS)
test_redist_p2p_parallel_LDADD = $(LDADD)
test_redist_p2p_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_p2p_parallel_f_OBJECTS =  \
	test_redist_p2p_parallel_f.$(OBJEXT)
test_redist_p2p_parallel_f_OBJECTS =  \
	$(am_test_redist_p2p_parallel_f_OBJECTS)
test_redist_p2p_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_repeat_OBJECTS = test_redist_repeat.$(OBJEXT)
test_redist_repeat_OBJECTS = $(am_test_redist_repeat_OBJECTS)
test_redist_repeat_LDADD = $(LDADD)
test_redist_repeat_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_redist_repeat_f_OBJECTS = test_redist_repeat_f.$(OBJEXT)
test_redist_repeat_f_OBJECTS = $(am_test_redist_repeat_f_OBJECTS)
test_redist_repeat_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_repeat_parallel_OBJECTS =  \
	test_redist_repeat_parallel.$(OBJEXT)
test_redist_repeat_parallel_OBJECTS =  \
	$(am_test_redist_repeat_parallel_OBJECTS)
test_redist_repeat_parallel_LDADD = $(LDADD)
test_redist_repeat_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_repeat_parallel_f_OBJECTS =  \
	test_redist_repeat_parallel_f.$(OBJEXT)
test_redist_repeat_parallel_f_OBJECTS =  \
	$(am_test_redist_repeat_parallel_f_OBJECTS)
test_redist_repeat_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_single_array_base_OBJECTS =  \
	test_redist_single_array_base.$(OBJEXT)
test_redist_single_array_base_OBJECTS =  \
	$(am_test_redist_single_array_base_OBJECTS)
test_redist_single_array_base_LDADD = $(LDADD)
test_redist_single_array_base_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_single_array_base_f_OBJECTS =  \
	test_redist_single_array_base_f.$(OBJEXT)
test_redist_single_array_base_f_OBJECTS =  \
	$(am_test_redist_single_array_base_f_OBJECTS)
test_redist_single_array_base_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_single_array_base_parallel_OBJECTS =  \
	test_redist_single_array_base_parallel.$(OBJEXT)
test_redist_single_array_base_parallel_OBJECTS =  \
	$(am_test_redist_single_array_base_parallel_OBJECTS)
test_redist_single_array_base_parallel_LDADD = $(LDADD)
test_redist_single_array_base_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_redist_single_array_base_parallel_f_OBJECTS =  \
	test_redist_single_array_base_parallel_f.$(OBJEXT)
test_redist_single_array_base_parallel_f_OBJECTS =  \
	$(am_test_redist_single_array_base_parallel_f_OBJECTS)
test_redist_single_array_base_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_request_parallel_OBJECTS = test_request_parallel.$(OBJEXT)
test_request_parallel_OBJECTS = $(am_test_request_parallel_OBJECTS)
test_request_parallel_LDADD = $(LDADD)
test_request_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_sort_OBJECTS = test_sort.$(OBJEXT)
test_sort_OBJECTS = $(am_test_sort_OBJECTS)
test_sort_LDADD = $(LDADD)
test_sort_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_sort_f_OBJECTS = test_sort_f.$(OBJEXT)
test_sort_f_OBJECTS = $(am_test_sort_f_OBJECTS)
test_sort_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_uid_OBJECTS = test_uid.$(OBJEXT)
test_uid_OBJECTS = $(am_test_uid_OBJECTS)
test_uid_LDADD = $(LDADD)
test_uid_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_ut_OBJECTS = test_ut.$(OBJEXT)
test_ut_OBJECTS = $(am_test_ut_OBJECTS)
test_ut_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_all2all_OBJECTS = test_xmap_all2all.$(OBJEXT)
test_xmap_all2all_OBJECTS = $(am_test_xmap_all2all_OBJECTS)
test_xmap_all2all_LDADD = $(LDADD)
test_xmap_all2all_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_xmap_all2all_f_OBJECTS = test_xmap_all2all_f.$(OBJEXT)
test_xmap_all2all_f_OBJECTS = $(am_test_xmap_all2all_f_OBJECTS)
test_xmap_all2all_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_all2all_fail_OBJECTS = test_xmap_all2all_fail.$(OBJEXT)
test_xmap_all2all_fail_OBJECTS = $(am_test_xmap_all2all_fail_OBJECTS)
test_xmap_all2all_fail_LDADD = $(LDADD)
test_xmap_all2all_fail_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_xmap_all2all_fail_f_OBJECTS =  \
	test_xmap_all2all_fail_f.$(OBJEXT)
test_xmap_all2all_fail_f_OBJECTS =  \
	$(am_test_xmap_all2all_fail_f_OBJECTS)
test_xmap_all2all_fail_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_all2all_intercomm_parallel_OBJECTS =  \
	test_xmap_all2all_intercomm_parallel.$(OBJEXT)
test_xmap_all2all_intercomm_parallel_OBJECTS =  \
	$(am_test_xmap_all2all_intercomm_parallel_OBJECTS)
test_xmap_all2all_intercomm_parallel_LDADD = $(LDADD)
test_xmap_all2all_intercomm_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_xmap_all2all_intercomm_parallel_f_OBJECTS =  \
	test_xmap_all2all_intercomm_parallel_f.$(OBJEXT)
test_xmap_all2all_intercomm_parallel_f_OBJECTS =  \
	$(am_test_xmap_all2all_intercomm_parallel_f_OBJECTS)
test_xmap_all2all_intercomm_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_xmap_all2all_parallel_OBJECTS =  \
	test_xmap_all2all_parallel.$(OBJEXT)
test_xmap_all2all_parallel_OBJECTS =  \
	$(am_test_xmap_all2all_parallel_OBJECTS)
test_xmap_all2all_parallel_LDADD = $(LDADD)
test_xmap_all2all_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_xmap_all2all_parallel_f_OBJECTS =  \
	test_xmap_all2all_parallel_f.$(OBJEXT)
test_xmap_all2all_parallel_f_OBJECTS =  \
	$(am_test_xmap_all2all_parallel_f_OBJECTS)
test_xmap_all2all_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_dist_dir_OBJECTS = test_xmap_dist_dir.$(OBJEXT)
test_xmap_dist_dir_OBJECTS = $(am_test_xmap_dist_dir_OBJECTS)
test_xmap_dist_dir_LDADD = $(LDADD)
test_xmap_dist_dir_DEPENDENCIES = libtestutil.la ../src/libyaxt_c.la \
	$(am__DEPENDENCIES_1)
am_test_xmap_dist_dir_f_OBJECTS = test_xmap_dist_dir_f.$(OBJEXT)
test_xmap_dist_dir_f_OBJECTS = $(am_test_xmap_dist_dir_f_OBJECTS)
test_xmap_dist_dir_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_dist_dir_intercomm_parallel_OBJECTS =  \
	test_xmap_dist_dir_intercomm_parallel.$(OBJEXT)
test_xmap_dist_dir_intercomm_parallel_OBJECTS =  \
	$(am_test_xmap_dist_dir_intercomm_parallel_OBJECTS)
test_xmap_dist_dir_intercomm_parallel_LDADD = $(LDADD)
test_xmap_dist_dir_intercomm_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_xmap_dist_dir_intercomm_parallel_f_OBJECTS =  \
	test_xmap_dist_dir_intercomm_parallel_f.$(OBJEXT)
test_xmap_dist_dir_intercomm_parallel_f_OBJECTS =  \
	$(am_test_xmap_dist_dir_intercomm_parallel_f_OBJECTS)
test_xmap_dist_dir_intercomm_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_xmap_dist_dir_parallel_OBJECTS =  \
	test_xmap_dist_dir_parallel.$(OBJEXT)
test_xmap_dist_dir_parallel_OBJECTS =  \
	$(am_test_xmap_dist_dir_parallel_OBJECTS)
test_xmap_dist_dir_parallel_LDADD = $(LDADD)
test_xmap_dist_dir_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_xmap_dist_dir_parallel_f_OBJECTS =  \
	test_xmap_dist_dir_parallel_f.$(OBJEXT)
test_xmap_dist_dir_parallel_f_OBJECTS =  \
	$(am_test_xmap_dist_dir_parallel_f_OBJECTS)
test_xmap_dist_dir_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_intersection_parallel_OBJECTS =  \
	test_xmap_intersection_parallel.$(OBJEXT)
test_xmap_intersection_parallel_OBJECTS =  \
	$(am_test_xmap_intersection_parallel_OBJECTS)
test_xmap_intersection_parallel_LDADD = $(LDADD)
test_xmap_intersection_parallel_DEPENDENCIES = libtestutil.la \
	../src/libyaxt_c.la $(am__DEPENDENCIES_1)
am_test_xmap_intersection_parallel_f_OBJECTS =  \
	test_xmap_intersection_parallel_f.$(OBJEXT)
test_xmap_intersection_parallel_f_OBJECTS =  \
	$(am_test_xmap_intersection_parallel_f_OBJECTS)
test_xmap_intersection_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_yaxt_OBJECTS = test_yaxt.$(OBJEXT)
test_yaxt_OBJECTS = $(am_test_yaxt_OBJECTS)
test_yaxt_DEPENDENCIES = $(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 =
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 =
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 =
CCLD = $(CC)
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 =
AM_V_FC = $(am__v_FC_@AM_V@)
am__v_FC_ = $(am__v_FC_@AM_DEFAULT_V@)
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 =
FCLD = $(FC)
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 =
SOURCES = $(libtestutil_la_SOURCES) $(libtestutil_f_la_SOURCES) \
	$(test_arithmetic_long_SOURCES) $(test_ddt_SOURCES) \
	$(test_exchanger_parallel_SOURCES) $(test_idxempty_SOURCES) \
	$(test_idxempty_f_SOURCES) $(test_idxlist_collection_SOURCES) \
	$(test_idxlist_collection_f_SOURCES) $(test_idxmod_SOURCES) \
	$(test_idxmod_f_SOURCES) $(test_idxsection_SOURCES) \
	$(test_idxsection_f_SOURCES) $(test_idxstripes_SOURCES) \
	$(test_idxstripes_f_SOURCES) $(test_idxvec_SOURCES) \
	$(test_idxvec_f_SOURCES) $(test_initialized_finalized_SOURCES) \
	$(test_initialized_finalized_f_SOURCES) $(test_misc_f_SOURCES) \
	$(test_mpi_generate_datatype_SOURCES) \
	$(test_mpi_smartdedup_SOURCES) $(test_perf_SOURCES) \
	$(test_perf_stripes_SOURCES) $(test_redist_collection_SOURCES) \
	$(test_redist_collection_f_SOURCES) \
	$(test_redist_collection_parallel_SOURCES) \
	$(test_redist_collection_parallel_f_SOURCES) \
	$(test_redist_collection_static_SOURCES) \
	$(test_redist_collection_static_f_SOURCES) \
	$(test_redist_collection_static_parallel_SOURCES) \
	$(test_redist_collection_static_parallel_f_SOURCES) \
	$(test_redist_p2p_SOURCES) $(test_redist_p2p_f_SOURCES) \
	$(test_redist_p2p_parallel_SOURCES) \
	$(test_redist_p2p_parallel_f_SOURCES) \
	$(test_redist_repeat_SOURCES) $(test_redist_repeat_f_SOURCES) \
	$(test_redist_repeat_parallel_SOURCES) \
	$(test_redist_repeat_parallel_f_SOURCES) \
	$(test_redist_single_array_base_SOURCES) \
	$(test_redist_single_array_base_f_SOURCES) \
	$(test_redist_single_array_base_parallel_SOURCES) \
	$(test_redist_single_array_base_parallel_f_SOURCES) \
	$(test_request_parallel_SOURCES) $(test_sort_SOURCES) \
	$(test_sort_f_SOURCES) $(test_uid_SOURCES) $(test_ut_SOURCES) \
	$(test_xmap_all2all_SOURCES) $(test_xmap_all2all_f_SOURCES) \
	$(test_xmap_all2all_fail_SOURCES) \
	$(test_xmap_all2all_fail_f_SOURCES) \
	$(test_xmap_all2all_intercomm_parallel_SOURCES) \
	$(test_xmap_all2all_intercomm_parallel_f_SOURCES) \
	$(test_xmap_all2all_parallel_SOURCES) \
	$(test_xmap_all2all_parallel_f_SOURCES) \
	$(test_xmap_dist_dir_SOURCES) $(test_xmap_dist_dir_f_SOURCES) \
	$(test_xmap_dist_dir_intercomm_parallel_SOURCES) \
	$(test_xmap_dist_dir_intercomm_parallel_f_SOURCES) \
	$(test_xmap_dist_dir_parallel_SOURCES) \
	$(test_xmap_dist_dir_parallel_f_SOURCES) \
	$(test_xmap_intersection_parallel_SOURCES) \
	$(test_xmap_intersection_parallel_f_SOURCES) \
	$(test_yaxt_SOURCES)
DIST_SOURCES = $(libtestutil_la_SOURCES) $(libtestutil_f_la_SOURCES) \
	$(test_arithmetic_long_SOURCES) $(test_ddt_SOURCES) \
	$(test_exchanger_parallel_SOURCES) $(test_idxempty_SOURCES) \
	$(test_idxempty_f_SOURCES) $(test_idxlist_collection_SOURCES) \
	$(test_idxlist_collection_f_SOURCES) $(test_idxmod_SOURCES) \
	$(test_idxmod_f_SOURCES) $(test_idxsection_SOURCES) \
	$(test_idxsection_f_SOURCES) $(test_idxstripes_SOURCES) \
	$(test_idxstripes_f_SOURCES) $(test_idxvec_SOURCES) \
	$(test_idxvec_f_SOURCES) $(test_initialized_finalized_SOURCES) \
	$(test_initialized_finalized_f_SOURCES) $(test_misc_f_SOURCES) \
	$(test_mpi_generate_datatype_SOURCES) \
	$(test_mpi_smartdedup_SOURCES) $(test_perf_SOURCES) \
	$(test_perf_stripes_SOURCES) $(test_redist_collection_SOURCES) \
	$(test_redist_collection_f_SOURCES) \
	$(test_redist_collection_parallel_SOURCES) \
	$(test_redist_collection_parallel_f_SOURCES) \
	$(test_redist_collection_static_SOURCES) \
	$(test_redist_collection_static_f_SOURCES) \
	$(test_redist_collection_static_parallel_SOURCES) \
	$(test_redist_collection_static_parallel_f_SOURCES) \
	$(test_redist_p2p_SOURCES) $(test_redist_p2p_f_SOURCES) \
	$(test_redist_p2p_parallel_SOURCES) \
	$(test_redist_p2p_parallel_f_SOURCES) \
	$(test_redist_repeat_SOURCES) $(test_redist_repeat_f_SOURCES) \
	$(test_redist_repeat_parallel_SOURCES) \
	$(test_redist_repeat_parallel_f_SOURCES) \
	$(test_redist_single_array_base_SOURCES) \
	$(test_redist_single_array_base_f_SOURCES) \
	$(test_redist_single_array_base_parallel_SOURCES) \
	$(test_redist_single_array_base_parallel_f_SOURCES) \
	$(test_request_parallel_SOURCES) $(test_sort_SOURCES) \
	$(test_sort_f_SOURCES) $(test_uid_SOURCES) $(test_ut_SOURCES) \
	$(test_xmap_all2all_SOURCES) $(test_xmap_all2all_f_SOURCES) \
	$(test_xmap_all2all_fail_SOURCES) \
	$(test_xmap_all2all_fail_f_SOURCES) \
	$(test_xmap_all2all_intercomm_parallel_SOURCES) \
	$(test_xmap_all2all_intercomm_parallel_f_SOURCES) \
	$(test_xmap_all2all_parallel_SOURCES) \
	$(test_xmap_all2all_parallel_f_SOURCES) \
	$(test_xmap_dist_dir_SOURCES) $(test_xmap_dist_dir_f_SOURCES) \
	$(test_xmap_dist_dir_intercomm_parallel_SOURCES) \
	$(test_xmap_dist_dir_intercomm_parallel_f_SOURCES) \
	$(test_xmap_dist_dir_parallel_SOURCES) \
	$(test_xmap_dist_dir_parallel_f_SOURCES) \
	$(test_xmap_intersection_parallel_SOURCES) \
	$(test_xmap_intersection_parallel_f_SOURCES) \
	$(test_yaxt_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_CC = @BUILD_CC@
BUILD_CFLAGS = @BUILD_CFLAGS@
BUILD_FC = @BUILD_FC@
BUILD_FCFLAGS = @BUILD_FCFLAGS@
BUILD_LDFLAGS = @BUILD_LDFLAGS@
BUILD_LIBS = @BUILD_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
C_CHAR_IS_UNSIGNED = @C_CHAR_IS_UNSIGNED@
C_SIZEOF_INT = @C_SIZEOF_INT@
C_SIZEOF_LONG = @C_SIZEOF_LONG@
C_SIZEOF_LONG_LONG = @C_SIZEOF_LONG_LONG@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DL_CMD = @DL_CMD@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
FCMODCASE = @FCMODCASE@
FCMODEXT = @FCMODEXT@
FC_FPP_FLAG = @FC_FPP_FLAG@
FC_MOD_FLAG = @FC_MOD_FLAG@
FGREP = @FGREP@
FPP = @FPP@
FPPFLAGS = @FPPFLAGS@
FPP_DEFOPT = @FPP_DEFOPT@
FPP_INCOPT = @FPP_INCOPT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4 = @M4@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPIROOT = @MPIROOT@
MPI_C_INCLUDE = @MPI_C_INCLUDE@
MPI_C_LIB = @MPI_C_LIB@
MPI_FC_LIB = @MPI_FC_LIB@
MPI_FC_MOD = @MPI_FC_MOD@
MPI_LAUNCH = @MPI_LAUNCH@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMPI_BUILD_CFLAGS = @OMPI_BUILD_CFLAGS@
OMPI_MCA_C_INCLUDE = @OMPI_MCA_C_INCLUDE@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_VERSION = @PERL_VERSION@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XT_WORKAROUND_MPI_CFLAGS = @XT_WORKAROUND_MPI_CFLAGS@
XT_WORKAROUND_MPI_CPPFLAGS = @XT_WORKAROUND_MPI_CPPFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
acx_symprfx = @acx_symprfx@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ifGNUmake = @ifGNUmake@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_cv_nm_interface = @lt_cv_nm_interface@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
xt_mpi_workaround_LIBS = @xt_mpi_workaround_LIBS@
check_LTLIBRARIES = libtestutil.la $(am__append_2)
libtestutil_la_SOURCES = tests.c \
	cksum.c cksum.h \
	ctest_common.c ctest_common.h \
	test_idxlist_utils.c \
	test_xmap_common.c test_xmap_common.h \
	test_xmap_common_parallel.c \
	test_xmap_common_intercomm_parallel.c \
	test_redist_single_array_base_common.c \
	test_redist_common.h test_redist_common.c

libtestutil_f_la_SOURCES = ftest_common.f90 \
	ftest_common_c.c ftest_common.h \
	test_idxlist_utils_f.f90 \
	test_xmap_common_f.f90 \
	test_xmap_common_parallel_f.f90 \
	test_xmap_common_intercomm_parallel_f.f90 \
	test_redist_common_f.f90

libtestutil_f_la_LDFLAGS = -static
libtestutil_la_LDFLAGS = -static
# overrides to make regular compilations also use libtool
# static because the libtool libraries in this directory are meant to
# be statically linked and there is no use for the PIC object
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) -static $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)

COMPILE = $(LTCOMPILE)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) -static $(AM_FCFLAGS) $(FCFLAGS)

FCCOMPILE = $(LTFCCOMPILE)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@

FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@

test_arithmetic_long_SOURCES = test_arithmetic_long.c
test_arithmetic_long_LDADD = libtestutil.la
test_exchanger_parallel_SOURCES = test_exchanger_parallel.c tests.h
test_exchanger_parallel_LDADD = libtestutil.la ../src/xt_gpu.lo \
	../src/xt_ddt.lo ../src/xt_config.lo \
	../src/xt_exchanger_irecv_isend.lo \
	../src/xt_exchanger_irecv_send.lo \
	../src/xt_exchanger_irecv_isend_packed.lo \
	../src/xt_exchanger_irecv_isend_ddt_packed.lo \
	../src/xt_exchanger_mix_isend_irecv.lo \
	../src/xt_exchanger_simple_base.lo $(am__append_3) \
	$(am__append_4) ../src/xt_exchanger.lo ../src/xt_redist_msg.lo \
	../src/xt_request_msgs.lo ../src/xt_request_msgs_ebuf.lo \
	../src/xt_request_msgs_packed.lo \
	../src/xt_request_msgs_ddt_packed.lo ../src/xt_request.lo \
	../src/xt_mpi.lo ../src/core/xmalloc.lo ../src/core/core.lo \
	$(MPI_C_LIB)
test_idxempty_SOURCES = test_idxempty.c tests.h test_idxlist_utils.h
test_idxempty_f_SOURCES = test_idxempty_f.f90
test_idxempty_f_LDADD = $(XT_FC_LDADD)
test_idxvec_SOURCES = test_idxvec.c tests.h test_idxlist_utils.h
test_idxvec_f_SOURCES = test_idxvec_f.f90
test_idxvec_f_LDADD = $(XT_FC_LDADD)
test_idxlist_collection_SOURCES = test_idxlist_collection.c tests.h \
	test_idxlist_utils.h

test_idxlist_collection_f_SOURCES = test_idxlist_collection_f.f90
test_idxlist_collection_f_LDADD = $(XT_FC_LDADD)
test_idxmod_SOURCES = test_idxmod.c tests.h
test_idxmod_f_SOURCES = test_idxmod_f.f90
test_idxmod_f_LDADD = $(XT_FC_LDADD)
test_idxsection_SOURCES = test_idxsection.c tests.h test_idxlist_utils.h
test_idxsection_f_SOURCES = test_idxsection_f.f90
test_idxsection_f_LDADD = $(XT_FC_LDADD)
test_idxstripes_SOURCES = test_idxstripes.c tests.h test_idxlist_utils.h
test_idxstripes_f_SOURCES = test_idxstripes_f.f90
test_idxstripes_f_LDADD = $(XT_FC_LDADD)
test_redist_single_array_base_SOURCES = test_redist_single_array_base.c tests.h
test_redist_single_array_base_f_SOURCES = test_redist_single_array_base_f.f90
test_redist_single_array_base_f_LDADD = $(XT_FC_LDADD)
test_redist_single_array_base_parallel_SOURCES = test_redist_single_array_base_parallel.c tests.h
test_redist_single_array_base_parallel_f_SOURCES = test_redist_single_array_base_parallel_f.f90
test_redist_single_array_base_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_SOURCES = test_redist_collection.c tests.h
test_redist_collection_f_SOURCES = test_redist_collection_f.f90 \
	test_redist_collection_displace_f.f90 xt_slice_c_loc.inc

test_redist_collection_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_parallel_SOURCES = test_redist_collection_parallel.c \
	tests.h

test_redist_collection_parallel_f_SOURCES = \
	test_redist_collection_parallel_f.f90 xt_slice_c_loc.inc

test_redist_collection_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_static_SOURCES = test_redist_collection_static.c tests.h
test_redist_collection_static_f_SOURCES = test_redist_collection_static_f.f90
test_redist_collection_static_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_static_parallel_SOURCES = \
	test_redist_collection_static_parallel.c tests.h

test_redist_collection_static_parallel_f_SOURCES = \
	test_redist_collection_static_parallel_f.f90

test_redist_collection_static_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_p2p_SOURCES = test_redist_p2p.c tests.h
test_redist_p2p_f_SOURCES = test_redist_p2p_f.f90
test_redist_p2p_f_LDADD = $(XT_FC_LDADD)
test_redist_p2p_parallel_SOURCES = test_redist_p2p_parallel.c tests.h
test_redist_p2p_parallel_f_SOURCES = test_redist_p2p_parallel_f.f90
test_redist_p2p_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_repeat_SOURCES = test_redist_repeat.c tests.h
test_redist_repeat_f_SOURCES = test_redist_repeat_f.f90
test_redist_repeat_f_LDADD = $(XT_FC_LDADD)
test_redist_repeat_parallel_SOURCES = test_redist_repeat_parallel.c tests.h
test_redist_repeat_parallel_f_SOURCES = test_redist_repeat_parallel_f.f90
test_redist_repeat_parallel_f_LDADD = $(XT_FC_LDADD)
test_request_parallel_SOURCES = test_request_parallel.c tests.h
test_xmap_all2all_SOURCES = test_xmap_all2all.c test_xmap_common.h
test_xmap_all2all_f_SOURCES = test_xmap_all2all_f.f90
test_xmap_all2all_f_LDADD = $(XT_FC_LDADD)
test_xmap_all2all_fail_SOURCES = test_xmap_all2all_fail.c tests.h
test_xmap_all2all_fail_f_SOURCES = test_xmap_all2all_fail_f.f90
test_xmap_all2all_fail_f_LDADD = $(XT_FC_LDADD)
test_xmap_all2all_parallel_SOURCES = test_xmap_all2all_parallel.c tests.h
test_xmap_all2all_parallel_f_SOURCES = test_xmap_all2all_parallel_f.f90
test_xmap_all2all_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_all2all_intercomm_parallel_SOURCES = \
	test_xmap_all2all_intercomm_parallel.c tests.h

test_xmap_all2all_intercomm_parallel_f_SOURCES = \
	test_xmap_all2all_intercomm_parallel_f.f90

test_xmap_all2all_intercomm_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_dist_dir_SOURCES = test_xmap_dist_dir.c test_xmap_common.h
test_xmap_dist_dir_f_SOURCES = test_xmap_dist_dir_f.f90
test_xmap_dist_dir_f_LDADD = $(XT_FC_LDADD)
test_xmap_dist_dir_parallel_SOURCES = test_xmap_dist_dir_parallel.c tests.h
test_xmap_dist_dir_parallel_f_SOURCES = test_xmap_dist_dir_parallel_f.f90
test_xmap_dist_dir_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_dist_dir_intercomm_parallel_SOURCES = \
	test_xmap_dist_dir_intercomm_parallel.c test_xmap_common.h tests.h

test_xmap_dist_dir_intercomm_parallel_f_SOURCES = \
	test_xmap_dist_dir_intercomm_parallel_f.f90

test_xmap_dist_dir_intercomm_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_intersection_parallel_SOURCES = test_xmap_intersection_parallel.c tests.h
test_xmap_intersection_parallel_f_SOURCES = test_xmap_intersection_parallel_f.f90
test_xmap_intersection_parallel_f_LDADD = $(XT_FC_LDADD)
test_initialized_finalized_SOURCES = test_initialized_finalized.c tests.h
test_initialized_finalized_f_SOURCES = test_initialized_finalized_f.f90
test_initialized_finalized_f_LDADD = $(XT_FC_LDADD)
test_ut_SOURCES = test_ut.f90
test_ut_LDADD = $(XT_FC_LDADD)
test_perf_SOURCES = test_perf.f90
test_perf_LDADD = $(XT_FC_LDADD)
test_perf_stripes_SOURCES = test_perf_stripes.f90
test_perf_stripes_LDADD = $(XT_FC_LDADD)
test_sort_SOURCES = test_sort.c tests.h
test_sort_f_SOURCES = test_sort_f.f90
test_sort_f_LDADD = $(XT_FC_LDADD)
test_uid_SOURCES = test_uid.c
test_yaxt_SOURCES = test_yaxt.f90
test_yaxt_LDADD = $(XT_FC_LDADD)
test_misc_f_SOURCES = test_misc_f.f90
test_misc_f_LDADD = $(XT_FC_LDADD)
test_mpi_generate_datatype_SOURCES = test_mpi_generate_datatype.c tests.h
test_mpi_smartdedup_SOURCES = test_mpi_smartdedup.c tests.h
test_mpi_smartdedup_LDADD = libtestutil.la ../src/xt_mpi.lo \
	../src/core/xmalloc.lo ../src/core/core.lo $(MPI_C_LIB)

test_ddt_SOURCES = test_ddt.c tests.h
test_ddt_LDADD = libtestutil.la ../src/xt_ddt.lo ../src/xt_gpu.lo \
	$(am__append_5) ../src/xt_mpi.lo ../src/core/xmalloc.lo \
	../src/core/core.lo $(MPI_C_LIB)
AM_CPPFLAGS = -I../inst_headers -I$(top_srcdir)/include $(MPI_C_INCLUDE)
AM_FCFLAGS = $(FC_MOD_FLAG)../inst_headers/f90 \
	$(FPP_INCOPT)../include $(MPI_FC_MOD)

AM_LDFLAGS = -L../src
LDADD = libtestutil.la ../src/libyaxt_c.la $(MPI_C_LIB)
XT_FC_LDADD = libtestutil_f.la libtestutil.la ../src/libyaxt.la \
	../src/libyaxt_c.la $(MPI_FC_LIB)

AUTOMAKE_OPTIONS = color-tests
EXTRA_DIST = core
all: all-am

.SUFFIXES:
.SUFFIXES: .c .f90 .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
test_exchanger_parallel_run: $(top_builddir)/config.status $(srcdir)/test_exchanger_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_p2p_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_p2p_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_static_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_static_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_repeat_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_repeat_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_intercomm_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_intercomm_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_dist_dir_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_dist_dir_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_dist_dir_intercomm_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_dist_dir_intercomm_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_intersection_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_intersection_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_initialized_finalized_run: $(top_builddir)/config.status $(srcdir)/test_initialized_finalized_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxempty_run: $(top_builddir)/config.status $(srcdir)/test_idxempty_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxvec_run: $(top_builddir)/config.status $(srcdir)/test_idxvec_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxlist_collection_run: $(top_builddir)/config.status $(srcdir)/test_idxlist_collection_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxmod_run: $(top_builddir)/config.status $(srcdir)/test_idxmod_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxsection_run: $(top_builddir)/config.status $(srcdir)/test_idxsection_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxstripes_run: $(top_builddir)/config.status $(srcdir)/test_idxstripes_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_single_array_base_run: $(top_builddir)/config.status $(srcdir)/test_redist_single_array_base_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_single_array_base_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_single_array_base_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_static_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_static_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_repeat_run: $(top_builddir)/config.status $(srcdir)/test_redist_repeat_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_p2p_run: $(top_builddir)/config.status $(srcdir)/test_redist_p2p_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_request_parallel_run: $(top_builddir)/config.status $(srcdir)/test_request_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_exported_symbols: $(top_builddir)/config.status $(srcdir)/test_exported_symbols.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_dist_dir_run: $(top_builddir)/config.status $(srcdir)/test_xmap_dist_dir_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_fail_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_fail_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_ut_run: $(top_builddir)/config.status $(srcdir)/test_ut_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_perf_run: $(top_builddir)/config.status $(srcdir)/test_perf_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_perf_stripes_run: $(top_builddir)/config.status $(srcdir)/test_perf_stripes_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_sort_run: $(top_builddir)/config.status $(srcdir)/test_sort_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_uid_run: $(top_builddir)/config.status $(srcdir)/test_uid_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_misc_run: $(top_builddir)/config.status $(srcdir)/test_misc_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_yaxt_run: $(top_builddir)/config.status $(srcdir)/test_yaxt_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_mpi_generate_datatype_run: $(top_builddir)/config.status $(srcdir)/test_mpi_generate_datatype_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_mpi_smartdedup_run: $(top_builddir)/config.status $(srcdir)/test_mpi_smartdedup_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_ddt_run: $(top_builddir)/config.status $(srcdir)/test_ddt_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libtestutil.la: $(libtestutil_la_OBJECTS) $(libtestutil_la_DEPENDENCIES) $(EXTRA_libtestutil_la_DEPENDENCIES)
	$(AM_V_CCLD)$(libtestutil_la_LINK)  $(libtestutil_la_OBJECTS) $(libtestutil_la_LIBADD) $(LIBS)

libtestutil_f.la: $(libtestutil_f_la_OBJECTS) $(libtestutil_f_la_DEPENDENCIES) $(EXTRA_libtestutil_f_la_DEPENDENCIES)
	$(AM_V_FCLD)$(libtestutil_f_la_LINK) $(am_libtestutil_f_la_rpath) $(libtestutil_f_la_OBJECTS) $(libtestutil_f_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test_arithmetic_long$(EXEEXT): $(test_arithmetic_long_OBJECTS) $(test_arithmetic_long_DEPENDENCIES) $(EXTRA_test_arithmetic_long_DEPENDENCIES)
	@rm -f test_arithmetic_long$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_arithmetic_long_OBJECTS) $(test_arithmetic_long_LDADD) $(LIBS)

test_ddt$(EXEEXT): $(test_ddt_OBJECTS) $(test_ddt_DEPENDENCIES) $(EXTRA_test_ddt_DEPENDENCIES)
	@rm -f test_ddt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ddt_OBJECTS) $(test_ddt_LDADD) $(LIBS)

test_exchanger_parallel$(EXEEXT): $(test_exchanger_parallel_OBJECTS) $(test_exchanger_parallel_DEPENDENCIES) $(EXTRA_test_exchanger_parallel_DEPENDENCIES)
	@rm -f test_exchanger_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_exchanger_parallel_OBJECTS) $(test_exchanger_parallel_LDADD) $(LIBS)

test_idxempty$(EXEEXT): $(test_idxempty_OBJECTS) $(test_idxempty_DEPENDENCIES) $(EXTRA_test_idxempty_DEPENDENCIES)
	@rm -f test_idxempty$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_idxempty_OBJECTS) $(test_idxempty_LDADD) $(LIBS)

test_idxempty_f$(EXEEXT): $(test_idxempty_f_OBJECTS) $(test_idxempty_f_DEPENDENCIES) $(EXTRA_test_idxempty_f_DEPENDENCIES)
	@rm -f test_idxempty_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_idxempty_f_OBJECTS) $(test_idxempty_f_LDADD) $(LIBS)

test_idxlist_collection$(EXEEXT): $(test_idxlist_collection_OBJECTS) $(test_idxlist_collection_DEPENDENCIES) $(EXTRA_test_idxlist_collection_DEPENDENCIES)
	@rm -f test_idxlist_collection$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_idxlist_collection_OBJECTS) $(test_idxlist_collection_LDADD) $(LIBS)

test_idxlist_collection_f$(EXEEXT): $(test_idxlist_collection_f_OBJECTS) $(test_idxlist_collection_f_DEPENDENCIES) $(EXTRA_test_idxlist_collection_f_DEPENDENCIES)
	@rm -f test_idxlist_collection_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_idxlist_collection_f_OBJECTS) $(test_idxlist_collection_f_LDADD) $(LIBS)

test_idxmod$(EXEEXT): $(test_idxmod_OBJECTS) $(test_idxmod_DEPENDENCIES) $(EXTRA_test_idxmod_DEPENDENCIES)
	@rm -f test_idxmod$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_idxmod_OBJECTS) $(test_idxmod_LDADD) $(LIBS)

test_idxmod_f$(EXEEXT): $(test_idxmod_f_OBJECTS) $(test_idxmod_f_DEPENDENCIES) $(EXTRA_test_idxmod_f_DEPENDENCIES)
	@rm -f test_idxmod_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_idxmod_f_OBJECTS) $(test_idxmod_f_LDADD) $(LIBS)

test_idxsection$(EXEEXT): $(test_idxsection_OBJECTS) $(test_idxsection_DEPENDENCIES) $(EXTRA_test_idxsection_DEPENDENCIES)
	@rm -f test_idxsection$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_idxsection_OBJECTS) $(test_idxsection_LDADD) $(LIBS)

test_idxsection_f$(EXEEXT): $(test_idxsection_f_OBJECTS) $(test_idxsection_f_DEPENDENCIES) $(EXTRA_test_idxsection_f_DEPENDENCIES)
	@rm -f test_idxsection_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_idxsection_f_OBJECTS) $(test_idxsection_f_LDADD) $(LIBS)

test_idxstripes$(EXEEXT): $(test_idxstripes_OBJECTS) $(test_idxstripes_DEPENDENCIES) $(EXTRA_test_idxstripes_DEPENDENCIES)
	@rm -f test_idxstripes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_idxstripes_OBJECTS) $(test_idxstripes_LDADD) $(LIBS)

test_idxstripes_f$(EXEEXT): $(test_idxstripes_f_OBJECTS) $(test_idxstripes_f_DEPENDENCIES) $(EXTRA_test_idxstripes_f_DEPENDENCIES)
	@rm -f test_idxstripes_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_idxstripes_f_OBJECTS) $(test_idxstripes_f_LDADD) $(LIBS)

test_idxvec$(EXEEXT): $(test_idxvec_OBJECTS) $(test_idxvec_DEPENDENCIES) $(EXTRA_test_idxvec_DEPENDENCIES)
	@rm -f test_idxvec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_idxvec_OBJECTS) $(test_idxvec_LDADD) $(LIBS)

test_idxvec_f$(EXEEXT): $(test_idxvec_f_OBJECTS) $(test_idxvec_f_DEPENDENCIES) $(EXTRA_test_idxvec_f_DEPENDENCIES)
	@rm -f test_idxvec_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_idxvec_f_OBJECTS) $(test_idxvec_f_LDADD) $(LIBS)

test_initialized_finalized$(EXEEXT): $(test_initialized_finalized_OBJECTS) $(test_initialized_finalized_DEPENDENCIES) $(EXTRA_test_initialized_finalized_DEPENDENCIES)
	@rm -f test_initialized_finalized$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_initialized_finalized_OBJECTS) $(test_initialized_finalized_LDADD) $(LIBS)

test_initialized_finalized_f$(EXEEXT): $(test_initialized_finalized_f_OBJECTS) $(test_initialized_finalized_f_DEPENDENCIES) $(EXTRA_test_initialized_finalized_f_DEPENDENCIES)
	@rm -f test_initialized_finalized_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_initialized_finalized_f_OBJECTS) $(test_initialized_finalized_f_LDADD) $(LIBS)

test_misc_f$(EXEEXT): $(test_misc_f_OBJECTS) $(test_misc_f_DEPENDENCIES) $(EXTRA_test_misc_f_DEPENDENCIES)
	@rm -f test_misc_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_misc_f_OBJECTS) $(test_misc_f_LDADD) $(LIBS)

test_mpi_generate_datatype$(EXEEXT): $(test_mpi_generate_datatype_OBJECTS) $(test_mpi_generate_datatype_DEPENDENCIES) $(EXTRA_test_mpi_generate_datatype_DEPENDENCIES)
	@rm -f test_mpi_generate_datatype$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_mpi_generate_datatype_OBJECTS) $(test_mpi_generate_datatype_LDADD) $(LIBS)

test_mpi_smartdedup$(EXEEXT): $(test_mpi_smartdedup_OBJECTS) $(test_mpi_smartdedup_DEPENDENCIES) $(EXTRA_test_mpi_smartdedup_DEPENDENCIES)
	@rm -f test_mpi_smartdedup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_mpi_smartdedup_OBJECTS) $(test_mpi_smartdedup_LDADD) $(LIBS)

test_perf$(EXEEXT): $(test_perf_OBJECTS) $(test_perf_DEPENDENCIES) $(EXTRA_test_perf_DEPENDENCIES)
	@rm -f test_perf$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_perf_OBJECTS) $(test_perf_LDADD) $(LIBS)

test_perf_stripes$(EXEEXT): $(test_perf_stripes_OBJECTS) $(test_perf_stripes_DEPENDENCIES) $(EXTRA_test_perf_stripes_DEPENDENCIES)
	@rm -f test_perf_stripes$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_perf_stripes_OBJECTS) $(test_perf_stripes_LDADD) $(LIBS)

test_redist_collection$(EXEEXT): $(test_redist_collection_OBJECTS) $(test_redist_collection_DEPENDENCIES) $(EXTRA_test_redist_collection_DEPENDENCIES)
	@rm -f test_redist_collection$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_collection_OBJECTS) $(test_redist_collection_LDADD) $(LIBS)

test_redist_collection_f$(EXEEXT): $(test_redist_collection_f_OBJECTS) $(test_redist_collection_f_DEPENDENCIES) $(EXTRA_test_redist_collection_f_DEPENDENCIES)
	@rm -f test_redist_collection_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_collection_f_OBJECTS) $(test_redist_collection_f_LDADD) $(LIBS)

test_redist_collection_parallel$(EXEEXT): $(test_redist_collection_parallel_OBJECTS) $(test_redist_collection_parallel_DEPENDENCIES) $(EXTRA_test_redist_collection_parallel_DEPENDENCIES)
	@rm -f test_redist_collection_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_collection_parallel_OBJECTS) $(test_redist_collection_parallel_LDADD) $(LIBS)

test_redist_collection_parallel_f$(EXEEXT): $(test_redist_collection_parallel_f_OBJECTS) $(test_redist_collection_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_collection_parallel_f_DEPENDENCIES)
	@rm -f test_redist_collection_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_collection_parallel_f_OBJECTS) $(test_redist_collection_parallel_f_LDADD) $(LIBS)

test_redist_collection_static$(EXEEXT): $(test_redist_collection_static_OBJECTS) $(test_redist_collection_static_DEPENDENCIES) $(EXTRA_test_redist_collection_static_DEPENDENCIES)
	@rm -f test_redist_collection_static$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_collection_static_OBJECTS) $(test_redist_collection_static_LDADD) $(LIBS)

test_redist_collection_static_f$(EXEEXT): $(test_redist_collection_static_f_OBJECTS) $(test_redist_collection_static_f_DEPENDENCIES) $(EXTRA_test_redist_collection_static_f_DEPENDENCIES)
	@rm -f test_redist_collection_static_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_collection_static_f_OBJECTS) $(test_redist_collection_static_f_LDADD) $(LIBS)

test_redist_collection_static_parallel$(EXEEXT): $(test_redist_collection_static_parallel_OBJECTS) $(test_redist_collection_static_parallel_DEPENDENCIES) $(EXTRA_test_redist_collection_static_parallel_DEPENDENCIES)
	@rm -f test_redist_collection_static_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_collection_static_parallel_OBJECTS) $(test_redist_collection_static_parallel_LDADD) $(LIBS)

test_redist_collection_static_parallel_f$(EXEEXT): $(test_redist_collection_static_parallel_f_OBJECTS) $(test_redist_collection_static_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_collection_static_parallel_f_DEPENDENCIES)
	@rm -f test_redist_collection_static_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_collection_static_parallel_f_OBJECTS) $(test_redist_collection_static_parallel_f_LDADD) $(LIBS)

test_redist_p2p$(EXEEXT): $(test_redist_p2p_OBJECTS) $(test_redist_p2p_DEPENDENCIES) $(EXTRA_test_redist_p2p_DEPENDENCIES)
	@rm -f test_redist_p2p$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_p2p_OBJECTS) $(test_redist_p2p_LDADD) $(LIBS)

test_redist_p2p_f$(EXEEXT): $(test_redist_p2p_f_OBJECTS) $(test_redist_p2p_f_DEPENDENCIES) $(EXTRA_test_redist_p2p_f_DEPENDENCIES)
	@rm -f test_redist_p2p_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_p2p_f_OBJECTS) $(test_redist_p2p_f_LDADD) $(LIBS)

test_redist_p2p_parallel$(EXEEXT): $(test_redist_p2p_parallel_OBJECTS) $(test_redist_p2p_parallel_DEPENDENCIES) $(EXTRA_test_redist_p2p_parallel_DEPENDENCIES)
	@rm -f test_redist_p2p_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_p2p_parallel_OBJECTS) $(test_redist_p2p_parallel_LDADD) $(LIBS)

test_redist_p2p_parallel_f$(EXEEXT): $(test_redist_p2p_parallel_f_OBJECTS) $(test_redist_p2p_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_p2p_parallel_f_DEPENDENCIES)
	@rm -f test_redist_p2p_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_p2p_parallel_f_OBJECTS) $(test_redist_p2p_parallel_f_LDADD) $(LIBS)

test_redist_repeat$(EXEEXT): $(test_redist_repeat_OBJECTS) $(test_redist_repeat_DEPENDENCIES) $(EXTRA_test_redist_repeat_DEPENDENCIES)
	@rm -f test_redist_repeat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_repeat_OBJECTS) $(test_redist_repeat_LDADD) $(LIBS)

test_redist_repeat_f$(EXEEXT): $(test_redist_repeat_f_OBJECTS) $(test_redist_repeat_f_DEPENDENCIES) $(EXTRA_test_redist_repeat_f_DEPENDENCIES)
	@rm -f test_redist_repeat_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_repeat_f_OBJECTS) $(test_redist_repeat_f_LDADD) $(LIBS)

test_redist_repeat_parallel$(EXEEXT): $(test_redist_repeat_parallel_OBJECTS) $(test_redist_repeat_parallel_DEPENDENCIES) $(EXTRA_test_redist_repeat_parallel_DEPENDENCIES)
	@rm -f test_redist_repeat_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_repeat_parallel_OBJECTS) $(test_redist_repeat_parallel_LDADD) $(LIBS)

test_redist_repeat_parallel_f$(EXEEXT): $(test_redist_repeat_parallel_f_OBJECTS) $(test_redist_repeat_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_repeat_parallel_f_DEPENDENCIES)
	@rm -f test_redist_repeat_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_repeat_parallel_f_OBJECTS) $(test_redist_repeat_parallel_f_LDADD) $(LIBS)

test_redist_single_array_base$(EXEEXT): $(test_redist_single_array_base_OBJECTS) $(test_redist_single_array_base_DEPENDENCIES) $(EXTRA_test_redist_single_array_base_DEPENDENCIES)
	@rm -f test_redist_single_array_base$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_single_array_base_OBJECTS) $(test_redist_single_array_base_LDADD) $(LIBS)

test_redist_single_array_base_f$(EXEEXT): $(test_redist_single_array_base_f_OBJECTS) $(test_redist_single_array_base_f_DEPENDENCIES) $(EXTRA_test_redist_single_array_base_f_DEPENDENCIES)
	@rm -f test_redist_single_array_base_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_single_array_base_f_OBJECTS) $(test_redist_single_array_base_f_LDADD) $(LIBS)

test_redist_single_array_base_parallel$(EXEEXT): $(test_redist_single_array_base_parallel_OBJECTS) $(test_redist_single_array_base_parallel_DEPENDENCIES) $(EXTRA_test_redist_single_array_base_parallel_DEPENDENCIES)
	@rm -f test_redist_single_array_base_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_redist_single_array_base_parallel_OBJECTS) $(test_redist_single_array_base_parallel_LDADD) $(LIBS)

test_redist_single_array_base_parallel_f$(EXEEXT): $(test_redist_single_array_base_parallel_f_OBJECTS) $(test_redist_single_array_base_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_single_array_base_parallel_f_DEPENDENCIES)
	@rm -f test_redist_single_array_base_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_redist_single_array_base_parallel_f_OBJECTS) $(test_redist_single_array_base_parallel_f_LDADD) $(LIBS)

test_request_parallel$(EXEEXT): $(test_request_parallel_OBJECTS) $(test_request_parallel_DEPENDENCIES) $(EXTRA_test_request_parallel_DEPENDENCIES)
	@rm -f test_request_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_request_parallel_OBJECTS) $(test_request_parallel_LDADD) $(LIBS)

test_sort$(EXEEXT): $(test_sort_OBJECTS) $(test_sort_DEPENDENCIES) $(EXTRA_test_sort_DEPENDENCIES)
	@rm -f test_sort$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_sort_OBJECTS) $(test_sort_LDADD) $(LIBS)

test_sort_f$(EXEEXT): $(test_sort_f_OBJECTS) $(test_sort_f_DEPENDENCIES) $(EXTRA_test_sort_f_DEPENDENCIES)
	@rm -f test_sort_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_sort_f_OBJECTS) $(test_sort_f_LDADD) $(LIBS)

test_uid$(EXEEXT): $(test_uid_OBJECTS) $(test_uid_DEPENDENCIES) $(EXTRA_test_uid_DEPENDENCIES)
	@rm -f test_uid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_uid_OBJECTS) $(test_uid_LDADD) $(LIBS)

test_ut$(EXEEXT): $(test_ut_OBJECTS) $(test_ut_DEPENDENCIES) $(EXTRA_test_ut_DEPENDENCIES)
	@rm -f test_ut$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_ut_OBJECTS) $(test_ut_LDADD) $(LIBS)

test_xmap_all2all$(EXEEXT): $(test_xmap_all2all_OBJECTS) $(test_xmap_all2all_DEPENDENCIES) $(EXTRA_test_xmap_all2all_DEPENDENCIES)
	@rm -f test_xmap_all2all$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_all2all_OBJECTS) $(test_xmap_all2all_LDADD) $(LIBS)

test_xmap_all2all_f$(EXEEXT): $(test_xmap_all2all_f_OBJECTS) $(test_xmap_all2all_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_f_DEPENDENCIES)
	@rm -f test_xmap_all2all_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_all2all_f_OBJECTS) $(test_xmap_all2all_f_LDADD) $(LIBS)

test_xmap_all2all_fail$(EXEEXT): $(test_xmap_all2all_fail_OBJECTS) $(test_xmap_all2all_fail_DEPENDENCIES) $(EXTRA_test_xmap_all2all_fail_DEPENDENCIES)
	@rm -f test_xmap_all2all_fail$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_all2all_fail_OBJECTS) $(test_xmap_all2all_fail_LDADD) $(LIBS)

test_xmap_all2all_fail_f$(EXEEXT): $(test_xmap_all2all_fail_f_OBJECTS) $(test_xmap_all2all_fail_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_fail_f_DEPENDENCIES)
	@rm -f test_xmap_all2all_fail_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_all2all_fail_f_OBJECTS) $(test_xmap_all2all_fail_f_LDADD) $(LIBS)

test_xmap_all2all_intercomm_parallel$(EXEEXT): $(test_xmap_all2all_intercomm_parallel_OBJECTS) $(test_xmap_all2all_intercomm_parallel_DEPENDENCIES) $(EXTRA_test_xmap_all2all_intercomm_parallel_DEPENDENCIES)
	@rm -f test_xmap_all2all_intercomm_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_all2all_intercomm_parallel_OBJECTS) $(test_xmap_all2all_intercomm_parallel_LDADD) $(LIBS)

test_xmap_all2all_intercomm_parallel_f$(EXEEXT): $(test_xmap_all2all_intercomm_parallel_f_OBJECTS) $(test_xmap_all2all_intercomm_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_intercomm_parallel_f_DEPENDENCIES)
	@rm -f test_xmap_all2all_intercomm_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_all2all_intercomm_parallel_f_OBJECTS) $(test_xmap_all2all_intercomm_parallel_f_LDADD) $(LIBS)

test_xmap_all2all_parallel$(EXEEXT): $(test_xmap_all2all_parallel_OBJECTS) $(test_xmap_all2all_parallel_DEPENDENCIES) $(EXTRA_test_xmap_all2all_parallel_DEPENDENCIES)
	@rm -f test_xmap_all2all_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_all2all_parallel_OBJECTS) $(test_xmap_all2all_parallel_LDADD) $(LIBS)

test_xmap_all2all_parallel_f$(EXEEXT): $(test_xmap_all2all_parallel_f_OBJECTS) $(test_xmap_all2all_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_parallel_f_DEPENDENCIES)
	@rm -f test_xmap_all2all_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_all2all_parallel_f_OBJECTS) $(test_xmap_all2all_parallel_f_LDADD) $(LIBS)

test_xmap_dist_dir$(EXEEXT): $(test_xmap_dist_dir_OBJECTS) $(test_xmap_dist_dir_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_DEPENDENCIES)
	@rm -f test_xmap_dist_dir$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_dist_dir_OBJECTS) $(test_xmap_dist_dir_LDADD) $(LIBS)

test_xmap_dist_dir_f$(EXEEXT): $(test_xmap_dist_dir_f_OBJECTS) $(test_xmap_dist_dir_f_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_f_DEPENDENCIES)
	@rm -f test_xmap_dist_dir_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_dist_dir_f_OBJECTS) $(test_xmap_dist_dir_f_LDADD) $(LIBS)

test_xmap_dist_dir_intercomm_parallel$(EXEEXT): $(test_xmap_dist_dir_intercomm_parallel_OBJECTS) $(test_xmap_dist_dir_intercomm_parallel_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_intercomm_parallel_DEPENDENCIES)
	@rm -f test_xmap_dist_dir_intercomm_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_dist_dir_intercomm_parallel_OBJECTS) $(test_xmap_dist_dir_intercomm_parallel_LDADD) $(LIBS)

test_xmap_dist_dir_intercomm_parallel_f$(EXEEXT): $(test_xmap_dist_dir_intercomm_parallel_f_OBJECTS) $(test_xmap_dist_dir_intercomm_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_intercomm_parallel_f_DEPENDENCIES)
	@rm -f test_xmap_dist_dir_intercomm_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_dist_dir_intercomm_parallel_f_OBJECTS) $(test_xmap_dist_dir_intercomm_parallel_f_LDADD) $(LIBS)

test_xmap_dist_dir_parallel$(EXEEXT): $(test_xmap_dist_dir_parallel_OBJECTS) $(test_xmap_dist_dir_parallel_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_parallel_DEPENDENCIES)
	@rm -f test_xmap_dist_dir_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_dist_dir_parallel_OBJECTS) $(test_xmap_dist_dir_parallel_LDADD) $(LIBS)

test_xmap_dist_dir_parallel_f$(EXEEXT): $(test_xmap_dist_dir_parallel_f_OBJECTS) $(test_xmap_dist_dir_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_parallel_f_DEPENDENCIES)
	@rm -f test_xmap_dist_dir_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_dist_dir_parallel_f_OBJECTS) $(test_xmap_dist_dir_parallel_f_LDADD) $(LIBS)

test_xmap_intersection_parallel$(EXEEXT): $(test_xmap_intersection_parallel_OBJECTS) $(test_xmap_intersection_parallel_DEPENDENCIES) $(EXTRA_test_xmap_intersection_parallel_DEPENDENCIES)
	@rm -f test_xmap_intersection_parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_xmap_intersection_parallel_OBJECTS) $(test_xmap_intersection_parallel_LDADD) $(LIBS)

test_xmap_intersection_parallel_f$(EXEEXT): $(test_xmap_intersection_parallel_f_OBJECTS) $(test_xmap_intersection_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_intersection_parallel_f_DEPENDENCIES)
	@rm -f test_xmap_intersection_parallel_f$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_xmap_intersection_parallel_f_OBJECTS) $(test_xmap_intersection_parallel_f_LDADD) $(LIBS)

test_yaxt$(EXEEXT): $(test_yaxt_OBJECTS) $(test_yaxt_DEPENDENCIES) $(EXTRA_test_yaxt_DEPENDENCIES)
	@rm -f test_yaxt$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_yaxt_OBJECTS) $(test_yaxt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cksum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctest_common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ftest_common_c.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_arithmetic_long.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ddt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_exchanger_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxempty.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxlist_collection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxlist_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxmod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxsection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxstripes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_initialized_finalized.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpi_generate_datatype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpi_smartdedup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection_static.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection_static_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_p2p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_p2p_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_repeat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_repeat_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_single_array_base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_single_array_base_common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_single_array_base_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_request_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_uid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all_fail.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all_intercomm_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_common_intercomm_parallel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_common_parallel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_dist_dir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_dist_dir_intercomm_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_dist_dir_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_intersection_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_LTLIBRARIES) $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_misc_run.log: test_misc_run
	@p='test_misc_run'; \
	b='test_misc_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_mpi_generate_datatype_run.log: test_mpi_generate_datatype_run
	@p='test_mpi_generate_datatype_run'; \
	b='test_mpi_generate_datatype_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_mpi_smartdedup_run.log: test_mpi_smartdedup_run
	@p='test_mpi_smartdedup_run'; \
	b='test_mpi_smartdedup_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_exchanger_parallel_run.log: test_exchanger_parallel_run
	@p='test_exchanger_parallel_run'; \
	b='test_exchanger_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_arithmetic_long.log: test_arithmetic_long$(EXEEXT)
	@p='test_arithmetic_long$(EXEEXT)'; \
	b='test_arithmetic_long'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_idxempty_run.log: test_idxempty_run
	@p='test_idxempty_run'; \
	b='test_idxempty_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_idxvec_run.log: test_idxvec_run
	@p='test_idxvec_run'; \
	b='test_idxvec_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_idxlist_collection_run.log: test_idxlist_collection_run
	@p='test_idxlist_collection_run'; \
	b='test_idxlist_collection_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_idxmod_run.log: test_idxmod_run
	@p='test_idxmod_run'; \
	b='test_idxmod_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_idxsection_run.log: test_idxsection_run
	@p='test_idxsection_run'; \
	b='test_idxsection_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_idxstripes_run.log: test_idxstripes_run
	@p='test_idxstripes_run'; \
	b='test_idxstripes_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_single_array_base_run.log: test_redist_single_array_base_run
	@p='test_redist_single_array_base_run'; \
	b='test_redist_single_array_base_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_single_array_base_parallel_run.log: test_redist_single_array_base_parallel_run
	@p='test_redist_single_array_base_parallel_run'; \
	b='test_redist_single_array_base_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_p2p_run.log: test_redist_p2p_run
	@p='test_redist_p2p_run'; \
	b='test_redist_p2p_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_collection_run.log: test_redist_collection_run
	@p='test_redist_collection_run'; \
	b='test_redist_collection_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_collection_parallel_run.log: test_redist_collection_parallel_run
	@p='test_redist_collection_parallel_run'; \
	b='test_redist_collection_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_collection_static_run.log: test_redist_collection_static_run
	@p='test_redist_collection_static_run'; \
	b='test_redist_collection_static_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_collection_static_parallel_run.log: test_redist_collection_static_parallel_run
	@p='test_redist_collection_static_parallel_run'; \
	b='test_redist_collection_static_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_p2p_parallel_run.log: test_redist_p2p_parallel_run
	@p='test_redist_p2p_parallel_run'; \
	b='test_redist_p2p_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_repeat_run.log: test_redist_repeat_run
	@p='test_redist_repeat_run'; \
	b='test_redist_repeat_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_redist_repeat_parallel_run.log: test_redist_repeat_parallel_run
	@p='test_redist_repeat_parallel_run'; \
	b='test_redist_repeat_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_request_parallel_run.log: test_request_parallel_run
	@p='test_request_parallel_run'; \
	b='test_request_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_all2all_run.log: test_xmap_all2all_run
	@p='test_xmap_all2all_run'; \
	b='test_xmap_all2all_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_all2all_fail_run.log: test_xmap_all2all_fail_run
	@p='test_xmap_all2all_fail_run'; \
	b='test_xmap_all2all_fail_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_all2all_parallel_run.log: test_xmap_all2all_parallel_run
	@p='test_xmap_all2all_parallel_run'; \
	b='test_xmap_all2all_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_all2all_intercomm_parallel_run.log: test_xmap_all2all_intercomm_parallel_run
	@p='test_xmap_all2all_intercomm_parallel_run'; \
	b='test_xmap_all2all_intercomm_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_dist_dir_run.log: test_xmap_dist_dir_run
	@p='test_xmap_dist_dir_run'; \
	b='test_xmap_dist_dir_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_dist_dir_parallel_run.log: test_xmap_dist_dir_parallel_run
	@p='test_xmap_dist_dir_parallel_run'; \
	b='test_xmap_dist_dir_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_dist_dir_intercomm_parallel_run.log: test_xmap_dist_dir_intercomm_parallel_run
	@p='test_xmap_dist_dir_intercomm_parallel_run'; \
	b='test_xmap_dist_dir_intercomm_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_xmap_intersection_parallel_run.log: test_xmap_intersection_parallel_run
	@p='test_xmap_intersection_parallel_run'; \
	b='test_xmap_intersection_parallel_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_initialized_finalized_run.log: test_initialized_finalized_run
	@p='test_initialized_finalized_run'; \
	b='test_initialized_finalized_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_exported_symbols.log: test_exported_symbols
	@p='test_exported_symbols'; \
	b='test_exported_symbols'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ut_run.log: test_ut_run
	@p='test_ut_run'; \
	b='test_ut_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_perf_run.log: test_perf_run
	@p='test_perf_run'; \
	b='test_perf_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_perf_stripes_run.log: test_perf_stripes_run
	@p='test_perf_stripes_run'; \
	b='test_perf_stripes_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_sort_run.log: test_sort_run
	@p='test_sort_run'; \
	b='test_sort_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_uid_run.log: test_uid_run
	@p='test_uid_run'; \
	b='test_uid_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_yaxt_run.log: test_yaxt_run
	@p='test_yaxt_run'; \
	b='test_yaxt_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ddt_run.log: test_ddt_run
	@p='test_ddt_run'; \
	b='test_ddt_run'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


@with_on_demand_check_programs_FALSE@all: $(check_LTLIBRARIES) $(check_PROGRAMS)

@ifGNUmake@../src/%.lo: ../src/%.c
@ifGNUmake@	$(MAKE) -C ../src $(notdir $@)

@with_fortran_TRUE@./$(DEPDIR)/FC.deps: $(SOURCES) Makefile
@with_fortran_TRUE@	@unique=`for i in $(SOURCES); do \
@with_fortran_TRUE@	  if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
@with_fortran_TRUE@	  done | grep '\.f90$$' ` ; \
@with_fortran_TRUE@	  libnamerewriterules=`for i in $(libtestutil_f_la_OBJECTS); do \
@with_fortran_TRUE@	  echo "$$i" | sed -e 'h;s/^/--obj-transform-name=/' \
@with_fortran_TRUE@	  -e 's/\.lo$$/\.f90$$/;s/$$/=/;G;s/\n//' ; done` ; \
@with_fortran_TRUE@	  FC="$(FC)" FPP="$(FPP)" \
@with_fortran_TRUE@	  $(PERL) -I$(top_srcdir)/scripts \
@with_fortran_TRUE@	  $(top_srcdir)/scripts/makef90depends \
@with_fortran_TRUE@	  --ignore-module=iso_c_binding --ignore-module=mpi \
@with_fortran_TRUE@	  --fc-mod-flag=$(FC_MOD_FLAG) --fc-def-opt=$(FPP_DEFOPT) \
@with_fortran_TRUE@	  --fc-inc-flag=$(FPP_INCOPT) --fc-mod-suf='.$(FCMODEXT)' \
@with_fortran_TRUE@	  --fc-mod-case=$(FCMODCASE) --prog-fpp='$(FPP)' \
@with_fortran_TRUE@	  --fpp-sizeof-int=$(C_SIZEOF_INT) \
@with_fortran_TRUE@	  --fpp-sizeof-long=$(C_SIZEOF_LONG) \
@with_fortran_TRUE@	  --fpp-sizeof-long-long=$(C_SIZEOF_LONG_LONG) \
@with_fortran_TRUE@	  --fpp-char-is-`test $(C_CHAR_IS_UNSIGNED) = 0 || echo un`signed \
@with_fortran_TRUE@	  --strip-obj-dirname --parse-cache=./$(DEPDIR)/FC.depdb \
@with_fortran_TRUE@	  $$libnamerewriterules \
@with_fortran_TRUE@	  --obj-transform-name='\.f90$$=.$(OBJEXT)' -- \
@with_fortran_TRUE@	  $(AM_FCFLAGS) $(FCFLAGS) $(FPPFLAGS) -- $$unique \
@with_fortran_TRUE@	  >./$(DEPDIR)/FC.deps.temp && \
@with_fortran_TRUE@	cmp ./$(DEPDIR)/FC.deps.temp ./$(DEPDIR)/FC.deps >/dev/null 2>&1 \
@with_fortran_TRUE@	  || ln -f ./$(DEPDIR)/FC.deps.temp ./$(DEPDIR)/FC.deps

@with_fortran_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FC.deps@am__quote@ # am--include-marker

clean-local:
	-rm -f *.$(FCMODEXT) *.i *.dbg
	-rm -rf *.dSYM

# When an out-of-source build takes place, the 'distclean' recipe of the
# top-level Makefile expects the directory containing this Makefile to be
# empty as soon as its 'distclean' recipe is executed. This is not the case
# when the Makefile is generated with Automake 1.16 or later because the
# $(DEPDIR) subdirectory is not deleted. Therefore, we delete it explicitly
# as the older versions of Automake do.
distclean-local:
	-rm -rf '$(DEPDIR)'

#
# Local Variables:
# coding: utf-8
# show-trailing-whitespace: t
# End:
#

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
