#!/bin/sh
#
# make_oasis_mistral.sh - Make file to compile OASIS in DKRZ HLRE Mistral
# 
# Copyright (C) 2021, Institute of Coastal Systems - Analysis and Modelling, Helmholtz-Zentrum Hereon
# SPDX-License-Identifier: Apache-2.0
# See ./LICENSES/ for license information
#
# Authors: Ha Ho-Hagemann
# Contact: <ha.hagemann@hereon.de>
#_________________________________________
#
#module load gcc/6.4.0
#module load intel/17.0.6
#module load openmpi/2.0.2p2_hpcx-intel14
#
# Include file for OASIS3 Makefile adapted to  ECMWF's IBM power4 system.
#
###############################################################################
#
# Needed to work with SCE Makefile
#
COUPLE          = @{OASIS_DIR}
I4mods          = I
#
# CHAN : MPI1/MPI2
CHAN            = MPI1
#
# Paths for libraries, object files and binaries
#
# PRISMHOME     : path for the root of prism directory tree, can be anywhere
# ARCHDIR       : directory created when compiling
# LIBPSMILE     : list of oasis3-mct libraries
# PSMILE_INCDIR : includes all *o and *mod for each library
# BINDIR        : directory for executables
# LIBBUILD      : contains a directory for each library
#
PRISMHOME       = $(COUPLE)
ARCHDIR         = $(PRISMHOME)/Linux
LIBPSMILE	= $(ARCHDIR)/lib/libanaisg.a $(ARCHDIR)/lib/libanaism.a $(ARCHDIR)/lib/libclim.$(CHAN).a $(ARCHDIR)/lib/libpsmile.$(CHAN).a $(ARCHDIR)/lib/libfscint.a $(ARCHDIR)/lib/libscrip.a
PSMILE_INCDIR   = -I$(LIBBUILD)/psmile.$(CHAN) -I$(LIBBUILD)/clim.$(CHAN)
BINDIR          = $(ARCHDIR)/bin
LIBBUILD        = $(ARCHDIR)/build/lib
#
# MPI library
#MPIDIR      = $(MPI_HOME)
#MPIDIR = /cm/shared/apps/mvapich2/pgi-12.5/1.8-r5435
#MPIBIN      = $(MPIDIR)/bin
#MPI_INCLUDE = $(MPIDIR)/include
#MPILIB      = -L$(MPIDIR)/lib -lmpi_f90 -lmpi
#
#  NETCDF library
NETCDF_INCLUDE  = @{NETCDFF_DIR}/include
NETCDF_LIBRARY  = `@{NETCDFF_DIR}/bin/nf-config --flibs`
#
# Compiling and other commands
MAKE        = gmake
F90         = mpif90  
F           = $(F90)
f90         = $(F90)
f           = $(F90)
CC          = mpicc
LD          = 
AR          = xiar
ARFLAGS     = -ruv
#
#
#
# compiler options and cpp keys
# 
CPPDEF    = -Duse_libMPI -Duse_netCDF -Duse_comm_$(CHAN) -DTREAT_OVERLAY -D__VERBOSE -DDEBUG
#F90FLAGS_1  =  -gdwarf-4 -g -march=native -pc64 -fp-model source
F90FLAGS_1  =  -O3 -r8 -mcmodel=medium -fp-model source
f90FLAGS_1  = $(F90FLAGS_1)
FFLAGS_1    = $(F90FLAGS_1)
fFLAGS_1    = $(F90FLAGS_1)
#CCFLAGS_1   = -gdwarf-4 -O3 -qno-opt-dynamic-align -ftz -march=native -g
CCFLAGS_1   =
#
# LDFLAGS     = -O2 -assume realloc_lhs -ftz
 LDFLAGS     = -r8 -O2 -shared-intel
##
## MPP_IOOPT needed for compiling mpp_io
MPP_IOOPT   = -i4 -r8
##
####################
##
## Additional definitions that should not be changed
##
FLIBS           = $(NETCDF_LIBRARY)
## BINDIR        : directory for executables
BINDIR          = $(ARCHDIR)/bin
## LIBBUILD      : contains a directory for each library
LIBBUILD        = $(ARCHDIR)/build/lib
#
F90FLAGS  = $(F90FLAGS_1) $(CPPDEF) -I$(NETCDF_INCLUDE)
f90FLAGS  = $(f90FLAGS_1) $(CPPDEF) -I$(NETCDF_INCLUDE)
FFLAGS    = $(FFLAGS_1) $(CPPDEF) -I$(NETCDF_INCLUDE)
fFLAGS    = $(fFLAGS_1) $(CPPDEF) -I$(NETCDF_INCLUDE)
CCFLAGS   = $(CCFLAGS_1) $(CPPDEF) -I$(NETCDF_INCLUDE)
#
#
#
#############################################################################
