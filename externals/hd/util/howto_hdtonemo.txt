! howto_hdtonemo.txt - Readme on how to convert HD discharges to the NEMO ocean grid 
! 
! Copyright (C) 2021, Institute of Coastal Systems - Analysis and Modelling, Helmholtz-Zentrum Hereon
! SPDX-License-Identifier: CC-BY-4.0
! See ./LICENSES/ for license information
!
! Authors: Stefan Hagemann
! Contact: <stefan.hagemann@hereon.de>
!_________________________________________

How to implement HD-to-NEMO conversion in NEMO
==============================================

1. Necessary arrays
   Read/Define  
      REAL, DIMENSION(NX,NY) :: XNEMO          ! NEMO Longitudes
      REAL, DIMENSION(NX,NY) :: YNEMO          ! NEMO Latitudes
      INTEGER, DIMENSION(NX,NY) :: MASK_SRC    ! HD mouths 0, otherwise 1
        Array with potential HD mouth points that are remapped with nearest neighbor to the NEMO grid
          so that 1 HD mouth point to exactly one box on the NEMO grid. Here, it does not matter whether
          this box is defined as land or ocean in NEMO.
      INTEGER, DIMENSION(NX,NY)) :: MASK_NEMO  ! Nemo mouths 0, otherwise 1
        Array with potential NEMO mouth points. These can be derived from the NEMO land-seamask using the 
        program  generate_mouth_nemo.f90 that is called in the script frun_hdtonemo.com.

2. Implement subroutine FINDNEMOMOUTH that is included in hdtonemo.f90.
   This should be called in the first time step of a simulation in order to calculate the arrays
      INTEGER, DIMENSION(NX,NY), INTENT(out) :: MASK_MOU   
        ! 0/1-Mask (1=Mouth) with HD mouths on the NEMO grid with a valid nearest NEMO mouth
      INTEGER, DIMENSION(NX,NY), INTENT(out) :: MASK_NEMO_FROMHD   
        ! 0/1-Mask (1=used mouth) with associated NEMO mouth points. This is a subset of MASK_NEMO.
      INTEGER, DIMENSION(NX,NY), INTENT(out) :: INDEXX     ! x-Indices of nearest NEMO mouth points
      INTEGER, DIMENSION(NX,NY), INTENT(out) :: INDEXY     ! y-Indices of nearest NEMO mouth points
        INDEXX and INDEXY are required for the redistribution of HD model discharge to the valid NEMO mouth points.
        For each valid mouth point in MASK_MOU, they provide the target indices in MASK_NEMO_FROMHD.
        The script frun_hdtonemo.com can be used to generate and write these arrays to the NETCDF files 
        hd_to_nemo_mouth.nc (MASK_MOU-> FMOU_HD_TO_NEMO, INDEXX, INDEXY) and hdmouth_on_nemo.nc (MASK_NEMO_FROMHD -> FMOU_HD_ON_NEMO).

3. Implement subroutine DIS_TO_NEMO that is included in rivdis_tonemo.f90
    This subroutine transfers the HD discharge arriving at the MASK_MOU points to the NEMO mouth points.
    Input arrays: INDEXX, INDEXY
       REAL, DIMENSION(NL,NB), INTENT(in) :: FRIV  ! HD model discharge that should be remapped to the 
          points included in MASK_MOU (or MASK_SRC) in the same way as MASK_SRC is generated.

    The subroutine yields the river discharge transfered from MASK_MOU to MASK_NEMO_FROMHD:
       REAL, DIMENSION(NX,NY), INTENT(out) :: FRIV_NEMO

    Thus, as a check in the calling routine, the following equation can be checked:
       SUM(FRIV(:,:) * MASK_MOU(:,:) = SUM(FRIV_NEMO(:,:) * MASK_NEMO_FROMHD(:,:)       

    The latter is done in the example script ftest_rivdis_tonemo.com that is calling the program rivdis_tonemo.f90,
    which reads the files hd_to_nemo_mouth.nc and hdmouth_on_nemo.nc as well as an example HD model discharge file.
    Note that in the code of rivdis_tonemo.f90, MASK_NEMO_FROMHD is just named MASK_NEMO.
