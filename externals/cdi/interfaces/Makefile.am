EXTRA_LTLIBRARIES = libcdipp.la

libcdipp_la_SOURCES = cdi.cpp cdi.hpp
libcdipp_la_LIBADD = $(top_builddir)/src/libcdi.la

test_PROGRAMS_ = CdiInfo

CdiInfo_SOURCES = CdiInfo.cpp
CdiInfo_LDADD = libcdipp.la

AM_CPPFLAGS = -I$(abs_top_srcdir)/src

all_local =
install_exec_local =
uninstall_local =
clean_local =

if ENABLE_RUBY_INTERFACE
V_MAKERUBY = $(v_MAKERUBY_@AM_V@)
v_MAKERUBY_ = $(v_MAKERUBY_@AM_DEFAULT_V@)
v_MAKERUBY_0 = 0
v_MAKERUBY_1 = 1

# For compatibility with older versions of Ruby, the recipes below redefine
# the following additional variables of the generated Makefile (this is known
# to be needed for Ruby 2.7.4 but not for Ruby 3.1.0):
#   sitearchdir='$$(sitelibdir)/$$(sitearch)'
#   sitedir='$$(rubylibprefix)/site_ruby'
#   RM='$$(RM_RF)'

.PHONY: ruby-binding
all_local += ruby-binding
ruby-binding: ruby/Cdi.la
ruby/Cdi.la: ruby/cdi_wrapper.cpp ruby/Makefile libcdipp.la
	$(AM_V_CXXLD)$(am__cd) ruby && \
	  $(MAKE) $(AM_MAKEFLAGS) \
	    prefix='$(prefix)' \
	    sitearchdir='$$(sitelibdir)/$$(sitearch)' \
	    sitedir='$$(rubylibprefix)/site_ruby' \
	    TIMESTAMP_DIR='.dirstamp' \
	    CDI_INCFLAGS='-I$(abs_srcdir)' \
	    CDI_CPPFLAGS='$(AM_CPPFLAGS) $(CPPFLAGS)' \
	    CDI_CXXFLAGS='$(AM_CXXFLAGS) -shared $(CXXFLAGS)' \
	    CDI_LDFLAGS='$(AM_LDFLAGS) -module -avoid-version $(LDFLAGS) -rpath $$(RUBYARCHDIR)' \
	    CDI_LIBS='$(LIBS)' \
	    CCDLFLAGS= \
	    CXX='$(SHELL) $(abs_top_builddir)/libtool $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX)' \
	    LDSHAREDXX='$(SHELL) $(abs_top_builddir)/libtool $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) $$(CDI_CXXFLAGS)' \
	    DLLIB='$$(TARGET).la' \
	    V='$(V_MAKERUBY)'

ruby/Makefile: $(abs_srcdir)/ruby/setup.rb Makefile
	$(AM_V_GEN)$(MKDIR_P) $(@D) && $(am__cd) $(@D) && $(RUBY) $< && \
	  $(SED) -i~ -e '/^\.cpp\.o:/s/^\.cpp\.o/.cpp.lo/;/^.SUFFIXES:/s/$$/ .lo/' \
	    -e '$$auninstall:; $$(UNINSTALL_PROG) $$(RUBYARCHDIR)/$$(DLLIB)' \
	  Makefile && rm -f Makefile~

.PHONY: ruby-install
install_exec_local += ruby-install
ruby-install: ruby-binding
	$(am__cd) ruby && \
	  $(MAKE) $(AM_MAKEFLAGS) install \
	    prefix='$(DESTDIR)$(prefix)' \
	    sitearchdir='$$(sitelibdir)/$$(sitearch)' \
	    sitedir='$$(rubylibprefix)/site_ruby' \
	    TIMESTAMP_DIR='.dirstamp$(DESTDIR)' \
	    INSTALL_PROG='$(SHELL) $(abs_top_builddir)/libtool $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG)' \
	    DLLIB='$$(TARGET).la'

.PHONY: ruby-uninstall
uninstall_local += ruby-uninstall
ruby-uninstall:
	$(am__cd) ruby && \
	  $(MAKE) $(AM_MAKEFLAGS) uninstall \
	    prefix='$(DESTDIR)$(prefix)' \
	    sitearchdir='$$(sitelibdir)/$$(sitearch)' \
	    sitedir='$$(rubylibprefix)/site_ruby' \
	    UNINSTALL_PROG='$(SHELL) $(abs_top_builddir)/libtool $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f' \
	    DLLIB='$$(TARGET).la'

.PHONY: ruby-clean
# We call with distclean to remove the generated ruby/Makefile, which is
# generated by this makefile, and should, therefore, be deleted with
# 'make clean':
clean_local += ruby-clean
ruby-clean:
	if test -f ruby/Makefile; then \
	  $(am__cd) ruby && \
	    $(MAKE) $(AM_MAKEFLAGS) distclean \
	      RM='$$(RM_RF)' \
	      DLLIB='$$(TARGET).la' \
	      CLEANOBJS='*.lo .libs .dirstamp'; \
	fi

if with_on_demand_check_programs
check_PROGRAMS = $(test_PROGRAMS_)
else !with_on_demand_check_programs
noinst_PROGRAMS = $(test_PROGRAMS_)
endif !with_on_demand_check_programs

endif ENABLE_RUBY_INTERFACE

AUTOMAKE_OPTIONS = subdir-objects
if ENABLE_PYTHON_INTERFACE

python_PYTHON = python/Cdi.py
pyexec_LTLIBRARIES = python/_Cdi.la
python__Cdi_la_SOURCES = python/cdi_wrapper.cpp
python__Cdi_la_CPPFLAGS = $(AM_CPPFLAGS) $(PYTHON_CPPFLAGS)
python__Cdi_la_CXXFLAGS = $(AM_CXXFLAGS) -shared
python__Cdi_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
python__Cdi_la_LIBADD = libcdipp.la $(PYTHON_LIBS)

if with_on_demand_check_programs
check_PROGRAMS = $(test_PROGRAMS_)
else !with_on_demand_check_programs
noinst_PROGRAMS = $(test_PROGRAMS_)
endif !with_on_demand_check_programs
endif ENABLE_PYTHON_INTERFACE

if MAINTAINER_MODE
ruby/cdi_wrapper.cpp: cdi.i cdi.hpp
	$(AM_V_GEN)$(MKDIR_P) $(@D) && $(SWIG) -ruby -c++ -globalmodule -o $@ $<

python/Cdi.py: cdi.i cdi.hpp
	$(AM_V_GEN)$(SWIG) -python -c++ -o python/cdi_wrapper.cpp $<

python/cdi_wrapper.cpp: python/Cdi.py
	$(AM_V_at)test -f $@ || rm -f $<
	$(AM_V_at)test -f $@ || $(MAKE) $(AM_MAKEFLAGS) $<
else !MAINTAINER_MODE
ruby/cdi_wrapper.cpp python/Cdi.py python/cdi_wrapper.cpp:
	@:;{ \
	  echo "ERROR: cannot generate '$@' when the maintainer mode is disabled:"; \
	  echo "       re-configure with the '--enable-maintainer-mode' option"; \
	} >&2; exit 1
endif !MAINTAINER_MODE

all-local: $(all_local)
install-exec-local: $(install_exec_local)
uninstall-local: $(uninstall_local)
clean-local: $(clean_local)

AM_TESTSUITE_SUMMARY_HEADER = ' for Ruby and Python interfaces of $(PACKAGE_STRING)'
TEST_EXTENSIONS = .run
TESTS = \
  test_cpp_nc.run \
  test_python_grb.run \
  test_python_nc.run \
  test_ruby_grb.run \
  test_ruby_nc.run

MOSTLYCLEANFILES = $(EXTRA_LTLIBRARIES)
MAINTAINERCLEANFILES = \
  python/Cdi.py \
  python/cdi_wrapper.cpp \
  ruby/cdi_wrapper.cpp

EXTRA_DIST = \
  cdi.i \
  f2003/bindGen.rb \
  python/test.py \
  ruby/cdi_wrapper.cpp \
  ruby/setup.rb \
  ruby/test.rb \
  testdata/mulval.grb \
  testdata/mulval.nc

# Compile programs using Libtool:
COMPILE = $(LTCOMPILE)
FCCOMPILE = $(LTFCCOMPILE)
PPFCCOMPILE = $(LTPPFCCOMPILE)
CXXCOMPILE = $(LTCXXCOMPILE)

# Compile *.F90 without CPPFLAGS, which are normally meant for the C compiler
# and might not be compatible with the Fortran compiler:
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
        $(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
